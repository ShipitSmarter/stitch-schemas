{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "type": "object",
  "properties": {
    "Imports": {
      "$ref": "#/definitions/Imports"
    },
    "Translations": {
      "$ref": "#/definitions/Translations"
    },
    "Request": {
      "$ref": "#/definitions/Request"
    },
    "Steps": {
      "$ref": "#/definitions/Steps"
    },
    "Response": {
      "$ref": "#/definitions/Response"
    }
  },
  "required": [
    "Response"
  ],
  "definitions": {
    "Imports": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true
    },
    "Translations": {
      "type": "array",
      "items": {
        "type": "string"
      },
      "uniqueItems": true
    },
    "Request": {
      "type": "object",
      "properties": {
        "Method": {
          "enum": [
            "POST",
            "GET"
          ]
        },
        "AuthenticationMethods": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AuthenticationMethod"
          }
        }, 
        "PreParser": {
          "type": "object",
          "$ref": "#/definitions/PreParser"
        }
      },
      "additionalProperties": false,
      "default": {
        "Method": "POST",
        "AuthenticationMethods": []
      },
      "required": [
        "AuthenticationMethods"
      ]
    },
    "AuthenticationMethod": {
      "type": "object",
      "default": {
        "Id": "",
        "Key": "",
        "Description": ""
      },
      "properties": {
        "Id": {
          "type": "string"
        },
        "Key": {
          "type": "string"
        },
        "Description": {
          "type": "string"
        }
      },
      "required": [
        "Id",
        "Key",
        "Description"
      ],
      "additionalProperties": false
    },
    "PreParser": {
      "type": "object",
      "properties": {
        "TypeName": {
          "enum": [
            "FixedWidthReport",
            "TextDelimitedReport",
            "Csv",
            "JsonWithSchema"
          ]
        },
        "ConfigurationFilePath": {
          "type": "string"
        }
      },
      "required": [
        "TypeName",
        "ConfigurationFilePath"
      ]
    },
    "Steps": {
      "type": "array",
      "uniqueItems": true,
      "items": {
        "anyOf": [
          {
            "$ref": "#/definitions/HttpStep"
          },
          {
            "$ref": "#/definitions/HttpMultipartStep"
          },
          {
            "$ref": "#/definitions/SftpStep"
          },
          {
            "$ref": "#/definitions/RenderTemplateStep"
          },
          {
            "$ref": "#/definitions/EmailStep"
          },
          {
            "$ref": "#/definitions/CacheStoreStep"
          },
          {
            "$ref": "#/definitions/CacheLoadStep"
          }
        ]
      },
      "minItems": 0
    },
    "HttpStep": {
      "type": "object",
      "default": {
        "$type": "Core.Entities.Configs.Steps.HttpConfiguration, Core",
        "Id": "",
        "Template": "",
        "Method": "POST",
        "Url": ""
      },
      "description": "Make a web-request",
      "properties": {
        "$type": {
          "enum": [
            "Core.Entities.Configs.Steps.HttpConfiguration, Core"
          ]
        },
        "Id": {
          "type": "string"
        },
        "Template": {
          "type": "string"
        },
        "EncodingName": {
          "$ref": "#/definitions/EncodingName"
        },
        "SuccessCondition": {
          "type": "string"
        },
        "StartCondition": {
          "type": "string"
        },
        "Method": {
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "HEAD",
            "OPTIONS",
            "TRACE"
          ]
        },
        "Headers": {
          "$ref": "#/definitions/Headers"
        },
        "Url": {
          "type": "string"
        }
      },
      "required": [
        "$type",
        "Id",
        "Template",
        "Method",
        "Url"
      ]
    },
    "HttpMultipartStep": {
      "type": "object",
      "default": {
        "$type": "Core.Entities.Configs.Steps.HttpMultipartConfiguration, Core",
        "Id": "",
        "Method": "POST",
        "Url": "",
        "Parts": [
          {
            "Template": ""
          }          
        ]
      },
      "description": "Make a web-request using multipart/form-data",
      "properties": {
        "$type": {
          "enum": [
            "Core.Entities.Configs.Steps.HttpMultipartConfiguration, Core"
          ]
        },
        "Id": {
          "type": "string"
        },
        "SuccessCondition": {
          "type": "string"
        },
        "StartCondition": {
          "type": "string"
        },
        "Method": {
          "enum": [
            "GET",
            "POST",
            "PUT",
            "DELETE",
            "PATCH",
            "HEAD",
            "OPTIONS",
            "TRACE"
          ]
        },
        "Headers": {
          "$ref": "#/definitions/Headers"
        },
        "Url": {
          "type": "string"
        },
        "Parts": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/MultipartContentItem"
          },
          "uniqueItems": true,
          "minItems": 1          
        }
      },
      "required": [
        "$type",
        "Id",
        "Method",
        "Url",
        "Parts"
      ]
    },
    "MultipartContentItem": {
      "type": "object",
      "default": {
        "Template": ""        
      },
      "examples": [
        {
          "Template": "my-name",
          "Headers": {
            "Content-Disposition": "form-data; name=\"username\""
          }
        },
        {
          "Template": "base64content",
          "Headers": {
            "Content-Disposition": "attachment; filename=\"somefile.pdf\"",
            "Content-Type": "application/pdf"
          },
          "OutputBase64AsBinary": true
        }
      ],
      "properties": {
        "Template": {
          "type": "string"
        },
        "Headers": {
          "$ref": "#/definitions/Headers",
          "description": "Use Content-Disposition header to set FormData, https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Disposition"
        },
        "EncodingName": {
          "$ref": "#/definitions/EncodingName"
        },
        "OutputBase64AsBinary": {
          "type": "boolean",
          "description": "When the Template is a Base64 string and you want to output binary (example PDF)"
        }
      },
      "required": [
        "Template"
      ]
    },
    "SftpStep": {
      "type": "object",
      "default": {
        "$type": "Core.Entities.Configs.Steps.SftpConfiguration, Core",
        "Id": "",
        "Template": "",
        "Host": "",
        "Port": 21,
        "Username": "",
        "Password": "",
        "Filename": ""
      },
      "description": "Put file on FTP location",
      "properties": {
        "$type": {
          "enum": [
            "Core.Entities.Configs.Steps.SftpConfiguration, Core"
          ]
        },
        "Id": {
          "type": "string"
        },
        "Template": {
          "type": "string"
        },
        "EncodingName": {
          "$ref": "#/definitions/EncodingName"
        },
        "SuccessCondition": {
          "type": "string"
        },
        "StartCondition": {
          "type": "string"
        },
        "Host": {
          "type": "string"
        },
        "Port": {
          "type": "number"
        },
        "Username": {
          "type": "string"
        },
        "Password": {
          "type": "string"
        },
        "Path": {
          "type": "string"
        },
        "Filename": {
          "type": "string"
        }
      },
      "required": [
        "$type",
        "Id",
        "Template",
        "Host",
        "Port",
        "Username",
        "Password",
        "Filename"
      ]
    },
    "RenderTemplateStep": {
      "type": "object",
      "default": {
        "$type": "Core.Entities.Configs.Steps.RenderTemplateConfiguration, Core",
        "Id": "",
        "Template": "",
        "AdditionalFiles": []
      },
      "description": "Render a template",
      "properties": {
        "$type": {
          "enum": [
            "Core.Entities.Configs.Steps.RenderTemplateConfiguration, Core"
          ]
        },
        "Id": {
          "type": "string"
        },
        "Template": {
          "type": "string"
        },
        "EncodingName": {
          "$ref": "#/definitions/EncodingName"
        },
        "SuccessCondition": {
          "type": "string"
        },
        "StartCondition": {
          "type": "string"
        },
        "AdditionalFiles": {
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      },
      "required": [
        "$type",
        "Id",
        "Template"
      ]
    },
    "EmailStep": {
      "type": "object",
      "default": {
        "$type": "Core.Entities.Configs.Steps.MailConfiguration, Core",
        "Id": "",
        "From": "",
        "To": [],
        "Subject": "",
        "Template": ""
      },
      "description": "Send an e-mail",
      "properties": {
        "$type": {
          "enum": [
            "Core.Entities.Configs.Steps.MailConfiguration, Core"
          ]
        },
        "Id": {
          "type": "string"
        },
        "From": {
          "type": "string"
        },
        "To": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "Subject": {
          "type": "string"
        },
        "Template": {
          "type": "string"
        },
        "SuccessCondition": {
          "type": "string"
        },
        "StartCondition": {
          "type": "string"
        }
      },
      "required": [
        "$type",
        "Id",
        "From",
        "To",
        "Subject",
        "Template"
      ]
    },
    "CacheStoreStep": {
      "type": "object",
      "default": {
        "$type": "Core.Entities.Configs.Steps.CacheStoreConfiguration, Core",
        "Id": "",
        "Key": "",
        "AllowOverwrite": "",
        "Template": ""
      },
      "description": "Store a model / response in the cache",
      "properties": {
        "$type": {
          "enum": [
            "Core.Entities.Configs.Steps.CacheStoreConfiguration, Core"
          ]
        },
        "Id": {
          "type": "string"
        },
        "Key": {
          "type": "string"
        },
        "AllowOverwrite": {
          "type": "boolean"
        },
        "Template": {
          "type": "string"
        },
        "SuccessCondition": {
          "type": "string"
        },
        "StartCondition": {
          "type": "string"
        }
      },
      "required": [
        "$type",
        "Id",
        "Key",
        "Template"
      ]
    },
    "CacheLoadStep": {
      "type": "object",
      "default": {
        "$type": "Core.Entities.Configs.Steps.CacheLoadConfiguration, Core",
        "Id": "",
        "Key": ""
      },
      "description": "Load a model / response from the cache",
      "properties": {
        "$type": {
          "enum": [
            "Core.Entities.Configs.Steps.CacheLoadConfiguration, Core"
          ]
        },
        "Id": {
          "type": "string"
        },
        "Key": {
          "type": "string"
        },
        "SuccessCondition": {
          "type": "string"
        },
        "StartCondition": {
          "type": "string"
        }
      },
      "required": [
        "$type",
        "Id",
        "Key"
      ]
    },
    "Response": {
      "type": "object",
      "default": {
        "Body": "{}"
      },
      "properties": {
        "Body": {
          "type": "string"
        },
        "Headers": {
          "$ref": "#/definitions/Headers"
        },
        "StatusCode": {
          "type": ["number", "string"]
        },
        "OutputType": {
          "$ref": "#/definitions/OutputType"
        }
      },
      "required": [
        "Body"
      ],
      "additionalProperties": false
    },
    "Headers": {
      "type": "object",
      "default": {
        "HEADER_NAME": "VALUE"
      },
      "additionalProperties": {
        "type": "string"
      }
    },
    "OutputType": {
      "type": "string",
      "description": "The output type of the response. This adds the appropriate header automatically, but can be overridden.",
      "default": "Json",
      "enum": [
        "Json",
        "Xml",
        "PlainText",
        "BinaryAsBase64"
      ]
    },
    "EncodingName": {
      "type:": "string",
      "description": "The output encoding name to use. Based on https://learn.microsoft.com/en-us/dotnet/api/system.text.encodinginfo.getencoding?view=net-7.0",
      "default": "utf-8",
      "enum": [
        "IBM037",
        "IBM437",
        "IBM500",
        "ASMO-708",
        "DOS-720",
        "ibm737",
        "ibm775",
        "ibm850",
        "ibm852",
        "IBM855",
        "ibm857",
        "IBM00858",
        "IBM860",
        "ibm861",
        "DOS-862",
        "IBM863",
        "IBM864",
        "IBM865",
        "cp866",
        "ibm869",
        "IBM870",
        "windows-874",
        "cp875",
        "shift_jis",
        "gb2312",
        "ks_c_5601-1987",
        "big5",
        "IBM1026",
        "IBM01047",
        "IBM01140",
        "IBM01141",
        "IBM01142",
        "IBM01143",
        "IBM01144",
        "IBM01145",
        "IBM01146",
        "IBM01147",
        "IBM01148",
        "IBM01149",
        "utf-16",
        "utf-16BE",
        "windows-1250",
        "windows-1251",
        "Windows-1252",
        "windows-1253",
        "windows-1254",
        "windows-1255",
        "windows-1256",
        "windows-1257",
        "windows-1258",
        "Johab",
        "macintosh",
        "x-mac-japanese",
        "x-mac-chinesetrad",
        "x-mac-korean",
        "x-mac-arabic",
        "x-mac-hebrew",
        "x-mac-greek",
        "x-mac-cyrillic",
        "x-mac-chinesesimp",
        "x-mac-romanian",
        "x-mac-ukrainian",
        "x-mac-thai",
        "x-mac-ce",
        "x-mac-icelandic",
        "x-mac-turkish",
        "x-mac-croatian",
        "utf-32",
        "utf-32BE",
        "x-Chinese-CNS",
        "x-cp20001",
        "x-Chinese-Eten",
        "x-cp20003",
        "x-cp20004",
        "x-cp20005",
        "x-IA5",
        "x-IA5-German",
        "x-IA5-Swedish",
        "x-IA5-Norwegian",
        "us-ascii",
        "x-cp20261",
        "x-cp20269",
        "IBM273",
        "IBM277",
        "IBM278",
        "IBM280",
        "IBM284",
        "IBM285",
        "IBM290",
        "IBM297",
        "IBM420",
        "IBM423",
        "IBM424",
        "x-EBCDIC-KoreanExtended",
        "IBM-Thai",
        "koi8-r",
        "IBM871",
        "IBM880",
        "IBM905",
        "IBM00924",
        "EUC-JP",
        "x-cp20936",
        "x-cp20949",
        "cp1025",
        "koi8-u",
        "iso-8859-1",
        "iso-8859-2",
        "iso-8859-3",
        "iso-8859-4",
        "iso-8859-5",
        "iso-8859-6",
        "iso-8859-7",
        "iso-8859-8",
        "iso-8859-9",
        "iso-8859-13",
        "iso-8859-15",
        "x-Europa",
        "iso-8859-8-i",
        "csISO2022JP",
        "iso-2022-jp",
        "iso-2022-kr",
        "x-cp50227",
        "euc-jp",
        "EUC-CN",
        "euc-kr",
        "hz-gb-2312",
        "GB18030",
        "x-iscii-de",
        "x-iscii-be",
        "x-iscii-ta",
        "x-iscii-te",
        "x-iscii-as",
        "x-iscii-or",
        "x-iscii-ka",
        "x-iscii-ma",
        "x-iscii-gu",
        "x-iscii-pa",
        "utf-7",
        "utf-8"
      ]
    }
  }
}