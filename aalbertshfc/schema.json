{
    "openapi": "3.0.4",
    "info": {
        "title": "Viya Shipping API 3.0",
        "description": "\r\n\r\n# Shipping API documentation\r\n\r\nTo create, order, and retrieve labels for Shipment and Trailer, we build the Shipping API.\r\n\r\nFor C# users also provide our `Contracts` via a [nuget package](https://www.nuget.org/packages/Viya.Shipping.Contracts).\r\n",
        "version": "v3",
        "x-logo": {
            "url": "https://viya.me/images/viya-logo.png",
            "altText": "Viya logo"
        }
    },
    "servers": [
        {
            "url": "https://{customername}.viya.me/api/shipping",
            "description": "The production API server",
            "variables": {
                "customername": {
                    "default": "demo",
                    "description": "this value is assigned by the service provider, in this example `viya.me`"
                }
            }
        }
    ],
    "paths": {
        "/v3/shipments": {
            "post": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Create a new shipment",
                "operationId": "Shipment_Create",
                "parameters": [
                    {
                        "name": "Playground",
                        "in": "query",
                        "description": "Set to true, or just include the flag to use the Playground environment",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Actual shipment information",
                    "content": {
                        "application/json": {
                            "schema": {
                                "title": "Shipment",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Shipment"
                                    }
                                ],
                                "description": "The model that defines the shipment to be created"
                            }
                        },
                        "text/json": {
                            "schema": {
                                "title": "Shipment",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Shipment"
                                    }
                                ],
                                "description": "The model that defines the shipment to be created"
                            }
                        },
                        "application/*+json": {
                            "schema": {
                                "title": "Shipment",
                                "allOf": [
                                    {
                                        "$ref": "#/components/schemas/Shipment"
                                    }
                                ],
                                "description": "The model that defines the shipment to be created"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUpdateShipmentResponse"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CreateUpdateShipmentResponse"
                                }
                            }
                        }
                    }
                }
            },
            "get": {
                "tags": [
                    "Shipment"
                ],
                "summary": "Get list of shipments based on query parameters",
                "operationId": "Shipment_GetList",
                "parameters": [
                    {
                        "name": "ExcludeHandlingUnits",
                        "in": "query",
                        "description": "Prevents the handling units from being included in the response. This increases performance on the list get.\n            \nA count of handling units on each shipment will still be included",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "ReferenceSearch",
                        "in": "query",
                        "description": "Search by all references on a shipment. This is not a partial text search. The text must be an exact match",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ConsignmentId",
                        "in": "query",
                        "description": "Filters the shipments by the consignmentId. This will return all shipments that are part of the consignment",
                        "schema": {
                            "title": "GuidNullable",
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "PageSize",
                        "in": "query",
                        "description": "Number of items per page",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "PageNumber",
                        "in": "query",
                        "description": "Page number",
                        "schema": {
                            "type": "integer",
                            "format": "int32"
                        }
                    },
                    {
                        "name": "Id",
                        "in": "query",
                        "description": "Item Id for exact match. If set then no filter is applied based on any other properties",
                        "schema": {
                            "title": "GuidNullable",
                            "type": "string",
                            "format": "uuid"
                        }
                    },
                    {
                        "name": "CreatedAfter",
                        "in": "query",
                        "description": "Item created after (gte)",
                        "schema": {
                            "title": "DateTimeNullable",
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "CreatedBefore",
                        "in": "query",
                        "description": "Item created before (lte)",
                        "schema": {
                            "title": "DateTimeNullable",
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "name": "Sort",
                        "in": "query",
                        "description": "Sort definition for the list request. Should contain field names to sort in order of importance.\nTo sort descending, prefix the field name with a minus `-` character",
                        "schema": {
                            "title": "StringList",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "Filter",
                        "in": "query",
                        "description": "Any filters. Filters should be formatted thus: PATH:VALUE\n            \ne.g. addresses.sender.CompanyName:IKEA B.V.\n            \nMultiple filters with the same key will be treated as OR conditions.\nFilters with different keys will be treated as AND conditions.\n            \nYou can add #R# prefix to the value to indicate that it should be treated as a prefix regular expression.",
                        "schema": {
                            "title": "StringList",
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    {
                        "name": "ReferenceLike",
                        "in": "query",
                        "description": "Complete or partial value of the object reference",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "SearchText",
                        "in": "query",
                        "description": "Free text field for searching shipments",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "Playground",
                        "in": "query",
                        "description": "Set to true, or just include the flag to use the Playground environment",
                        "allowEmptyValue": true,
                        "schema": {
                            "type": "boolean"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetShipmentListItemListWrapper"
                                }
                            },
                            "text/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/GetShipmentListItemListWrapper"
                                }
                            }
                        }
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "AbsoluteDateRange": {
                "title": "AbsoluteDateRange",
                "required": [
                    "start"
                ],
                "type": "object",
                "properties": {
                    "start": {
                        "title": "DateTimeOffset",
                        "type": "string",
                        "description": "The start of the date range. NOTE: Time zone specification is mandatory",
                        "format": "date-time"
                    },
                    "end": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "The end of the date range. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "A date range given in absolute datetime (including timezone information)"
            },
            "Account": {
                "title": "Account",
                "required": [
                    "reference",
                    "relationType"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Account reference code"
                    },
                    "relationType": {
                        "title": "ShipmentRelationType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentRelationType"
                            }
                        ],
                        "description": "Relation type of account"
                    }
                },
                "additionalProperties": false,
                "description": "Definition for account reference"
            },
            "Accounts": {
                "title": "Accounts",
                "required": [
                    "sender",
                    "transport"
                ],
                "type": "object",
                "properties": {
                    "sender": {
                        "title": "Account",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Account"
                            }
                        ],
                        "description": "Reference for the party that booked the shipment."
                    },
                    "transport": {
                        "title": "Account",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Account"
                            }
                        ],
                        "description": "Reference for the party that is responsible for paying the transport charges."
                    },
                    "duties": {
                        "title": "Account",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Account"
                            }
                        ],
                        "description": "Reference for the party that is responsible for paying the duties and taxes charges.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Model to hold the account references used by the carriers to identify responsible parties"
            },
            "Address": {
                "title": "Address",
                "required": [
                    "addressLine1",
                    "countryCode"
                ],
                "type": "object",
                "properties": {
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine1": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "addressLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine3": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "stateCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "postCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "title": "CountryCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryCode"
                            }
                        ],
                        "description": "Country codes based on ISO 3166, see <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">wikipedia</a>"
                    },
                    "vat": {
                        "type": "string",
                        "nullable": true
                    },
                    "eori": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "accounts": {
                        "title": "AddressAccountList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressAccount"
                        },
                        "nullable": true
                    },
                    "references": {
                        "title": "AddressReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressReferences"
                            }
                        ],
                        "description": "A collection of optional references attached to an address",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "AddressAccount": {
                "title": "AddressAccount",
                "required": [
                    "accountNumber",
                    "carrierReference",
                    "label"
                ],
                "type": "object",
                "properties": {
                    "label": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "carrierReference": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "accountNumber": {
                        "minLength": 1,
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "AddressBookItemRequest": {
                "title": "AddressBookItemRequest",
                "required": [
                    "addressLine1",
                    "countryCode",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine1": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "addressLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine3": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "stateCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "postCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "title": "CountryCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryCode"
                            }
                        ],
                        "description": "Country codes based on ISO 3166, see <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">wikipedia</a>"
                    },
                    "vat": {
                        "type": "string",
                        "nullable": true
                    },
                    "eori": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "accounts": {
                        "title": "AddressAccountList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressAccount"
                        },
                        "nullable": true
                    },
                    "references": {
                        "title": "AddressReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressReferences"
                            }
                        ],
                        "description": "A collection of optional references attached to an address",
                        "nullable": true
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the address"
                    },
                    "addressTypes": {
                        "title": "AddressTypeList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressType"
                        },
                        "description": "Optional list of tags to identify in which context this address can be used",
                        "nullable": true
                    },
                    "carrierAccountReference": {
                        "type": "string",
                        "description": "Account number known/given by the carrier for this address",
                        "nullable": true
                    },
                    "carrierAssignedAddressId": {
                        "type": "string",
                        "description": "Identifier by which the carrier identifies the drop-off location, the former DropOffId\nUse this in combination with ServiceOptions.HoldForPickup",
                        "nullable": true
                    },
                    "isNetworkAddress": {
                        "type": "boolean",
                        "description": "Flag to indicate if this address is a network address (i.e., is allowed to be referred to in network lanes) \n\nDefault: false",
                        "nullable": true
                    },
                    "coordinates": {
                        "title": "CoordinatesRequest",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CoordinatesRequest"
                            }
                        ],
                        "description": "Coordinates",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "AddressBookItem Request"
            },
            "AddressBookItemResponse": {
                "title": "AddressBookItemResponse",
                "required": [
                    "addressLine1",
                    "coordinates",
                    "countryCode",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine1": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "addressLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine3": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "stateCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "postCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "title": "CountryCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryCode"
                            }
                        ],
                        "description": "Country codes based on ISO 3166, see <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">wikipedia</a>"
                    },
                    "vat": {
                        "type": "string",
                        "nullable": true
                    },
                    "eori": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "accounts": {
                        "title": "AddressAccountList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressAccount"
                        },
                        "nullable": true
                    },
                    "references": {
                        "title": "AddressReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressReferences"
                            }
                        ],
                        "description": "A collection of optional references attached to an address",
                        "nullable": true
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the address"
                    },
                    "addressTypes": {
                        "title": "AddressTypeList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressType"
                        },
                        "description": "Optional list of tags to identify in which context this address can be used",
                        "nullable": true
                    },
                    "carrierAccountReference": {
                        "type": "string",
                        "description": "Account number known/given by the carrier for this address",
                        "nullable": true
                    },
                    "carrierAssignedAddressId": {
                        "type": "string",
                        "description": "Identifier by which the carrier identifies the drop-off location, the former DropOffId\nUse this in combination with ServiceOptions.HoldForPickup",
                        "nullable": true
                    },
                    "isNetworkAddress": {
                        "type": "boolean",
                        "description": "Flag to indicate if this address is a network address (i.e., is allowed to be referred to in network lanes) \n\nDefault: false",
                        "nullable": true
                    },
                    "id": {
                        "title": "GuidNullable",
                        "type": "string",
                        "description": "Internal ID of the address, returned by the system but not required for input",
                        "format": "uuid",
                        "nullable": true
                    },
                    "coordinates": {
                        "title": "CoordinatesResponse",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CoordinatesResponse"
                            }
                        ],
                        "description": "Coordinates"
                    }
                },
                "additionalProperties": false,
                "description": "AddressBookItem Response"
            },
            "AddressBookItemResponseListWrapper": {
                "title": "AddressBookItemResponseListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "AddressBookItemResponseList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressBookItemResponse"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "AddressCollection": {
                "title": "AddressCollection",
                "required": [
                    "collection",
                    "receiver",
                    "sender"
                ],
                "type": "object",
                "properties": {
                    "sender": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "The party who initiates the shipment, responsible for the booking"
                    },
                    "receiver": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "The party that should receive the goods being shipped"
                    },
                    "collection": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Address where the goods should be collected"
                    },
                    "dutiesTaxes": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "Party that should pay for Duties and taxes if it is not the Sender or Receiver (depending on the chosen incoterm)",
                        "nullable": true
                    },
                    "thirdParty": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "Party that should pay for the transportation costs (and potentially duties taxes depending on the chosen incoterm)",
                        "nullable": true
                    },
                    "buyer": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Buyer of the goods",
                        "nullable": true
                    },
                    "seller": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Party that is selling the goods",
                        "nullable": true
                    },
                    "ultimate": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Party that is considered the ultimate receiver of the goods in case goods are forwarded after they reached the Receiver",
                        "nullable": true
                    },
                    "broker": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "Party that is responsible for the brokerage of the shipment, only specify if specific/alternative broker should be used",
                        "nullable": true
                    },
                    "importerOfRecord": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "Party that is acting as the importer of record in case that is not the Sender",
                        "nullable": true
                    },
                    "dropOff": {
                        "title": "DropOffAddress",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DropOffAddress"
                            }
                        ],
                        "description": "Address where the shipment can be dropped of for final delivery. The Receiver can then collect it from this Drop-off address.",
                        "nullable": true
                    },
                    "return": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Address where the shipment can be returned to in case it cannot be delivered to the Receiver",
                        "nullable": true
                    },
                    "carrierAgent": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "Address of an agent that handles contact with the carrier, typically used for Ocean",
                        "nullable": true
                    },
                    "notify": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Address of the party that should be notified about the shipment, typically used for Ocean or Air",
                        "nullable": true
                    },
                    "neutralSender": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Address the carrier should use as the sender address in its communication towards the receiver. This is used to 'hide' the actual sender address from the receiver of the shipment.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Collection of addresses on the shipment"
            },
            "AddressDeterminationItem": {
                "title": "AddressDeterminationItem",
                "required": [
                    "addressReference",
                    "zones"
                ],
                "type": "object",
                "properties": {
                    "condition": {
                        "title": "BaseCondition",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AndCondition"
                            },
                            {
                                "$ref": "#/components/schemas/CompareCondition"
                            },
                            {
                                "$ref": "#/components/schemas/OrCondition"
                            },
                            {
                                "$ref": "#/components/schemas/ReferenceCondition"
                            },
                            {
                                "$ref": "#/components/schemas/TemplateCondition"
                            }
                        ],
                        "description": "Conditions",
                        "nullable": true
                    },
                    "zones": {
                        "title": "ZoneList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Zone"
                        },
                        "description": "Zones for which the address may be determined"
                    },
                    "addressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to the address that is being determined if all requirements are met"
                    }
                },
                "additionalProperties": false,
                "description": "Rules and regions associated with a single address reference"
            },
            "AddressReferences": {
                "title": "AddressReferences",
                "type": "object",
                "properties": {
                    "gln": {
                        "type": "string",
                        "description": "Global Location Number (GLN) can be used by companies to identify their locations, giving them complete flexibility to identify any type or level of location required.",
                        "nullable": true
                    },
                    "consignorAssigned": {
                        "type": "string",
                        "description": "Consignor assigned code for a specific location.",
                        "nullable": true
                    },
                    "shipperAssigned": {
                        "type": "string",
                        "description": "Reference assigned to the shipment by the shipper.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "A collection of optional references attached to an address"
            },
            "AddressType": {
                "title": "AddressType",
                "enum": [
                    "sender",
                    "receiver",
                    "collection",
                    "dutiesTaxes",
                    "thirdParty",
                    "buyer",
                    "seller",
                    "ultimate",
                    "broker",
                    "importerOfRecord",
                    "dropOff",
                    "return",
                    "carrierAgent",
                    "notify",
                    "neutralSender"
                ],
                "type": "string",
                "description": "Enums used to tag addresses with their use-cases"
            },
            "AddressWithAccount": {
                "title": "AddressWithAccount",
                "required": [
                    "addressLine1",
                    "countryCode"
                ],
                "type": "object",
                "properties": {
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine1": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "addressLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine3": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "stateCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "postCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "title": "CountryCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryCode"
                            }
                        ],
                        "description": "Country codes based on ISO 3166, see <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">wikipedia</a>"
                    },
                    "vat": {
                        "type": "string",
                        "nullable": true
                    },
                    "eori": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "accounts": {
                        "title": "AddressAccountList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressAccount"
                        },
                        "nullable": true
                    },
                    "references": {
                        "title": "AddressReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressReferences"
                            }
                        ],
                        "description": "A collection of optional references attached to an address",
                        "nullable": true
                    },
                    "carrierAccountReference": {
                        "type": "string",
                        "description": "Account number known/given by the carrier for this address",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Address with carrier account reference"
            },
            "AggregationType": {
                "title": "AggregationType",
                "enum": [
                    "single",
                    "all",
                    "any",
                    "none"
                ],
                "type": "string",
                "description": "(optional) Type of aggregation when the `FieldPath` yields multiple results. Default: `single`.\n\n- `single`: returns `true` if a single result is valid; will throw if no or multiple results are found\n- `all`: returns `true` if all results are valid, `true` if no results are found\n- `any`: returns `true` at least one result is valid, `false` if no results are found\n- `none`: returns `true` if none of the results are valid, `true` if no results are found"
            },
            "AircraftAccessibility": {
                "title": "AircraftAccessibility",
                "enum": [
                    "accessible",
                    "inaccessible"
                ],
                "type": "string",
                "description": "Accessibility of the aircraft"
            },
            "AndCondition": {
                "title": "AndCondition",
                "required": [
                    "$type",
                    "and"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseCondition"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "and"
                        ],
                        "type": "string"
                    },
                    "and": {
                        "title": "BaseConditionList",
                        "type": "array",
                        "items": {
                            "title": "BaseCondition",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/AndCondition"
                                },
                                {
                                    "$ref": "#/components/schemas/CompareCondition"
                                },
                                {
                                    "$ref": "#/components/schemas/OrCondition"
                                },
                                {
                                    "$ref": "#/components/schemas/ReferenceCondition"
                                },
                                {
                                    "$ref": "#/components/schemas/TemplateCondition"
                                }
                            ],
                            "description": "A condition tree"
                        },
                        "description": "A list of conditions that must all be true"
                    }
                },
                "additionalProperties": false,
                "description": "A list of conditions that must all be true"
            },
            "AuthorDetails": {
                "title": "AuthorDetails",
                "required": [
                    "email",
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Name of the author"
                    },
                    "email": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Email address of the author"
                    }
                },
                "additionalProperties": false,
                "description": "Details on the author that accepted/declined an order request"
            },
            "AutocompleteItem": {
                "title": "AutocompleteItem",
                "required": [
                    "favorite",
                    "id",
                    "label",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "label": {
                        "type": "string",
                        "description": "The label to display in the UI"
                    },
                    "id": {
                        "type": "string",
                        "description": "ID to retrieve full details on an address"
                    },
                    "type": {
                        "title": "AutocompleteType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AutocompleteType"
                            }
                        ],
                        "description": "Source of autocomplete result"
                    },
                    "favorite": {
                        "type": "boolean",
                        "description": "Is the address marked as a favorite"
                    }
                },
                "additionalProperties": false,
                "description": "An entry for an autocomplete result"
            },
            "AutocompleteResult": {
                "title": "AutocompleteResult",
                "required": [
                    "addressBook",
                    "favorites",
                    "geoApi",
                    "results"
                ],
                "type": "object",
                "properties": {
                    "results": {
                        "title": "AutocompleteItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AutocompleteItem"
                        },
                        "description": "List of autocomplete results"
                    },
                    "addressBook": {
                        "title": "AutocompleteItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AutocompleteItem"
                        },
                        "description": "Segregated autocomplete results that came from the address book"
                    },
                    "geoApi": {
                        "title": "AutocompleteItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AutocompleteItem"
                        },
                        "description": "Segregated auto-complete results that came from the Geo-Api"
                    },
                    "favorites": {
                        "title": "AutocompleteItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AutocompleteItem"
                        },
                        "description": "Segregated autocomplete results that are marked as favorites"
                    },
                    "sessionToken": {
                        "type": "string",
                        "description": "Any session token if used",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Wrapper for the results of an autocomplete query"
            },
            "AutocompleteType": {
                "title": "AutocompleteType",
                "enum": [
                    "addressBook",
                    "geoApi"
                ],
                "type": "string",
                "description": "Enum detailing where the autocomplete result came from"
            },
            "BaseComparison": {
                "title": "BaseComparison",
                "required": [
                    "fieldPath"
                ],
                "type": "object",
                "properties": {
                    "fieldPath": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Path to the field in the shipment.\n\nThe path given should adhere to the [JSONPath standard](https://goessner.net/articles/JsonPath/).\n\nIf the path contains a `List` of items, each of which will be evaluated separately, use the `[each]` clause, e.g. `$.handlingUnits[each].weight`.\n"
                    }
                },
                "additionalProperties": false,
                "description": "A field-to-value comparison"
            },
            "BaseCondition": {
                "title": "BaseCondition",
                "type": "object",
                "additionalProperties": false,
                "description": "A condition tree"
            },
            "BooleanComparison": {
                "title": "BooleanComparison",
                "required": [
                    "$type",
                    "aggregate",
                    "operator",
                    "value"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseComparison"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "boolean"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "type": "boolean",
                        "description": "The boolean value to compare against"
                    },
                    "operator": {
                        "title": "BooleanComparisonOperator",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/BooleanComparisonOperator"
                            }
                        ],
                        "description": "The operator to use for boolean comparison\n- `eq`: equal to\n- `ne`: not equal to"
                    },
                    "aggregate": {
                        "title": "AggregationType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AggregationType"
                            }
                        ],
                        "description": "(optional) Type of aggregation when the `FieldPath` yields multiple results. Default: `single`.\n\n- `single`: returns `true` if a single result is valid; will throw if no or multiple results are found\n- `all`: returns `true` if all results are valid, `true` if no results are found\n- `any`: returns `true` at least one result is valid, `false` if no results are found\n- `none`: returns `true` if none of the results are valid, `true` if no results are found"
                    }
                },
                "additionalProperties": false,
                "description": "Boolean comparison"
            },
            "BooleanComparisonOperator": {
                "title": "BooleanComparisonOperator",
                "enum": [
                    "eq",
                    "ne"
                ],
                "type": "string"
            },
            "BulkInsertTrackingEventsResponse": {
                "title": "BulkInsertTrackingEventsResponse",
                "required": [
                    "insertedCount",
                    "invalids",
                    "requestedCount"
                ],
                "type": "object",
                "properties": {
                    "requestedCount": {
                        "type": "integer",
                        "description": "The number of tracking events that were requested to be inserted",
                        "format": "int32"
                    },
                    "insertedCount": {
                        "type": "integer",
                        "description": "The number of tracking events that were successfully inserted",
                        "format": "int32"
                    },
                    "invalids": {
                        "title": "TrackingEventInvalidResponse",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventInvalidResponse"
                            }
                        ],
                        "description": "Tracking events that were invalid and not inserted (including reasons)"
                    }
                },
                "additionalProperties": false,
                "description": "Response for bulk inserting tracking events"
            },
            "CancelConsignmentResult": {
                "title": "CancelConsignmentResult",
                "required": [
                    "resultMessages"
                ],
                "type": "object",
                "properties": {
                    "resultMessages": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "additionalProperties": false
            },
            "CancelPickupRequestResponse": {
                "title": "CancelPickupRequestResponse",
                "required": [
                    "resultMessages"
                ],
                "type": "object",
                "properties": {
                    "resultMessages": {
                        "title": "StringHashSet",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Any result messages from the pickup request cancellation"
                    }
                },
                "additionalProperties": false,
                "description": "Response for cancelling a pickup request"
            },
            "CancelShipmentResponse": {
                "title": "CancelShipmentResponse",
                "required": [
                    "resultMessages"
                ],
                "type": "object",
                "properties": {
                    "resultMessages": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Descriptive messages about the result of the cancelling."
                    }
                },
                "additionalProperties": false,
                "description": "Response model for cancelling a shipment"
            },
            "CargoArrangement": {
                "title": "CargoArrangement",
                "enum": [
                    "pickup",
                    "selfDelivery"
                ],
                "type": "string"
            },
            "Carrier": {
                "title": "Carrier",
                "required": [
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique reference to the carrier"
                    },
                    "label": {
                        "type": "string",
                        "description": "Carrier label",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Carrier description",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Carrier information"
            },
            "CarrierInstructions": {
                "title": "CarrierInstructions",
                "type": "object",
                "properties": {
                    "collection": {
                        "type": "string",
                        "description": "Instructions for the carrier to be carried out during collection",
                        "nullable": true
                    },
                    "transport": {
                        "type": "string",
                        "description": "Instructions for the carrier to be carried out during transport",
                        "nullable": true
                    },
                    "delivery": {
                        "type": "string",
                        "description": "Instructions for the carrier to be carried out during delivery",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Any specific instructions related to the carrier"
            },
            "CarrierMessage": {
                "title": "CarrierMessage",
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Carrier assigned code for the type of message"
                    },
                    "message": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Extra text the carrier returned, typically disclaimers on exclusions or specific conditions"
                    }
                },
                "additionalProperties": false,
                "description": "Carrier assigned message"
            },
            "CashOnDelivery": {
                "title": "CashOnDelivery",
                "required": [
                    "currencyCode",
                    "type",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "The value of the monetary amount in the given currency",
                        "format": "double"
                    },
                    "currencyCode": {
                        "title": "CurrencyCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyCode"
                            }
                        ],
                        "description": "Currency codes based on ISO 4217, see <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">wikipedia</a>"
                    },
                    "type": {
                        "title": "CashOnDeliveryType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CashOnDeliveryType"
                            }
                        ],
                        "description": "Specifies how the Cash on delivery is monetized"
                    }
                },
                "additionalProperties": false,
                "description": "Receiver to pay the transportation company for the goods upon delivery"
            },
            "CashOnDeliveryType": {
                "title": "CashOnDeliveryType",
                "enum": [
                    "cash",
                    "cheque",
                    "draft",
                    "moneyOrder",
                    "cashierCheque"
                ],
                "type": "string",
                "description": "Specifies how the Cash on delivery is monetized"
            },
            "CodeDescription": {
                "title": "CodeDescription",
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "The carrier provided code for the event",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "The carrier provided description for the event",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details for a tracking event"
            },
            "CodeRequiredDescription": {
                "title": "CodeRequiredDescription",
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The carrier provided code for the event"
                    },
                    "description": {
                        "type": "string",
                        "description": "The carrier provided description for the event",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details for a tracking event, where the code is required"
            },
            "ColumnData": {
                "title": "ColumnData",
                "required": [
                    "filterable",
                    "name",
                    "path",
                    "sortable",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "type": "string",
                        "description": "Name of the column"
                    },
                    "path": {
                        "type": "string",
                        "description": "Path to access the column data"
                    },
                    "type": {
                        "type": "string",
                        "description": "Type of data in the column"
                    },
                    "filterable": {
                        "type": "boolean",
                        "description": "Is this column filterable"
                    },
                    "sortable": {
                        "type": "boolean",
                        "description": "Is this column sortable"
                    }
                },
                "additionalProperties": false,
                "description": "Information about a column for a data table"
            },
            "CommercialInvoice": {
                "title": "CommercialInvoice",
                "required": [
                    "lines"
                ],
                "type": "object",
                "properties": {
                    "invoiceNumber": {
                        "type": "string",
                        "description": "Invoice number assigned to this invoice",
                        "nullable": true
                    },
                    "charges": {
                        "title": "CommercialInvoiceCharges",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CommercialInvoiceCharges"
                            }
                        ],
                        "description": "Additional charges besides the charges on Invoice line level",
                        "nullable": true
                    },
                    "declarationStatement": {
                        "type": "string",
                        "description": "Custom Declaration statement to be shown at invoice",
                        "nullable": true
                    },
                    "exportReason": {
                        "title": "CommercialInvoiceExportReason",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CommercialInvoiceExportReason"
                            }
                        ],
                        "description": "Reason for exporting goods",
                        "nullable": true
                    },
                    "remarks": {
                        "type": "string",
                        "description": "Additional remarks to include on the invoice",
                        "nullable": true
                    },
                    "lines": {
                        "title": "CommercialInvoiceLineList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommercialInvoiceLine"
                        },
                        "description": "All goodsItem lines on the invoice"
                    },
                    "customsProcedureCode": {
                        "type": "string",
                        "description": "Procedure code for customs",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Invoice document used for Export Declaration"
            },
            "CommercialInvoiceCharges": {
                "title": "CommercialInvoiceCharges",
                "type": "object",
                "properties": {
                    "freight": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency",
                        "nullable": true
                    },
                    "insurance": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency",
                        "nullable": true
                    },
                    "discount": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Additional charges that are included in the Customs Declaration/Invoice"
            },
            "CommercialInvoiceExportReason": {
                "title": "CommercialInvoiceExportReason",
                "required": [
                    "type"
                ],
                "type": "object",
                "properties": {
                    "reason": {
                        "type": "string",
                        "description": "Free Text to indicate the reason",
                        "nullable": true
                    },
                    "type": {
                        "title": "ExportReasonType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ExportReasonType"
                            }
                        ],
                        "description": "List of most commonly used codes by carriers implemented"
                    }
                },
                "additionalProperties": false,
                "description": "Reason for Exporting the goods"
            },
            "CommercialInvoiceLine": {
                "title": "CommercialInvoiceLine",
                "required": [
                    "description",
                    "id",
                    "itemNumber",
                    "quantity",
                    "unitCustomsValue"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "description": "Sequential number for each invoice line, starting with 1 and incrementing with 1",
                        "format": "int32"
                    },
                    "externalId": {
                        "type": "string",
                        "description": "Row identifier in Sender host system if required",
                        "nullable": true
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Goods description"
                    },
                    "quantity": {
                        "title": "Quantity",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Quantity"
                            }
                        ],
                        "description": "A quantity measured in the specified unit."
                    },
                    "unitCustomsValue": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency"
                    },
                    "countryOfOrigin": {
                        "title": "CountryCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryCode"
                            }
                        ],
                        "description": "Country codes based on ISO 3166, see <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">wikipedia</a>",
                        "nullable": true
                    },
                    "itemNumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "SKU number"
                    },
                    "purchaseOrder": {
                        "type": "string",
                        "description": "The PO number of the PO of the sending party, typically in drop-ship/cross-dock",
                        "nullable": true
                    },
                    "purchaseOrderLineNumber": {
                        "type": "integer",
                        "description": "The PO line number of the PO of the sending party",
                        "format": "int32",
                        "nullable": true
                    },
                    "customerPurchaseOrder": {
                        "type": "string",
                        "description": "The PO of the receiving party",
                        "nullable": true
                    },
                    "weight": {
                        "title": "Weight",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Weight"
                            }
                        ],
                        "description": "Weight of the total InvoiceLine for this ItemNumber\nCustoms value per unit/each. To get the line value multiply this with lines.quantity.amount",
                        "nullable": true
                    },
                    "lotNumber": {
                        "type": "string",
                        "description": "Lot/Batch number",
                        "nullable": true
                    },
                    "temperatureLoggerReference": {
                        "type": "string",
                        "description": "Reference to a temperature logging device for temperature controlled goods",
                        "nullable": true
                    },
                    "references": {
                        "title": "CommercialInvoiceLineReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CommercialInvoiceLineReferences"
                            }
                        ],
                        "description": "Collection of references for the commercial invoice line",
                        "nullable": true
                    },
                    "expirationDate": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "The date the goods will expire. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    },
                    "customs": {
                        "title": "CommercialInvoiceLineCustoms",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CommercialInvoiceLineCustoms"
                            }
                        ],
                        "description": "Section containing customs identification for the given SKU",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "One line on a commercialInvoice"
            },
            "CommercialInvoiceLineCustoms": {
                "title": "CommercialInvoiceLineCustoms",
                "type": "object",
                "properties": {
                    "customsCode": {
                        "type": "string",
                        "description": "The HS code for the goods, US government documentation: https://www.trade.gov/harmonized-system-hs-codes",
                        "nullable": true
                    },
                    "eccn": {
                        "type": "string",
                        "description": "Export Control Classification Number, see https://www.bis.doc.gov/index.php/licensing/commerce-control-list-classification/export-control-classification-number-eccn",
                        "nullable": true
                    },
                    "scheduleB": {
                        "type": "string",
                        "description": "The Schedule B code is a U.S.-specific coding system used by the U.S. government to monitor U.S. exports. According to the export.gov website: https://www.census.gov/foreign-trade/schedules/b/index.html",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Customs identifiers on goodsItem level"
            },
            "CommercialInvoiceLineReferences": {
                "title": "CommercialInvoiceLineReferences",
                "type": "object",
                "properties": {
                    "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number (GTIN) can be used by a company to uniquely identify all of its trade items. GS1 defines trade items as products or services that are priced, ordered or invoiced at any point in the supply chain.",
                        "nullable": true
                    },
                    "buyerAssigned": {
                        "type": "string",
                        "description": "goodsItem reference in accordance to the buyer",
                        "nullable": true
                    },
                    "deliveryOrder": {
                        "type": "string",
                        "description": "Delivery order number",
                        "nullable": true
                    },
                    "consigneeAssigned": {
                        "type": "string",
                        "description": "Reference assigned by the consignee to a shipment.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Collection of references for commercial invoice lines"
            },
            "CompareCondition": {
                "title": "CompareCondition",
                "required": [
                    "$type",
                    "comparison"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseCondition"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "comparison"
                        ],
                        "type": "string"
                    },
                    "comparison": {
                        "title": "BaseComparison",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/BooleanComparison"
                            },
                            {
                                "$ref": "#/components/schemas/DateTimeComparison"
                            },
                            {
                                "$ref": "#/components/schemas/DecimalComparison"
                            },
                            {
                                "$ref": "#/components/schemas/DecimalListComparison"
                            },
                            {
                                "$ref": "#/components/schemas/FieldComparison"
                            },
                            {
                                "$ref": "#/components/schemas/StringComparison"
                            },
                            {
                                "$ref": "#/components/schemas/StringListComparison"
                            }
                        ],
                        "description": "An actual comparison which must be true"
                    }
                },
                "additionalProperties": false,
                "description": "A single comparison which must be true"
            },
            "Consignment": {
                "title": "Consignment",
                "required": [
                    "dimensionUnit",
                    "locationReference",
                    "reference",
                    "timeWindows",
                    "weightUnit"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper assigned reference to the trailer"
                    },
                    "locationReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper assigned reference to the shipping location"
                    },
                    "timeWindows": {
                        "title": "ConsignmentTimeWindows",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentTimeWindows"
                            }
                        ],
                        "description": "Time windows for pickup and delivery of the consignment"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text specifying the classification of a type of cargo. Can be multple in case the consignment holds multiple cargoTypes",
                        "nullable": true
                    },
                    "carrierReference": {
                        "type": "string",
                        "description": "The reference to the carrier the consignment should be booked with",
                        "nullable": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Carrier",
                        "nullable": true
                    },
                    "requestedTrackingReference": {
                        "type": "string",
                        "description": "If the carrier supports using a customer provided tracking reference, this is the reference to use.",
                        "nullable": true
                    },
                    "serviceLevelReference": {
                        "type": "string",
                        "description": "Reference to service level of shipment",
                        "nullable": true
                    },
                    "incoterms": {
                        "title": "Incoterms",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Incoterms"
                            }
                        ],
                        "description": "Indicates the Responsibilities for Cost/Insurance/Risks for the shipment",
                        "nullable": true
                    },
                    "modeOfTransport": {
                        "title": "ModeOfTransportNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeOfTransport"
                            }
                        ],
                        "description": "The method of transporting cargo.",
                        "nullable": true
                    },
                    "dimensionUnit": {
                        "title": "DimensionUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DimensionUnit"
                            }
                        ],
                        "description": "Unit for length as per Unece organization: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "weightUnit": {
                        "title": "WeightUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeightUnit"
                            }
                        ],
                        "description": "Unece.org list: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "references": {
                        "title": "LoadReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadReferenceCollection"
                            }
                        ],
                        "description": "<inheritdoc cref=\"T:Viya.Shipping.Contracts.v3.DespatchAdvice.LoadReferenceCollection\" />",
                        "nullable": true
                    },
                    "instructions": {
                        "title": "LoadInstructions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadInstructions"
                            }
                        ],
                        "description": "<inheritdoc cref=\"T:Viya.Shipping.Contracts.v3.DespatchAdvice.LoadInstructions\" />",
                        "nullable": true
                    },
                    "addresses": {
                        "title": "LoadAddressCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadAddressCollection"
                            }
                        ],
                        "description": "Addresses relevant to the consignment",
                        "nullable": true
                    },
                    "handlingUnits": {
                        "title": "ConsignmentHandlingUnitList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentHandlingUnit"
                        },
                        "description": "If the handling units on the consignment are already known, and also known to exist in shipping.\nReferences can be included here to link the consignment to the handling units.",
                        "nullable": true
                    },
                    "originIdentifier": {
                        "type": "string",
                        "description": "URI or Reference indicating the host system from where the consignment request originated",
                        "nullable": true
                    },
                    "orderedExternally": {
                        "type": "boolean",
                        "description": "Set to true to indicate that the consignemnt is ordered externally.\n            \nFor this to be accepted, a carrier reference must be provided, and a tracking reference on the consignment, or handling units.",
                        "nullable": true
                    },
                    "network": {
                        "title": "ConsignmentNetworkProperties",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentNetworkProperties"
                            }
                        ],
                        "description": "Network planning properties of the consignment. \n\n`Initial` and `Final` are both nullable, to allow for first-mile and last-mile consignments",
                        "nullable": true
                    },
                    "preAdviceNote": {
                        "type": "string",
                        "description": "Pre Advice Notes added by shipper",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "The model that defines a consignment"
            },
            "ConsignmentContents": {
                "title": "ConsignmentContents",
                "required": [
                    "consignmentLoadingStatus",
                    "handlingUnits",
                    "receiver",
                    "shipmentId",
                    "shipmentReference"
                ],
                "type": "object",
                "properties": {
                    "shipmentId": {
                        "title": "Guid",
                        "type": "string",
                        "description": "identifier of the shipment which contains the handling units to be loaded",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "shipmentReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "identifier of the shipment which contains the handling units to be loaded"
                    },
                    "shipmentReferences": {
                        "title": "ShipmentReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentReferenceCollection"
                            }
                        ],
                        "description": "Collection of References that can be included in the shipment",
                        "nullable": true,
                        "readOnly": true
                    },
                    "shipmentDetailsPath": {
                        "type": "string",
                        "description": "API path that points to more details about the shipment",
                        "nullable": true,
                        "readOnly": true
                    },
                    "receiver": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "The shipment receiver details",
                        "readOnly": true
                    },
                    "consignmentLoadingStatus": {
                        "title": "ConsignmentLoadingStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentLoadingStatus"
                            }
                        ],
                        "description": "The loading status of the shipment that is added to the trailer",
                        "readOnly": true
                    },
                    "handlingUnits": {
                        "title": "HandlingUnitContentList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnitContent"
                        },
                        "description": "Handling units to be loaded",
                        "readOnly": true
                    }
                },
                "additionalProperties": false
            },
            "ConsignmentCreateSettings": {
                "title": "ConsignmentCreateSettings",
                "required": [
                    "displayName",
                    "features",
                    "hidden",
                    "reference",
                    "systemDefault"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "displayName": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "systemDefault": {
                        "type": "boolean"
                    },
                    "hidden": {
                        "type": "boolean"
                    },
                    "features": {
                        "title": "StringFeatureDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Feature"
                        }
                    }
                },
                "additionalProperties": false
            },
            "ConsignmentCreateSettingsListWrapper": {
                "title": "ConsignmentCreateSettingsListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "ConsignmentCreateSettingsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentCreateSettings"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "ConsignmentEventMappingOptions": {
                "title": "ConsignmentEventMappingOptions",
                "required": [
                    "eventMappingOptions",
                    "mappingReference"
                ],
                "type": "object",
                "properties": {
                    "mappingReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The unique identifier for the mapper to use when inserting consignment events"
                    },
                    "eventMappingOptions": {
                        "title": "TrackingEventMappingOptionList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingEventMappingOption"
                        },
                        "description": "Tracking event mapping options"
                    }
                },
                "additionalProperties": false,
                "description": "Options for mapping a consignment tracking event"
            },
            "ConsignmentHandlingUnit": {
                "title": "ConsignmentHandlingUnit",
                "required": [
                    "goodsItems",
                    "height",
                    "id",
                    "isDocument",
                    "length",
                    "packageType",
                    "reference",
                    "sequence",
                    "weight",
                    "width"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "ID of handling unit in the system. Only used on GET",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference of handling unit"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Unique sequence number per HandlingUnit, start with 1 and increment with 1 for each HandlingUnit",
                        "format": "int32"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of the HandlingUnit in unit of measure set in WeightUnit",
                        "format": "double"
                    },
                    "length": {
                        "type": "number",
                        "description": "Length of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "width": {
                        "type": "number",
                        "description": "Width of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "height": {
                        "type": "number",
                        "description": "Height of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "packageType": {
                        "title": "PackageTypeInfo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageTypeInfo"
                            }
                        ],
                        "description": "Package info identifying the packaging used. Viya.Shipping.Contracts.v3.Models.Shipments.HandlingUnits.PackageTypeInfo"
                    },
                    "status": {
                        "title": "HandlingUnitStatusNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitStatus"
                            }
                        ],
                        "nullable": true
                    },
                    "isDocument": {
                        "type": "boolean",
                        "description": "Indicates if the HandlingUnit is a document"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text that indicates what goods are packed in the HandlingUnit",
                        "nullable": true
                    },
                    "isStackable": {
                        "type": "boolean",
                        "description": "Indicates if the HandlingUnit can be stacked onto or on other stackable HandlingUnits",
                        "nullable": true
                    },
                    "references": {
                        "title": "HandlingUnitReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitReferences"
                            }
                        ],
                        "description": "Any references identifying this HandlingUnit",
                        "nullable": true
                    },
                    "serviceOptions": {
                        "title": "HandlingUnitServiceOptions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitServiceOptions"
                            }
                        ],
                        "description": "This indicates any additional service that should be applied for this handling unit",
                        "nullable": true
                    },
                    "goodsItems": {
                        "title": "GoodsItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GoodsItem"
                        },
                        "description": "Identifies goods inside a handlingUnit"
                    },
                    "requestedTrackingReference": {
                        "type": "string",
                        "description": "If the carrier supports using a customer provided tracking reference, this is the reference to use.",
                        "nullable": true
                    },
                    "labelReference": {
                        "title": "HandlingUnitLabelReference",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitLabelReference"
                            }
                        ],
                        "description": "Unique reference to the label of the HandlingUnit assigned by the system",
                        "nullable": true,
                        "readOnly": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique reference for the HandlingUnit assigned by the carrier",
                        "nullable": true
                    },
                    "children": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "IDs of handling units that are packed into this unit. Only used on GET",
                        "nullable": true,
                        "readOnly": true
                    },
                    "carrierShipmentReference": {
                        "type": "string",
                        "description": "Some carriers note the shipment reference on the handling unit level.",
                        "nullable": true
                    },
                    "trackingLink": {
                        "title": "HtmlForm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlForm"
                            }
                        ],
                        "description": "Details of an HTML form content",
                        "nullable": true
                    },
                    "childReferences": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "If this handling unit is an overpack. And the children are already known to exist in the system.\nThen references can be included here, and overpacks will be calculated and associated automatically",
                        "nullable": true,
                        "writeOnly": true
                    },
                    "childrenList": {
                        "title": "HandlingUnitList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnit"
                        },
                        "description": "If this handling unit is an overpack. And the children are already known to exist in the system.\nThen handling unit will be shown here",
                        "nullable": true,
                        "readOnly": true
                    }
                },
                "additionalProperties": false,
                "description": "Handling unit included on a consignment, Can contain references to child handling units\nso long as they exist in the system already"
            },
            "ConsignmentLoadingStatus": {
                "title": "ConsignmentLoadingStatus",
                "enum": [
                    "created",
                    "ordered",
                    "canceled",
                    "declined",
                    "confirmed",
                    "delivered",
                    "preAdvised"
                ],
                "type": "string",
                "description": "Loading status of a consignment"
            },
            "ConsignmentMutation": {
                "title": "ConsignmentMutation",
                "required": [
                    "timestamp"
                ],
                "type": "object",
                "properties": {
                    "timestamp": {
                        "title": "DateTime",
                        "type": "string",
                        "description": "The timestamp at which the mutation occured. NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "oldStatus": {
                        "title": "ConsignmentLoadingStatusNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentLoadingStatus"
                            }
                        ],
                        "description": "The status of the consignment before the mutation",
                        "nullable": true
                    },
                    "newStatus": {
                        "title": "ConsignmentLoadingStatusNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentLoadingStatus"
                            }
                        ],
                        "description": "The status of the consignment after the mutation",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "description": "Any message accompanying the change",
                        "nullable": true
                    },
                    "author": {
                        "title": "AuthorDetails",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AuthorDetails"
                            }
                        ],
                        "description": "Details on the author of the mutation",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details a previous change in status of a Consignment"
            },
            "ConsignmentNetworkProperties": {
                "title": "ConsignmentNetworkProperties",
                "type": "object",
                "properties": {
                    "initialNetworkAddressReference": {
                        "type": "string",
                        "description": "Reference to the initial network address (leave empty for first-mile consignments)",
                        "nullable": true
                    },
                    "finalNetworkAddressReference": {
                        "type": "string",
                        "description": "Reference to the final network address (leave empty for last-mile consignments)",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Network properties of the consignment"
            },
            "ConsignmentOrderRequestModel": {
                "title": "ConsignmentOrderRequestModel",
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "title": "ConsignmentLoadingStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentLoadingStatus"
                            }
                        ],
                        "description": "The new status of the shipment"
                    },
                    "message": {
                        "type": "string",
                        "description": "Any message accompanying the status change",
                        "nullable": true
                    },
                    "author": {
                        "title": "AuthorDetails",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AuthorDetails"
                            }
                        ],
                        "description": "The author that made the status change",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response from the carrier"
            },
            "ConsignmentPickupTimeWindow": {
                "title": "ConsignmentPickupTimeWindow",
                "type": "object",
                "properties": {
                    "planned": {
                        "title": "AbsoluteDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AbsoluteDateRange"
                            }
                        ],
                        "description": "A date range given in absolute datetime (including timezone information)",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Time window related to the pickup/collection moment"
            },
            "ConsignmentTimeWindows": {
                "title": "ConsignmentTimeWindows",
                "type": "object",
                "properties": {
                    "pickup": {
                        "title": "ConsignmentPickupTimeWindow",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentPickupTimeWindow"
                            }
                        ],
                        "description": "Date range regarding the pickup/collection moment",
                        "nullable": true
                    },
                    "delivery": {
                        "title": "TimeWindowDelivery",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeWindowDelivery"
                            }
                        ],
                        "description": "Date range regarding the delivery moment",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Time windows for pickup and delivery of the consignment"
            },
            "ConsignmentTrackingForShipment": {
                "title": "ConsignmentTrackingForShipment",
                "required": [
                    "events",
                    "fromAddressReference",
                    "handlingUnits",
                    "id",
                    "reference",
                    "timeWindows",
                    "toAddressReference"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "Unique internal identifier",
                        "format": "uuid"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper-assigned unique Reference"
                    },
                    "carrierReference": {
                        "type": "string",
                        "description": "Reference to the carrier",
                        "nullable": true
                    },
                    "fromAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Network From Address reference. If not present on consignment, will be `_FIRST_`"
                    },
                    "toAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Network To Address reference. If not present on consignment, will be `_LAST_`"
                    },
                    "timeWindows": {
                        "title": "NetworkTrackingTimeWindows",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkTrackingTimeWindows"
                            }
                        ],
                        "description": "Planned and actual pickup and delivery date-times"
                    },
                    "handlingUnits": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "List of handling units that are part of this consignment and tracked shipment"
                    },
                    "events": {
                        "title": "TrackingEventWithMappedCodesList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingEventWithMappedCodes"
                        },
                        "description": "List of tracking events associated with this consignment"
                    }
                },
                "additionalProperties": false,
                "description": "Tracking details of a consignment regarding a given shipment (will only show handling units of said shipment)"
            },
            "ConsignmentWithEvents": {
                "title": "ConsignmentWithEvents",
                "required": [
                    "createdOn",
                    "dimensionUnit",
                    "documents",
                    "handlingUnitIds",
                    "handlingUnitsTree",
                    "id",
                    "loaded",
                    "locationReference",
                    "mapping",
                    "mutations",
                    "reference",
                    "status",
                    "timeWindows",
                    "trackingEvents",
                    "weightUnit"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper assigned reference to the trailer"
                    },
                    "locationReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper assigned reference to the shipping location"
                    },
                    "timeWindows": {
                        "title": "ConsignmentTimeWindows",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentTimeWindows"
                            }
                        ],
                        "description": "Time windows for pickup and delivery of the consignment"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text specifying the classification of a type of cargo. Can be multple in case the consignment holds multiple cargoTypes",
                        "nullable": true
                    },
                    "carrierReference": {
                        "type": "string",
                        "description": "The reference to the carrier the consignment should be booked with",
                        "nullable": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Carrier",
                        "nullable": true
                    },
                    "requestedTrackingReference": {
                        "type": "string",
                        "description": "If the carrier supports using a customer provided tracking reference, this is the reference to use.",
                        "nullable": true
                    },
                    "serviceLevelReference": {
                        "type": "string",
                        "description": "Reference to service level of shipment",
                        "nullable": true
                    },
                    "incoterms": {
                        "title": "Incoterms",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Incoterms"
                            }
                        ],
                        "description": "Indicates the Responsibilities for Cost/Insurance/Risks for the shipment",
                        "nullable": true
                    },
                    "modeOfTransport": {
                        "title": "ModeOfTransportNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeOfTransport"
                            }
                        ],
                        "description": "The method of transporting cargo.",
                        "nullable": true
                    },
                    "dimensionUnit": {
                        "title": "DimensionUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DimensionUnit"
                            }
                        ],
                        "description": "Unit for length as per Unece organization: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "weightUnit": {
                        "title": "WeightUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeightUnit"
                            }
                        ],
                        "description": "Unece.org list: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "references": {
                        "title": "LoadReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadReferenceCollection"
                            }
                        ],
                        "description": "<inheritdoc cref=\"T:Viya.Shipping.Contracts.v3.DespatchAdvice.LoadReferenceCollection\" />",
                        "nullable": true
                    },
                    "instructions": {
                        "title": "LoadInstructions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadInstructions"
                            }
                        ],
                        "description": "<inheritdoc cref=\"T:Viya.Shipping.Contracts.v3.DespatchAdvice.LoadInstructions\" />",
                        "nullable": true
                    },
                    "addresses": {
                        "title": "LoadAddressCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadAddressCollection"
                            }
                        ],
                        "description": "Addresses relevant to the consignment",
                        "nullable": true
                    },
                    "handlingUnits": {
                        "title": "ConsignmentHandlingUnitList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentHandlingUnit"
                        },
                        "description": "If the handling units on the consignment are already known, and also known to exist in shipping.\nReferences can be included here to link the consignment to the handling units.",
                        "nullable": true
                    },
                    "originIdentifier": {
                        "type": "string",
                        "description": "URI or Reference indicating the host system from where the consignment request originated",
                        "nullable": true
                    },
                    "orderedExternally": {
                        "type": "boolean",
                        "description": "Set to true to indicate that the consignemnt is ordered externally.\n            \nFor this to be accepted, a carrier reference must be provided, and a tracking reference on the consignment, or handling units.",
                        "nullable": true
                    },
                    "network": {
                        "title": "ConsignmentNetworkProperties",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentNetworkProperties"
                            }
                        ],
                        "description": "Network planning properties of the consignment. \n\n`Initial` and `Final` are both nullable, to allow for first-mile and last-mile consignments",
                        "nullable": true
                    },
                    "preAdviceNote": {
                        "type": "string",
                        "description": "Pre Advice Notes added by shipper",
                        "nullable": true
                    },
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdOn": {
                        "title": "DateTime",
                        "type": "string",
                        "description": ". NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": ". NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "title": "ConsignmentLoadingStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentLoadingStatus"
                            }
                        ],
                        "description": "The loading status of the trailer"
                    },
                    "loaded": {
                        "title": "ConsignmentContentsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentContents"
                        },
                        "description": "The list of shipments that are loaded to the trailer"
                    },
                    "documents": {
                        "title": "DespatchAdviceDocumentList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DespatchAdviceDocument"
                        },
                        "description": "Any documents pertaining to the requested manifest are included here"
                    },
                    "mutations": {
                        "title": "ConsignmentMutationList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentMutation"
                        },
                        "description": "Any historic changes to the status of the consignment"
                    },
                    "handlingUnitIds": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "IDs of handling units on the consignment"
                    },
                    "preAdvice": {
                        "title": "PreAdviceDetail",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PreAdviceDetail"
                            }
                        ],
                        "description": "Pre advice properties of the consignment. \n\nThis will be added if the consignment is sent to a carrier that supports pre advice, and the consignment is not ordered externally.",
                        "nullable": true
                    },
                    "trackingEvents": {
                        "title": "TrackingEventWithMappedCodesList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingEventWithMappedCodes"
                        },
                        "description": "List of tracking events associated with this consignment"
                    },
                    "mapping": {
                        "title": "ConsignmentEventMappingOptions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentEventMappingOptions"
                            }
                        ],
                        "description": "Options regarding the mapping of tracking events for the consignment"
                    },
                    "handlingUnitsTree": {
                        "title": "ConsignmentHandlingUnitList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentHandlingUnit"
                        },
                        "description": "If the handling units on the consignment are already known, and also known to exist in shipping.\nReferences can be included here to link the consignment to the handling units."
                    }
                },
                "additionalProperties": false,
                "description": "Consignment including its tracking events"
            },
            "CoordinatesRequest": {
                "title": "CoordinatesRequest",
                "required": [
                    "latitude",
                    "longitude"
                ],
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "number",
                        "description": "Latitude",
                        "format": "double"
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Longitude",
                        "format": "double"
                    }
                },
                "additionalProperties": false,
                "description": "Coordinates Request"
            },
            "CoordinatesResponse": {
                "title": "CoordinatesResponse",
                "type": "object",
                "properties": {
                    "latitude": {
                        "type": "number",
                        "description": "Latitude",
                        "format": "double",
                        "nullable": true
                    },
                    "longitude": {
                        "type": "number",
                        "description": "Longitude",
                        "format": "double",
                        "nullable": true
                    },
                    "source": {
                        "title": "CoordinatesSourceNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CoordinatesSource"
                            }
                        ],
                        "description": "Longitude",
                        "nullable": true
                    },
                    "userContext": {
                        "type": "string",
                        "description": "Longitude",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Coordinates Response"
            },
            "CoordinatesSource": {
                "title": "CoordinatesSource",
                "enum": [
                    "user",
                    "google",
                    "undefined",
                    "couldNotBeDetermined"
                ],
                "type": "string",
                "description": "Specifies who is the source of the coordinates, for a given address"
            },
            "Country": {
                "title": "Country",
                "required": [
                    "countryName",
                    "threeLetterCode",
                    "twoLetterCode"
                ],
                "type": "object",
                "properties": {
                    "twoLetterCode": {
                        "type": "string",
                        "description": "Two-letter code of country"
                    },
                    "threeLetterCode": {
                        "type": "string",
                        "description": "Three-letter code of country"
                    },
                    "countryName": {
                        "type": "string",
                        "description": "Country name in english"
                    }
                },
                "additionalProperties": false,
                "description": "ISO-3166 country code data"
            },
            "CountryCode": {
                "title": "CountryCode",
                "enum": [
                    "AD",
                    "AE",
                    "AF",
                    "AG",
                    "AI",
                    "AL",
                    "AM",
                    "AO",
                    "AQ",
                    "AR",
                    "AS",
                    "AT",
                    "AU",
                    "AW",
                    "AX",
                    "AZ",
                    "BA",
                    "BB",
                    "BD",
                    "BE",
                    "BF",
                    "BG",
                    "BH",
                    "BI",
                    "BJ",
                    "BL",
                    "BM",
                    "BN",
                    "BO",
                    "BQ",
                    "BR",
                    "BS",
                    "BT",
                    "BV",
                    "BW",
                    "BY",
                    "BZ",
                    "CA",
                    "CC",
                    "CD",
                    "CF",
                    "CG",
                    "CH",
                    "CI",
                    "CK",
                    "CL",
                    "CM",
                    "CN",
                    "CO",
                    "CR",
                    "CU",
                    "CV",
                    "CW",
                    "CX",
                    "CY",
                    "CZ",
                    "DE",
                    "DJ",
                    "DK",
                    "DM",
                    "DO",
                    "DZ",
                    "EC",
                    "EE",
                    "EG",
                    "EH",
                    "ER",
                    "ES",
                    "ET",
                    "FI",
                    "FJ",
                    "FK",
                    "FM",
                    "FO",
                    "FR",
                    "GA",
                    "GB",
                    "GD",
                    "GE",
                    "GF",
                    "GG",
                    "GH",
                    "GI",
                    "GL",
                    "GM",
                    "GN",
                    "GP",
                    "GQ",
                    "GR",
                    "GS",
                    "GT",
                    "GU",
                    "GW",
                    "GY",
                    "HK",
                    "HM",
                    "HN",
                    "HR",
                    "HT",
                    "HU",
                    "ID",
                    "IE",
                    "IL",
                    "IM",
                    "IN",
                    "IO",
                    "IQ",
                    "IR",
                    "IS",
                    "IT",
                    "JE",
                    "JM",
                    "JO",
                    "JP",
                    "KE",
                    "KG",
                    "KH",
                    "KI",
                    "KM",
                    "KN",
                    "KP",
                    "KR",
                    "KW",
                    "KY",
                    "KZ",
                    "LA",
                    "LB",
                    "LC",
                    "LI",
                    "LK",
                    "LR",
                    "LS",
                    "LT",
                    "LU",
                    "LV",
                    "LY",
                    "MA",
                    "MC",
                    "MD",
                    "ME",
                    "MF",
                    "MG",
                    "MH",
                    "MK",
                    "ML",
                    "MM",
                    "MN",
                    "MO",
                    "MP",
                    "MQ",
                    "MR",
                    "MS",
                    "MT",
                    "MU",
                    "MV",
                    "MW",
                    "MX",
                    "MY",
                    "MZ",
                    "NA",
                    "NC",
                    "NE",
                    "NF",
                    "NG",
                    "NI",
                    "NL",
                    "NO",
                    "NP",
                    "NR",
                    "NU",
                    "NZ",
                    "OM",
                    "PA",
                    "PE",
                    "PF",
                    "PG",
                    "PH",
                    "PK",
                    "PL",
                    "PM",
                    "PN",
                    "PR",
                    "PS",
                    "PT",
                    "PW",
                    "PY",
                    "QA",
                    "RE",
                    "RO",
                    "RS",
                    "RU",
                    "RW",
                    "SA",
                    "SB",
                    "SC",
                    "SD",
                    "SE",
                    "SG",
                    "SH",
                    "SI",
                    "SJ",
                    "SK",
                    "SL",
                    "SM",
                    "SN",
                    "SO",
                    "SR",
                    "SS",
                    "ST",
                    "SV",
                    "SX",
                    "SY",
                    "SZ",
                    "TC",
                    "TD",
                    "TF",
                    "TG",
                    "TH",
                    "TJ",
                    "TK",
                    "TL",
                    "TM",
                    "TN",
                    "TO",
                    "TR",
                    "TT",
                    "TV",
                    "TW",
                    "TZ",
                    "UA",
                    "UG",
                    "UM",
                    "US",
                    "UY",
                    "UZ",
                    "VA",
                    "VC",
                    "VE",
                    "VG",
                    "VI",
                    "VN",
                    "VU",
                    "WF",
                    "WS",
                    "YE",
                    "YT",
                    "ZA",
                    "ZM",
                    "ZW",
                    "XK"
                ],
                "type": "string",
                "description": "Country codes based on ISO 3166, see <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">wikipedia</a>"
            },
            "CreateUpdateAddressResponse": {
                "title": "CreateUpdateAddressResponse",
                "required": [
                    "id",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "The id of the address",
                        "format": "uuid"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Unique identifier of the address assigned by the user"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for creation of a address"
            },
            "CreateUpdateConsignmentResponse": {
                "title": "CreateUpdateConsignmentResponse",
                "required": [
                    "id",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "The id of the consignment",
                        "format": "uuid"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Shipper"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for creation of a consignment"
            },
            "CreateUpdatePickupRequestResponse": {
                "title": "CreateUpdatePickupRequestResponse",
                "required": [
                    "id",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "The id of the pickup request",
                        "format": "uuid"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the pickup request assigned by the Shipper"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for creation or update of a pickup request"
            },
            "CreateUpdateShipmentResponse": {
                "title": "CreateUpdateShipmentResponse",
                "required": [
                    "id",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "The id of the shipment",
                        "format": "uuid"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Shipper"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for creation of a shipment"
            },
            "CurrencyCode": {
                "title": "CurrencyCode",
                "enum": [
                    "AED",
                    "AFN",
                    "ALL",
                    "AMD",
                    "ANG",
                    "AOA",
                    "ARS",
                    "AUD",
                    "AWG",
                    "AZN",
                    "BAM",
                    "BBD",
                    "BDT",
                    "BGN",
                    "BHD",
                    "BIF",
                    "BMD",
                    "BND",
                    "BOB",
                    "BOV",
                    "BRL",
                    "BSD",
                    "BTN",
                    "BWP",
                    "BYN",
                    "BZD",
                    "CAD",
                    "CDF",
                    "CHE",
                    "CHF",
                    "CHW",
                    "CLF",
                    "CLP",
                    "COP",
                    "COU",
                    "CRC",
                    "CUC",
                    "CUP",
                    "CVE",
                    "CZK",
                    "DJF",
                    "DKK",
                    "DOP",
                    "DZD",
                    "EGP",
                    "ERN",
                    "ETB",
                    "EUR",
                    "FJD",
                    "FKP",
                    "GBP",
                    "GEL",
                    "GHS",
                    "GIP",
                    "GMD",
                    "GNF",
                    "GTQ",
                    "GYD",
                    "HKD",
                    "HNL",
                    "HTG",
                    "HUF",
                    "IDR",
                    "ILS",
                    "INR",
                    "IQD",
                    "IRR",
                    "ISK",
                    "JMD",
                    "JOD",
                    "JPY",
                    "KES",
                    "KGS",
                    "KHR",
                    "KMF",
                    "KPW",
                    "KRW",
                    "KWD",
                    "KYD",
                    "KZT",
                    "LAK",
                    "LBP",
                    "LKR",
                    "LRD",
                    "LSL",
                    "LYD",
                    "MAD",
                    "MDL",
                    "MGA",
                    "MKD",
                    "MMK",
                    "MNT",
                    "MOP",
                    "MRU",
                    "MUR",
                    "MVR",
                    "MWK",
                    "MXN",
                    "MXV",
                    "MYR",
                    "MZN",
                    "NAD",
                    "NGN",
                    "NIO",
                    "NOK",
                    "NPR",
                    "NZD",
                    "OMR",
                    "PAB",
                    "PEN",
                    "PGK",
                    "PHP",
                    "PKR",
                    "PLN",
                    "PYG",
                    "QAR",
                    "RON",
                    "RSD",
                    "CNY",
                    "RUB",
                    "RWF",
                    "SAR",
                    "SBD",
                    "SCR",
                    "SDG",
                    "SEK",
                    "SGD",
                    "SHP",
                    "SLE",
                    "SLL",
                    "SOS",
                    "SRD",
                    "SSP",
                    "STN",
                    "SVC",
                    "SYP",
                    "SZL",
                    "THB",
                    "TJS",
                    "TMT",
                    "TND",
                    "TOP",
                    "TRY",
                    "TTD",
                    "TWD",
                    "TZS",
                    "UAH",
                    "UGX",
                    "USD",
                    "USN",
                    "UYI",
                    "UYU",
                    "UYW",
                    "UZS",
                    "VED",
                    "VES",
                    "VND",
                    "VUV",
                    "WST",
                    "XAF",
                    "XAG",
                    "XAU",
                    "XBA",
                    "XBB",
                    "XBC",
                    "XBD",
                    "XCD",
                    "XDR",
                    "XOF",
                    "XPD",
                    "XPF",
                    "XPT",
                    "XSU",
                    "XTS",
                    "XUA",
                    "XXX",
                    "YER",
                    "ZAR",
                    "ZMW",
                    "ZWL"
                ],
                "type": "string",
                "description": "Currency codes based on ISO 4217, see <a href=\"https://en.wikipedia.org/wiki/ISO_4217\">wikipedia</a>"
            },
            "DangerousGoodsItem": {
                "title": "DangerousGoodsItem",
                "required": [
                    "packingInstructions",
                    "regulation",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "DangerousGoodsType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DangerousGoodsType"
                            }
                        ],
                        "description": "Classifies the shipment on how it is regulated. If multiple regulations apply, take the highest regulated type"
                    },
                    "unNumber": {
                        "type": "string",
                        "description": "The UN number or DOT number, eg UN3313",
                        "nullable": true
                    },
                    "class": {
                        "type": "string",
                        "description": "Dangerous goods Class, eg 3.1",
                        "nullable": true
                    },
                    "properShippingName": {
                        "type": "string",
                        "description": "Proper shipping name in English",
                        "nullable": true
                    },
                    "technicalName": {
                        "type": "string",
                        "description": "Technical name in english",
                        "nullable": true
                    },
                    "packingGroup": {
                        "type": "string",
                        "description": "Packing group. Eg I, II or III",
                        "nullable": true
                    },
                    "quantity": {
                        "title": "Quantity",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Quantity"
                            }
                        ],
                        "description": "A quantity measured in the specified unit.",
                        "nullable": true
                    },
                    "packingInstructions": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "For DangerousGoodsType LithiumBatteries (LB) provide the proper packaging information. Please note that not all PI combinations are allowed nor will the software check the values if it is possible.\nEg: PI965, PI967 and PI970"
                    },
                    "packingCode": {
                        "type": "string",
                        "description": "Code like 4G for fibreboard box",
                        "nullable": true
                    },
                    "packingDescription": {
                        "type": "string",
                        "description": "Package code like \"Fibreboard box\"",
                        "nullable": true
                    },
                    "section": {
                        "type": "string",
                        "description": "Used for LithiumBatteries, this is the section of the Packing instruction that applies to the Battery, eg section II or IA",
                        "nullable": true
                    },
                    "subrisk": {
                        "type": "string",
                        "description": "Additional risk next to its primary class.",
                        "nullable": true
                    },
                    "classificationCode": {
                        "type": "string",
                        "description": "See https://adrbook.com/en/2017/ADR/1.9.5.2.2 and search for example code “TFC”",
                        "nullable": true
                    },
                    "transportCategory": {
                        "type": "string",
                        "description": "Category used to determine hwo many units can be combined into 1 transport unit",
                        "nullable": true
                    },
                    "tunnelRestrictionCode": {
                        "type": "string",
                        "description": "Code that indicates if /when goods are restricted to be transported through tunnels",
                        "nullable": true
                    },
                    "isEnvironmentallyHazardous": {
                        "type": "boolean",
                        "description": "Is the item Environmentally Hazardous",
                        "nullable": true
                    },
                    "aircraftAccessibility": {
                        "title": "AircraftAccessibilityNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AircraftAccessibility"
                            }
                        ],
                        "description": "How accessible is the aircraft for loading and unloading",
                        "nullable": true
                    },
                    "weight": {
                        "title": "Weight",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Weight"
                            }
                        ],
                        "description": "Gross and net weight of the dangerous goods component in unit of measure set in WeightUnit",
                        "nullable": true
                    },
                    "volume": {
                        "title": "Volume",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Volume"
                            }
                        ],
                        "description": "Gross and net volume of the dangerous goods component in cubic unit of measure set in DimensionUnit",
                        "nullable": true
                    },
                    "regulation": {
                        "title": "Regulation",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Regulation"
                            }
                        ],
                        "description": "Compliance for transportation of dangerous goods for a specific transport mode"
                    },
                    "flashPoint": {
                        "type": "string",
                        "description": "The lowest temperature at which a combustible substance gives off enough vapor to form an explosive or ignitable mixture with air",
                        "nullable": true
                    },
                    "dgPhrase": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                    },
                    "tremCardNumber": {
                        "type": "string",
                        "description": "Cards that workers must carry with them at all times when transporting dangerous goods or hazardous substances.\nThese cards are provided by the occupier or operator of a facility and are then kept in the cab of the vehicle",
                        "nullable": true
                    },
                    "emsNumber": {
                        "type": "string",
                        "description": "Emergency Schedules (EmS) to be followed in case of incidents involving dangerous substances, materials or articles,\nor harmful substances, under the International Maritime Dangerous Goods Code",
                        "nullable": true
                    },
                    "msdsNumber": {
                        "type": "string",
                        "description": "Number of a material safety data sheet (MSDS).\nA MSDS document is a document that describes the hazards of a hazardous substance or mixture and provides advice on how to work with it safely",
                        "nullable": true
                    },
                    "innerPackage": {
                        "title": "InnerPackage",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/InnerPackage"
                            }
                        ],
                        "description": "Inner package information",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "All properties for one dangerous goods component"
            },
            "DangerousGoodsType": {
                "title": "DangerousGoodsType",
                "enum": [
                    "exceptedQuantity",
                    "limitedQuantity",
                    "lithiumBatteries",
                    "dryIce",
                    "passengerAircraftOk",
                    "cargoAircraftOnly",
                    "radioActiveMaterial"
                ],
                "type": "string",
                "description": "Classifies the shipment on how it is regulated. If multiple regulations apply, take the highest regulated type"
            },
            "DateTimeComparison": {
                "title": "DateTimeComparison",
                "required": [
                    "$type",
                    "aggregate",
                    "operator",
                    "value"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseComparison"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "dateTime"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "title": "DateTime",
                        "type": "string",
                        "description": "The date time value to compare against. NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "operator": {
                        "title": "DateTimeComparisonOperator",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DateTimeComparisonOperator"
                            }
                        ],
                        "description": "The operator to use for date time comparison\n- `eq`: equal to\n- `ne`: not equal to\n- `gt`: greater than\n- `gte`: greater than or equal to\n- `lt`: less than\n- `lte`: less than or equal to"
                    },
                    "aggregate": {
                        "title": "AggregationType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AggregationType"
                            }
                        ],
                        "description": "(optional) Type of aggregation when the `FieldPath` yields multiple results. Default: `single`.\n\n- `single`: returns `true` if a single result is valid; will throw if no or multiple results are found\n- `all`: returns `true` if all results are valid, `true` if no results are found\n- `any`: returns `true` at least one result is valid, `false` if no results are found\n- `none`: returns `true` if none of the results are valid, `true` if no results are found"
                    }
                },
                "additionalProperties": false,
                "description": "Date time comparison"
            },
            "DateTimeComparisonOperator": {
                "title": "DateTimeComparisonOperator",
                "enum": [
                    "eq",
                    "ne",
                    "gt",
                    "gte",
                    "lt",
                    "lte"
                ],
                "type": "string"
            },
            "DecimalComparison": {
                "title": "DecimalComparison",
                "required": [
                    "$type",
                    "aggregate",
                    "operator",
                    "value"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseComparison"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "decimal"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "type": "number",
                        "description": "The decimal value to compare against",
                        "format": "double"
                    },
                    "operator": {
                        "title": "DecimalComparisonOperator",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DecimalComparisonOperator"
                            }
                        ],
                        "description": "The operator to use for comparison\n- `eq`: equal to\n- `ne`: not equal to\n- `gt`: greater than\n- `gte`: greater than or equal to\n- `lt`: less than\n- `lte`: less than or equal to"
                    },
                    "aggregate": {
                        "title": "NumericalAggregationType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NumericalAggregationType"
                            }
                        ],
                        "description": "(optional) Type of aggregation when the `FieldPath` yields multiple results. Default: `single`.\n\n- `single`: returns `true` if a single result is valid; will throw if no or multiple results are found\n- `all`: returns `true` if all results are valid, `true` if no results are found\n- `any`: returns `true` at least one result is valid, `false` if no results are found\n- `none`: returns `true` if none of the results are valid, `true` if no results are found\n- `sum`: returns `true` if the sum of all results is valid; will yield `0` if no results are found\n- `min`: returns `true` if the minimum of all results is valid; will throw if no results are found\n- `max`: returns `true` if the maximum of all results is valid; will throw if no results are found"
                    }
                },
                "additionalProperties": false,
                "description": "Decimal condition"
            },
            "DecimalComparisonOperator": {
                "title": "DecimalComparisonOperator",
                "enum": [
                    "eq",
                    "ne",
                    "gt",
                    "gte",
                    "lt",
                    "lte"
                ],
                "type": "string"
            },
            "DecimalListComparison": {
                "title": "DecimalListComparison",
                "required": [
                    "$type",
                    "aggregate",
                    "operator",
                    "value"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseComparison"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "decimalList"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "title": "DecimalList",
                        "type": "array",
                        "items": {
                            "type": "number",
                            "format": "double"
                        },
                        "description": "The List of decimals to compare against"
                    },
                    "operator": {
                        "title": "DecimalListComparisonOperator",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DecimalListComparisonOperator"
                            }
                        ],
                        "description": "The operator to use for comparison\n- `in`: is in the list\n- `nin`: is not in the list"
                    },
                    "aggregate": {
                        "title": "AggregationType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AggregationType"
                            }
                        ],
                        "description": "(optional) Type of aggregation when the `FieldPath` yields multiple results. Default: `single`.\n\n- `single`: returns `true` if a single result is valid; will throw if no or multiple results are found\n- `all`: returns `true` if all results are valid, `true` if no results are found\n- `any`: returns `true` at least one result is valid, `false` if no results are found\n- `none`: returns `true` if none of the results are valid, `true` if no results are found"
                    }
                },
                "additionalProperties": false,
                "description": "Decimal list condition"
            },
            "DecimalListComparisonOperator": {
                "title": "DecimalListComparisonOperator",
                "enum": [
                    "in",
                    "nin"
                ],
                "type": "string"
            },
            "DespatchAdviceDocument": {
                "title": "DespatchAdviceDocument",
                "required": [
                    "documentType",
                    "fileContent",
                    "fileExtension",
                    "fileName",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "fileExtension": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The extension of the file, e.g. \"pdf\"",
                        "example": "\"pdf\""
                    },
                    "fileName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The name of the file, e.g. \"my-file.pdf\"",
                        "example": "\"my-file.pdf\""
                    },
                    "fileContent": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The byte content of the file encoded in base64"
                    },
                    "documentType": {
                        "title": "DocumentType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DocumentType"
                            }
                        ],
                        "description": "Type of document"
                    },
                    "type": {
                        "title": "ManifestingDocumentType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ManifestingDocumentType"
                            }
                        ],
                        "description": "Document type"
                    }
                },
                "additionalProperties": false,
                "description": "A manifesting document"
            },
            "Detail": {
                "title": "Detail",
                "required": [
                    "description",
                    "process"
                ],
                "type": "object",
                "properties": {
                    "process": {
                        "title": "Process",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Process"
                            }
                        ],
                        "description": "The process a Viya.Core.Enumerations.Tracking.v1.TrackingEventStandardizedCode belongs to."
                    },
                    "state": {
                        "title": "StateNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/State"
                            }
                        ],
                        "nullable": true
                    },
                    "stateDetail": {
                        "title": "StateDetailNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StateDetail"
                            }
                        ],
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the event"
                    }
                },
                "additionalProperties": false,
                "description": "Details about the event code"
            },
            "DimensionUnit": {
                "title": "DimensionUnit",
                "enum": [
                    "cmt",
                    "inh"
                ],
                "type": "string",
                "description": "Unit for length as per Unece organization: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
            },
            "DistinctValues": {
                "title": "DistinctValues",
                "required": [
                    "path",
                    "values"
                ],
                "type": "object",
                "properties": {
                    "path": {
                        "type": "string",
                        "description": "Path to the property for which distinct values were requested"
                    },
                    "values": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of distinct values that are available for the requested property"
                    }
                },
                "additionalProperties": false,
                "description": "Response to a distinct call.\n            \nIncludes the path of a requested distinct query, and a list of distinct values belonging to that property"
            },
            "Dock": {
                "title": "Dock",
                "type": "object",
                "properties": {
                    "loading": {
                        "type": "string",
                        "description": "Dock to be used for loading the shipment",
                        "nullable": true
                    },
                    "unloading": {
                        "type": "string",
                        "description": "Dock to be used for unloading the shipment",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Information about the dock used for a shipment"
            },
            "DocumentDetails": {
                "title": "DocumentDetails",
                "required": [
                    "contentPath",
                    "documentType",
                    "filename",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "ID of the CMR document, used to retrieve the content of the document",
                        "format": "uuid"
                    },
                    "documentType": {
                        "title": "DocumentType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DocumentType"
                            }
                        ],
                        "description": "Type of document"
                    },
                    "filename": {
                        "type": "string",
                        "description": "Human readable filename for the CMR document"
                    },
                    "contentPath": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Path at which the content of this CMR can be downloaded",
                        "format": "uri"
                    },
                    "sentToCarrier": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "Time at which the document was sent to the carrier.\n            \nIf null, this document has not been sent to the carrier.. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "created": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "Time at which the document was created.. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Metadata for a CMR document"
            },
            "DocumentService": {
                "title": "DocumentService",
                "required": [
                    "serviceCode"
                ],
                "type": "object",
                "properties": {
                    "serviceCode": {
                        "title": "DocumentServiceCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DocumentServiceCode"
                            }
                        ],
                        "description": "Code indicating how the document shall be delivered to the forwarder"
                    },
                    "date": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "Date the document (air booking form) is available for collection by the carrier if ServiceCode=Pickup. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Used Ocean and Air booking form."
            },
            "DocumentServiceCode": {
                "title": "DocumentServiceCode",
                "enum": [
                    "original",
                    "house",
                    "telex",
                    "forwardsCargoReceipt",
                    "pickup"
                ],
                "type": "string",
                "description": "Code indicating how the document shall be delivered to the forwarder"
            },
            "DocumentType": {
                "title": "DocumentType",
                "enum": [
                    "packingList",
                    "commercialInvoice",
                    "proformaInvoice",
                    "certificateOfOrigin",
                    "exportDeclaration",
                    "letterOfCredit",
                    "cmr",
                    "billOfLading",
                    "dangerousGoodsDeclaration",
                    "other"
                ],
                "type": "string",
                "description": "Type of document"
            },
            "DropOffAddress": {
                "title": "DropOffAddress",
                "required": [
                    "addressLine1",
                    "countryCode"
                ],
                "type": "object",
                "properties": {
                    "companyName": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine1": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "addressLine2": {
                        "type": "string",
                        "nullable": true
                    },
                    "addressLine3": {
                        "type": "string",
                        "nullable": true
                    },
                    "streetNumber": {
                        "type": "string",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "nullable": true
                    },
                    "stateCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "postCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "countryCode": {
                        "title": "CountryCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryCode"
                            }
                        ],
                        "description": "Country codes based on ISO 3166, see <a href=\"https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2\">wikipedia</a>"
                    },
                    "vat": {
                        "type": "string",
                        "nullable": true
                    },
                    "eori": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactName": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactPhone": {
                        "type": "string",
                        "nullable": true
                    },
                    "contactEmail": {
                        "type": "string",
                        "nullable": true
                    },
                    "accounts": {
                        "title": "AddressAccountList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressAccount"
                        },
                        "nullable": true
                    },
                    "references": {
                        "title": "AddressReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressReferences"
                            }
                        ],
                        "description": "A collection of optional references attached to an address",
                        "nullable": true
                    },
                    "carrierAssignedAddressId": {
                        "type": "string",
                        "description": "Identifier by which the carrier identifies the drop-off location, the former DropOffId\nUse this in combination with ServiceOptions.HoldForPickup",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Address where the shipment can be dropped of for final delivery. The Receiver can then collect it from this Drop-off address."
            },
            "EnrichedReferenceGenerator": {
                "title": "EnrichedReferenceGenerator",
                "required": [
                    "activeRanges",
                    "depletedRanges",
                    "futureRanges",
                    "ranges",
                    "reference",
                    "remaining",
                    "threshold"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "pattern": "^[\\w\\-]{1,50}$",
                        "type": "string",
                        "description": "Reference"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label (compact description)",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description",
                        "nullable": true
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "Threshold amount when to trigger depletion alert",
                        "format": "int64"
                    },
                    "resetPeriodLength": {
                        "title": "PeriodLengthNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PeriodLength"
                            }
                        ],
                        "description": "Defines the length of the period after which all ranges are reset. \n\nIf not set, no reset will occur.",
                        "nullable": true
                    },
                    "timeZoneOffset": {
                        "pattern": "\\-?(0[0-9]|1[0-5]):[0-5][0-9]",
                        "type": "string",
                        "description": "Optional Timezone Offset in format '(-)hh:mm' \n\nIf given, [DATE] indicators in the references will give the formatted date in this timezone. \n\nIf not set, the date will be in UTC. \n\nValue must be between -15:59 and 15:59.",
                        "nullable": true
                    },
                    "remaining": {
                        "type": "integer",
                        "description": "Calculated field indicating how many items are remaining in the reference generator, across all ranges",
                        "format": "int64"
                    },
                    "nextInFormat": {
                        "type": "string",
                        "description": "Calculated field indicating what the next value will be in the given format in the active range, if any active range exists",
                        "nullable": true
                    },
                    "activeRanges": {
                        "type": "integer",
                        "description": "Calculated field indicating how many ranges are active",
                        "format": "int64"
                    },
                    "depletedRanges": {
                        "type": "integer",
                        "description": "Calculated field indicating how many ranges are depleted",
                        "format": "int64"
                    },
                    "futureRanges": {
                        "type": "integer",
                        "description": "Calculated field indicating how many ranges are future",
                        "format": "int64"
                    },
                    "ranges": {
                        "title": "ReferenceGeneratorRangeResponseList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReferenceGeneratorRangeResponse"
                        },
                        "description": "Ranges for this reference generator"
                    }
                },
                "additionalProperties": false,
                "description": "Definition of a reference generator, including information on where it is used and some summarizing information"
            },
            "EquipmentTemperatureType": {
                "title": "EquipmentTemperatureType",
                "enum": [
                    "ambient",
                    "cooled",
                    "frozen",
                    "dryIceReplenishment",
                    "cryo"
                ],
                "type": "string",
                "description": "Describes the temperature under which the shipment should be transported in case of temperature sensitive goods."
            },
            "Error": {
                "title": "Error",
                "required": [
                    "code",
                    "message"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "type": "string",
                        "description": "Unique Error code for this type of error, can be carrier assigned or if carrier did not assign: integration assigned"
                    },
                    "message": {
                        "type": "string",
                        "description": "Human-readable message for that code which can include transactional information, or carrier specific response"
                    },
                    "explanation": {
                        "type": "string",
                        "description": "Additional information to clarify the message to the user. Optional",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Detailed definition of an error included in an ErrorResponse"
            },
            "EventGrouping": {
                "title": "EventGrouping",
                "required": [
                    "id",
                    "logisticsUnitType"
                ],
                "type": "object",
                "properties": {
                    "logisticsUnitType": {
                        "title": "LogisticsUnitType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LogisticsUnitType"
                            }
                        ],
                        "description": "Which type of entity this event belongs to"
                    },
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "The ID of the entity",
                        "format": "uuid"
                    },
                    "handlingUnitId": {
                        "title": "GuidNullable",
                        "type": "string",
                        "description": "If we have identified a specific handling unit for this event, it will be stored here",
                        "format": "uuid",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Indication of which entities this event belongs to"
            },
            "ExportReasonType": {
                "title": "ExportReasonType",
                "enum": [
                    "permanent",
                    "temporary",
                    "returnToOrigin",
                    "return",
                    "exhibition",
                    "interCompany",
                    "sale",
                    "personalUse",
                    "sample",
                    "gift",
                    "diplomatic",
                    "defence"
                ],
                "type": "string"
            },
            "Feature": {
                "title": "Feature",
                "required": [
                    "enabled"
                ],
                "type": "object",
                "properties": {
                    "enabled": {
                        "type": "boolean"
                    },
                    "details": {
                        "type": "string",
                        "nullable": true
                    },
                    "title": {
                        "type": "string",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "nullable": true
                    },
                    "listHeaders": {
                        "title": "StringArray",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "nullable": true
                    },
                    "subFeatures": {
                        "title": "StringFeatureDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Feature"
                        },
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "FieldComparison": {
                "title": "FieldComparison",
                "required": [
                    "$type",
                    "aggregate",
                    "operator",
                    "value"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseComparison"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "field"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Path in the shipment to the value to compare against.\n\nThe field should contain one of the following types:\n- `string`\n- `decimal`\n- `dateTime`\n- `boolean`\n\nI.e., lists are not supported. \n\nThe path given should adhere to the [JSONPath standard](https://goessner.net/articles/JsonPath/), starting from the root of the object. \n"
                    },
                    "operator": {
                        "title": "FieldComparisonOperator",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/FieldComparisonOperator"
                            }
                        ],
                        "description": "The operator to use for field comparison \n\nNOTE: The operator should be compatible with the type of the field and the value to compare against.\n\nSee associated comparison classes for supported operators for each type."
                    },
                    "aggregate": {
                        "title": "NumericalAggregationType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NumericalAggregationType"
                            }
                        ],
                        "description": "(optional) Type of aggregation when the `FieldPath` yields multiple results. Default: `single`.\n\n- `single`: returns `true` if a single result is valid; will throw if no or multiple results are found\n- `all`: returns `true` if all results are valid, `true` if no results are found\n- `any`: returns `true` at least one result is valid, `false` if no results are found\n- `none`: returns `true` if none of the results are valid, `true` if no results are found\n- `sum`: returns `true` if the sum of all results is valid; will yield `0` if no results are found\n- `min`: returns `true` if the minimum of all results is valid; will throw if no results are found\n- `max`: returns `true` if the maximum of all results is valid; will throw if no results are found"
                    }
                },
                "additionalProperties": false,
                "description": "Compare against a field"
            },
            "FieldComparisonOperator": {
                "title": "FieldComparisonOperator",
                "enum": [
                    "eq",
                    "ne",
                    "gt",
                    "gte",
                    "lt",
                    "lte",
                    "in",
                    "nin"
                ],
                "type": "string"
            },
            "GetAddressDeterminationItemsResponse": {
                "title": "GetAddressDeterminationItemsResponse",
                "required": [
                    "addresses",
                    "items"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "AddressDeterminationItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressDeterminationItem"
                        },
                        "description": "List of Address Determination Items"
                    },
                    "addresses": {
                        "title": "AddressBookItemResponseList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressBookItemResponse"
                        },
                        "description": "List of associated addresses. \n\nNote: there may be address references in the determination items for which the address does not exist yet."
                    }
                },
                "additionalProperties": false,
                "description": "All Address Determination Items and associated addresses"
            },
            "GetConsignmentListAddressCollection": {
                "title": "GetConsignmentListAddressCollection",
                "required": [
                    "receiver",
                    "sender"
                ],
                "type": "object",
                "properties": {
                    "sender": {
                        "title": "GetConsignmentListAddressItem",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetConsignmentListAddressItem"
                            }
                        ],
                        "description": "The party who initiates the shipment, responsible for the booking"
                    },
                    "receiver": {
                        "title": "GetConsignmentListAddressItem",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetConsignmentListAddressItem"
                            }
                        ],
                        "description": "The party that should receive the goods being shipped"
                    },
                    "carrier": {
                        "title": "GetConsignmentListAddressItem",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetConsignmentListAddressItem"
                            }
                        ],
                        "description": "Address of the carrier",
                        "nullable": true
                    },
                    "collection": {
                        "title": "GetConsignmentListAddressItem",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetConsignmentListAddressItem"
                            }
                        ],
                        "description": "Address where the goods should be collected",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Cut down address collection for use in consignment lists"
            },
            "GetConsignmentListAddressItem": {
                "title": "GetConsignmentListAddressItem",
                "required": [
                    "addressLine1",
                    "companyName",
                    "countryCode"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string",
                        "description": "Reference to the address if stored in Viya",
                        "nullable": true
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Company name of the address"
                    },
                    "addressLine1": {
                        "type": "string",
                        "description": "First line of the address"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country code"
                    }
                },
                "additionalProperties": false,
                "description": "Cut down version of the Address model for use in consignment lists"
            },
            "GetConsignmentListItem": {
                "title": "GetConsignmentListItem",
                "required": [
                    "dimensionUnit",
                    "handlingUnitIds",
                    "loadedShipments",
                    "locationReference",
                    "reference",
                    "status",
                    "timeWindows",
                    "weightUnit"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "GuidNullable",
                        "type": "string",
                        "description": "identifier of the entity, filled by back-end",
                        "format": "uuid",
                        "nullable": true
                    },
                    "createdOn": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "Date/Time when the entity was created. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "modifiedOn": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "Date/Time when the entity was last modified. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "title": "ConsignmentLoadingStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentLoadingStatus"
                            }
                        ],
                        "description": "The loading status of the trailer"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper assigned reference to the trailer"
                    },
                    "locationReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper assigned reference to the shipping location"
                    },
                    "timeWindows": {
                        "title": "ConsignmentTimeWindows",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentTimeWindows"
                            }
                        ],
                        "description": "Time windows for pickup and delivery of the consignment"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text specifying the classification of a type of cargo. Can be multple in case the consignment holds multiple cargoTypes",
                        "nullable": true
                    },
                    "carrierReference": {
                        "type": "string",
                        "description": "The reference to the carrier the consignment should be booked with",
                        "nullable": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Carrier",
                        "nullable": true
                    },
                    "requestedTrackingReference": {
                        "type": "string",
                        "description": "If the carrier supports using a customer provided tracking reference, this is the reference to use.",
                        "nullable": true
                    },
                    "serviceLevelReference": {
                        "type": "string",
                        "description": "Reference to service level of shipment",
                        "nullable": true
                    },
                    "modeOfTransport": {
                        "title": "ModeOfTransportNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeOfTransport"
                            }
                        ],
                        "description": "The method of transporting cargo.",
                        "nullable": true
                    },
                    "dimensionUnit": {
                        "title": "DimensionUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DimensionUnit"
                            }
                        ],
                        "description": "Unit for length as per Unece organization: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "weightUnit": {
                        "title": "WeightUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeightUnit"
                            }
                        ],
                        "description": "Unece.org list: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "references": {
                        "title": "LoadReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadReferenceCollection"
                            }
                        ],
                        "description": "<inheritdoc cref=\"T:Viya.Shipping.Contracts.v2.Models.Trailers.Manifesting.LoadReferenceCollection\" />",
                        "nullable": true
                    },
                    "addresses": {
                        "title": "GetConsignmentListAddressCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetConsignmentListAddressCollection"
                            }
                        ],
                        "description": "Addresses relevant to the consignment",
                        "nullable": true
                    },
                    "loadedShipments": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "IDs of shipments on this consignment"
                    },
                    "handlingUnitIds": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "IDs of handling units on the consignment"
                    },
                    "originIdentifier": {
                        "type": "string",
                        "description": "URI or Reference indicating the host system from where the consignment request originated",
                        "nullable": true
                    },
                    "orderedExternally": {
                        "type": "boolean",
                        "description": "Set to true to indicate that the consignemnt is ordered externally.\n            \nFor this to be accepted, a carrier reference must be provided, and a tracking reference on the consignment, or handling units.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "A subset of a full consignment for a GetList response"
            },
            "GetConsignmentListItemListWrapper": {
                "title": "GetConsignmentListItemListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "GetConsignmentListItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetConsignmentListItem"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "GetConsignmentResponse": {
                "title": "GetConsignmentResponse",
                "required": [
                    "createdOn",
                    "dimensionUnit",
                    "documents",
                    "handlingUnitIds",
                    "id",
                    "loaded",
                    "locationReference",
                    "mutations",
                    "reference",
                    "status",
                    "timeWindows",
                    "weightUnit"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper assigned reference to the trailer"
                    },
                    "locationReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper assigned reference to the shipping location"
                    },
                    "timeWindows": {
                        "title": "ConsignmentTimeWindows",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentTimeWindows"
                            }
                        ],
                        "description": "Time windows for pickup and delivery of the consignment"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text specifying the classification of a type of cargo. Can be multple in case the consignment holds multiple cargoTypes",
                        "nullable": true
                    },
                    "carrierReference": {
                        "type": "string",
                        "description": "The reference to the carrier the consignment should be booked with",
                        "nullable": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Carrier",
                        "nullable": true
                    },
                    "requestedTrackingReference": {
                        "type": "string",
                        "description": "If the carrier supports using a customer provided tracking reference, this is the reference to use.",
                        "nullable": true
                    },
                    "serviceLevelReference": {
                        "type": "string",
                        "description": "Reference to service level of shipment",
                        "nullable": true
                    },
                    "incoterms": {
                        "title": "Incoterms",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Incoterms"
                            }
                        ],
                        "description": "Indicates the Responsibilities for Cost/Insurance/Risks for the shipment",
                        "nullable": true
                    },
                    "modeOfTransport": {
                        "title": "ModeOfTransportNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeOfTransport"
                            }
                        ],
                        "description": "The method of transporting cargo.",
                        "nullable": true
                    },
                    "dimensionUnit": {
                        "title": "DimensionUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DimensionUnit"
                            }
                        ],
                        "description": "Unit for length as per Unece organization: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "weightUnit": {
                        "title": "WeightUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeightUnit"
                            }
                        ],
                        "description": "Unece.org list: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "references": {
                        "title": "LoadReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadReferenceCollection"
                            }
                        ],
                        "description": "<inheritdoc cref=\"T:Viya.Shipping.Contracts.v3.DespatchAdvice.LoadReferenceCollection\" />",
                        "nullable": true
                    },
                    "instructions": {
                        "title": "LoadInstructions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadInstructions"
                            }
                        ],
                        "description": "<inheritdoc cref=\"T:Viya.Shipping.Contracts.v3.DespatchAdvice.LoadInstructions\" />",
                        "nullable": true
                    },
                    "addresses": {
                        "title": "LoadAddressCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LoadAddressCollection"
                            }
                        ],
                        "description": "Addresses relevant to the consignment",
                        "nullable": true
                    },
                    "handlingUnits": {
                        "title": "ConsignmentHandlingUnitList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentHandlingUnit"
                        },
                        "description": "If the handling units on the consignment are already known, and also known to exist in shipping.\nReferences can be included here to link the consignment to the handling units.",
                        "nullable": true
                    },
                    "originIdentifier": {
                        "type": "string",
                        "description": "URI or Reference indicating the host system from where the consignment request originated",
                        "nullable": true
                    },
                    "orderedExternally": {
                        "type": "boolean",
                        "description": "Set to true to indicate that the consignemnt is ordered externally.\n            \nFor this to be accepted, a carrier reference must be provided, and a tracking reference on the consignment, or handling units.",
                        "nullable": true
                    },
                    "network": {
                        "title": "ConsignmentNetworkProperties",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentNetworkProperties"
                            }
                        ],
                        "description": "Network planning properties of the consignment. \n\n`Initial` and `Final` are both nullable, to allow for first-mile and last-mile consignments",
                        "nullable": true
                    },
                    "preAdviceNote": {
                        "type": "string",
                        "description": "Pre Advice Notes added by shipper",
                        "nullable": true
                    },
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdOn": {
                        "title": "DateTime",
                        "type": "string",
                        "description": ". NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": ". NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "title": "ConsignmentLoadingStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConsignmentLoadingStatus"
                            }
                        ],
                        "description": "The loading status of the trailer"
                    },
                    "loaded": {
                        "title": "ConsignmentContentsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentContents"
                        },
                        "description": "The list of shipments that are loaded to the trailer"
                    },
                    "documents": {
                        "title": "DespatchAdviceDocumentList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DespatchAdviceDocument"
                        },
                        "description": "Any documents pertaining to the requested manifest are included here"
                    },
                    "mutations": {
                        "title": "ConsignmentMutationList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentMutation"
                        },
                        "description": "Any historic changes to the status of the consignment"
                    },
                    "handlingUnitIds": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "IDs of handling units on the consignment"
                    },
                    "preAdvice": {
                        "title": "PreAdviceDetail",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PreAdviceDetail"
                            }
                        ],
                        "description": "Pre advice properties of the consignment. \n\nThis will be added if the consignment is sent to a carrier that supports pre advice, and the consignment is not ordered externally.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response when getting a consignment"
            },
            "GetNetworkLanesResponse": {
                "title": "GetNetworkLanesResponse",
                "required": [
                    "addresses",
                    "networkLanes"
                ],
                "type": "object",
                "properties": {
                    "networkLanes": {
                        "title": "NetworkLaneWithReferenceList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkLaneWithReference"
                        },
                        "description": "List of lanes"
                    },
                    "addresses": {
                        "title": "AddressBookItemResponseList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/AddressBookItemResponse"
                        },
                        "description": "List of associated addresses. \n\nNote: there may be address references in the lanes for which the address does not exist yet."
                    }
                },
                "additionalProperties": false,
                "description": "All network lanes and associated addresses"
            },
            "GetPickupRequestResponse": {
                "title": "GetPickupRequestResponse",
                "required": [
                    "addresses",
                    "carrier",
                    "createdOn",
                    "id",
                    "locationReference",
                    "pickup",
                    "reference",
                    "shipments",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the pickup assigned by the Shipper"
                    },
                    "locationReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location reference for the carrier"
                    },
                    "carrier": {
                        "title": "Carrier",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Carrier"
                            }
                        ],
                        "description": "Carrier to be used for the pickup"
                    },
                    "pickup": {
                        "title": "AbsoluteDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AbsoluteDateRange"
                            }
                        ],
                        "description": "A date range given in absolute datetime (including timezone information)"
                    },
                    "addresses": {
                        "title": "PickupAddressCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PickupAddressCollection"
                            }
                        ],
                        "description": "Sending and Collection address for pickup"
                    },
                    "collectionInstructions": {
                        "type": "string",
                        "description": "Any special instructions for the carrier",
                        "nullable": true
                    },
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdOn": {
                        "title": "DateTime",
                        "type": "string",
                        "description": ". NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": ". NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "shipments": {
                        "title": "ShipmentSummaryList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentSummary"
                        },
                        "description": "The shipments present on the pickup request"
                    },
                    "status": {
                        "title": "PickupRequestStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PickupRequestStatus"
                            }
                        ],
                        "description": "The status of the entity, this is for retrieval only."
                    },
                    "carrierAssignedPickupReference": {
                        "type": "string",
                        "description": "Carrier assigned pickup reference",
                        "nullable": true
                    },
                    "carrierLocationReference": {
                        "type": "string",
                        "description": "optional string that Fedex needs when you want to cancel this request again.",
                        "nullable": true
                    },
                    "orderResultMessages": {
                        "title": "StringHashSet",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Any result messages from the pickup request",
                        "nullable": true
                    },
                    "cancelResultMessages": {
                        "title": "StringHashSet",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Any result messages from the pickup cancellation",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "GetPickupRequestResponseListWrapper": {
                "title": "GetPickupRequestResponseListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "GetPickupRequestResponseList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetPickupRequestResponse"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "GetShipmentLabels": {
                "title": "GetShipmentLabels",
                "type": "object",
                "properties": {
                    "path": {
                        "title": "Uri",
                        "type": "string",
                        "description": "API path to all labels present on the shipment",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "References to the labels present on the shipment"
            },
            "GetShipmentListAddressItem": {
                "title": "GetShipmentListAddressItem",
                "required": [
                    "addressLine1",
                    "companyName",
                    "countryCode"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string",
                        "description": "Reference to the address if stored in Viya",
                        "nullable": true
                    },
                    "companyName": {
                        "type": "string",
                        "description": "Company name of the address"
                    },
                    "addressLine1": {
                        "type": "string",
                        "description": "First line of the address"
                    },
                    "countryCode": {
                        "type": "string",
                        "description": "Country code"
                    }
                },
                "additionalProperties": false,
                "description": "Cut down version of the Address model for use in shipment lists"
            },
            "GetShipmentListHandlingUnitItem": {
                "title": "GetShipmentListHandlingUnitItem",
                "required": [
                    "childrenCount",
                    "goodsItemCount",
                    "height",
                    "id",
                    "length",
                    "packageType",
                    "reference",
                    "sequence",
                    "weight",
                    "width"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "ID of handling unit in the system",
                        "format": "uuid"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Reference of handling unit"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of the HandlingUnit in unit of measure set in WeightUnit",
                        "format": "double"
                    },
                    "length": {
                        "type": "number",
                        "description": "Length of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "width": {
                        "type": "number",
                        "description": "Width of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "height": {
                        "type": "number",
                        "description": "Height of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Unique sequence number per HandlingUnit, start with 1 and increment with 1 for each HandlingUnit",
                        "format": "int32"
                    },
                    "packageType": {
                        "title": "PackageTypeInfo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageTypeInfo"
                            }
                        ],
                        "description": "Package info identifying the packaging used"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text that indicates what goods are packed in the HandlingUnit",
                        "nullable": true
                    },
                    "references": {
                        "title": "HandlingUnitReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitReferences"
                            }
                        ],
                        "description": "Any references identifying this HandlingUnit",
                        "nullable": true
                    },
                    "goodsItemCount": {
                        "type": "integer",
                        "description": "Identifies number of goods items in the HandlingUnit",
                        "format": "int32"
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique identifier of the Handling Unit assigned by the Carrier",
                        "nullable": true
                    },
                    "trackingLink": {
                        "title": "HtmlForm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlForm"
                            }
                        ],
                        "description": "Details of an HTML form content",
                        "nullable": true
                    },
                    "childrenCount": {
                        "type": "integer",
                        "description": "How many children this handling unit has",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Model for a handling unit item in a shipment list"
            },
            "GetShipmentListItem": {
                "title": "GetShipmentListItem",
                "required": [
                    "collection",
                    "createdOn",
                    "handlingUnitCount",
                    "handlingUnits",
                    "id",
                    "path",
                    "receiver",
                    "reference",
                    "sender",
                    "status",
                    "timeWindows"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "identifier of the shipment",
                        "format": "uuid"
                    },
                    "createdOn": {
                        "title": "DateTime",
                        "type": "string",
                        "description": "Date/Time when the shipment was created. NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "Date/Time when the shipment was last modified. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "path": {
                        "minLength": 1,
                        "type": "string",
                        "description": "API path to the full shipment details"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Shipper"
                    },
                    "status": {
                        "title": "ShipmentStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentStatus"
                            }
                        ],
                        "description": "The status of the shipment"
                    },
                    "sender": {
                        "title": "GetShipmentListAddressItem",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetShipmentListAddressItem"
                            }
                        ],
                        "description": "The party who initiates the shipment, responsible for the booking"
                    },
                    "receiver": {
                        "title": "GetShipmentListAddressItem",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetShipmentListAddressItem"
                            }
                        ],
                        "description": "The party that should receive the goods being shipped"
                    },
                    "collection": {
                        "title": "GetShipmentListAddressItem",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetShipmentListAddressItem"
                            }
                        ],
                        "description": "Address where the goods should be collected"
                    },
                    "description": {
                        "type": "string",
                        "description": "General description of goods",
                        "nullable": true
                    },
                    "carrierReference": {
                        "type": "string",
                        "description": "Reference to the carrier executing the movement of the shipment",
                        "nullable": true
                    },
                    "carrierLabel": {
                        "type": "string",
                        "description": "Label of the carrier executing the movement of the shipment",
                        "nullable": true
                    },
                    "timeWindows": {
                        "title": "TimeWindows",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeWindows"
                            }
                        ],
                        "description": "Date/Time windows for pickup and delivery of the shipment"
                    },
                    "serviceLevelReference": {
                        "type": "string",
                        "description": "Service level of the shipment",
                        "nullable": true
                    },
                    "references": {
                        "title": "ShipmentReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentReferenceCollection"
                            }
                        ],
                        "description": "Collection of References that can be included in the shipment",
                        "nullable": true
                    },
                    "handlingUnits": {
                        "title": "GetShipmentListHandlingUnitItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetShipmentListHandlingUnitItem"
                        },
                        "description": "List of handling units that contain the goods"
                    },
                    "returnablePackaging": {
                        "title": "ReturnablePackageItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReturnablePackageItem"
                        },
                        "description": "List of returnable packaging materials that should be returned to the shipper",
                        "nullable": true
                    },
                    "handlingUnitCount": {
                        "type": "integer",
                        "description": "Number of handling units",
                        "format": "int32"
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique identifier of the Shipment assigned by the Carrier",
                        "nullable": true
                    },
                    "trackingLink": {
                        "title": "HtmlForm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlForm"
                            }
                        ],
                        "description": "Details of an HTML form content",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Model for a shipment item when getting a shipment list"
            },
            "GetShipmentListItemListWrapper": {
                "title": "GetShipmentListItemListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "GetShipmentListItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetShipmentListItem"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "GetShipmentResponse": {
                "title": "GetShipmentResponse",
                "required": [
                    "addresses",
                    "containsDangerousGoods",
                    "createdOn",
                    "dimensionUnit",
                    "documents",
                    "handlingUnits",
                    "id",
                    "inbound",
                    "locationReference",
                    "mutations",
                    "reference",
                    "status",
                    "timeWindows",
                    "weightUnit"
                ],
                "type": "object",
                "properties": {
                    "accounts": {
                        "title": "Accounts",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Accounts"
                            }
                        ],
                        "description": "Accounts for the order",
                        "nullable": true
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Shipper"
                    },
                    "locationReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the Location the shipment is sent by"
                    },
                    "addresses": {
                        "title": "AddressCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressCollection"
                            }
                        ],
                        "description": "All addresses related to this shipment"
                    },
                    "dimensionUnit": {
                        "title": "DimensionUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DimensionUnit"
                            }
                        ],
                        "description": "Unit for length as per Unece organization: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "weightUnit": {
                        "title": "WeightUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeightUnit"
                            }
                        ],
                        "description": "Unece.org list: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "description": {
                        "type": "string",
                        "description": "General description of goods",
                        "nullable": true
                    },
                    "declaredValue": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency",
                        "nullable": true
                    },
                    "timeWindows": {
                        "title": "TimeWindows",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeWindows"
                            }
                        ],
                        "description": "Date/Time windows for pickup and delivery of the shipment"
                    },
                    "incoterms": {
                        "title": "Incoterms",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Incoterms"
                            }
                        ],
                        "description": "Indicates the Responsibilities for Cost/Insurance/Risks for the shipment",
                        "nullable": true
                    },
                    "carrierReference": {
                        "type": "string",
                        "description": "Reference of the carrier executing the movement of the shipment",
                        "nullable": true
                    },
                    "carrierLabel": {
                        "type": "string",
                        "description": "Label of the carrier executing the movement of the shipment",
                        "nullable": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Carrier",
                        "nullable": true
                    },
                    "requestedTrackingReference": {
                        "type": "string",
                        "description": "If the carrier supports using a customer provided tracking reference, this is the reference to use.",
                        "nullable": true
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Indicator if shipment is an inbound shipment, where Inbound is defined as:\nA shipment being shipped into a facility belonging to the shipping platform customer, where the shipment is not a return\nWhere a return is defined as: a shipment that is returned to the shipping platform customer from an end-customer which can be directly related to an outbound shipment to that end-customer."
                    },
                    "serviceLevelReference": {
                        "type": "string",
                        "description": "Reference to service level of shipment",
                        "nullable": true
                    },
                    "serviceOptions": {
                        "title": "ServiceOptionsModel",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceOptionsModel"
                            }
                        ],
                        "description": "Any service option that additionally applies to the shipment",
                        "nullable": true
                    },
                    "references": {
                        "title": "ShipmentReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentReferenceCollection"
                            }
                        ],
                        "description": "Collection of References that can be included in the shipment",
                        "nullable": true
                    },
                    "instructions": {
                        "title": "ShipmentInstructions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentInstructions"
                            }
                        ],
                        "description": "Any instructions on shipment level with an escape to add key/values at the end",
                        "nullable": true
                    },
                    "commercialInvoice": {
                        "title": "CommercialInvoice",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CommercialInvoice"
                            }
                        ],
                        "description": "Invoice document used for Export Declaration",
                        "nullable": true
                    },
                    "returnablePackaging": {
                        "title": "ReturnablePackageItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReturnablePackageItem"
                        },
                        "description": "List of returnable packaging materials that should be returned to the shipper",
                        "nullable": true
                    },
                    "handlingUnits": {
                        "title": "HandlingUnitList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnit"
                        },
                        "description": "List of Handling units that contain the goods"
                    },
                    "rate": {
                        "title": "Rate",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Rate"
                            }
                        ],
                        "description": "Information about the selected rate for this shipment",
                        "nullable": true
                    },
                    "containsDangerousGoods": {
                        "type": "boolean",
                        "description": "Calculated field indicating if the shipment contains any dangerous goods",
                        "readOnly": true
                    },
                    "originIdentifier": {
                        "type": "string",
                        "description": "URI or Reference indicating the host system from where the shipment request originated",
                        "nullable": true
                    },
                    "network": {
                        "title": "ShipmentNetworkProperties",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentNetworkProperties"
                            }
                        ],
                        "description": "Properties of the shipment regarding network planning. \n\nIf given, both `Initial` and `Final` must be present. Otherwise, it would not be possible to plan the shipment through the network.",
                        "nullable": true
                    },
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "format": "uuid"
                    },
                    "createdOn": {
                        "title": "DateTime",
                        "type": "string",
                        "description": ". NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "modifiedOn": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": ". NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "status": {
                        "title": "ShipmentStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentStatus"
                            }
                        ],
                        "description": "The status of the shipment, this is for retrieval only.\n            This cannot be modified by a PUT request"
                    },
                    "labels": {
                        "title": "GetShipmentLabels",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GetShipmentLabels"
                            }
                        ],
                        "description": "References to the labels present on the shipment",
                        "nullable": true
                    },
                    "documents": {
                        "title": "DocumentDetailsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DocumentDetails"
                        },
                        "description": "References to the CMR documents present on the shipment"
                    },
                    "mutations": {
                        "title": "MutationList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Mutation"
                        },
                        "description": "Any historic changes to the status of the shipment"
                    },
                    "additionalValuePairs": {
                        "title": "StringStringDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Additional value pairs, set by Shipping platform or retrieved from the Carrier",
                        "nullable": true
                    },
                    "trackingLink": {
                        "title": "HtmlForm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlForm"
                            }
                        ],
                        "description": "Details of an HTML form content",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response to a get shipment request"
            },
            "GetTrackingEventByHashResponse": {
                "title": "GetTrackingEventByHashResponse",
                "required": [
                    "event",
                    "hashes",
                    "logisticEntities",
                    "mappings",
                    "triggeredActions"
                ],
                "type": "object",
                "properties": {
                    "origin": {
                        "title": "TrackingEventOrigin",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventOrigin"
                            }
                        ],
                        "description": "Information regarding the origin of this event",
                        "nullable": true
                    },
                    "event": {
                        "title": "TrackingEvent",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEvent"
                            }
                        ],
                        "description": "Details of a tracking event"
                    },
                    "hashes": {
                        "title": "TrackingEventHashCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventHashCollection"
                            }
                        ],
                        "description": "The collection of unique, indexable hashes for this event"
                    },
                    "matchingEntities": {
                        "title": "EventGroupingList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/EventGrouping"
                        },
                        "description": "Once this event is processed by the system. We will know to which entities\nit belongs, this is stored here for later reference.",
                        "nullable": true
                    },
                    "mappings": {
                        "title": "MappingCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MappingCollection"
                            }
                        ],
                        "description": "Any mappings resulting from processing this event"
                    },
                    "triggeredActions": {
                        "title": "TriggeredActionList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TriggeredAction"
                        },
                        "description": "A list of any actions that this event caused to occur in the system"
                    },
                    "logisticEntities": {
                        "title": "LogisticEntities",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LogisticEntities"
                            }
                        ],
                        "description": "The Logistic Entities (consignment(s), shipment(s), handling unit(s)) the event is associated with"
                    }
                },
                "additionalProperties": false,
                "description": "Get tracking event by hash response"
            },
            "GetUnmappedStandardizedCodeEventsResponse": {
                "title": "GetUnmappedStandardizedCodeEventsResponse",
                "required": [
                    "events",
                    "forGrouping"
                ],
                "type": "object",
                "properties": {
                    "forGrouping": {
                        "title": "UnmappedStandardizedCodeOverviewItem",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UnmappedStandardizedCodeOverviewItem"
                            }
                        ],
                        "description": "Model that holds an Unmapped StandardizedCode overview item"
                    },
                    "events": {
                        "title": "TrackingEventList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingEvent"
                        }
                    }
                },
                "additionalProperties": false,
                "description": "List of tracking events that belong to a UNMAPPED standardized code grouping"
            },
            "GetUnmappedStandardizedCodeOverviewResponse": {
                "title": "GetUnmappedStandardizedCodeOverviewResponse",
                "required": [
                    "items"
                ],
                "type": "object",
                "properties": {
                    "items": {
                        "title": "UnmappedStandardizedCodeOverviewItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UnmappedStandardizedCodeOverviewItem"
                        },
                        "description": "The list of items"
                    }
                },
                "additionalProperties": false,
                "description": "Overview of Tracking Events with Unmapped StandardizedCode"
            },
            "GoodsItem": {
                "title": "GoodsItem",
                "required": [
                    "dangerousGoods",
                    "description",
                    "itemNumber"
                ],
                "type": "object",
                "properties": {
                    "itemNumber": {
                        "minLength": 1,
                        "type": "string",
                        "description": "SKU"
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Description of the SKU"
                    },
                    "quantity": {
                        "title": "Quantity",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Quantity"
                            }
                        ],
                        "description": "A quantity measured in the specified unit.",
                        "nullable": true
                    },
                    "purchaseOrder": {
                        "type": "string",
                        "description": "The PO number of the PO of the sending party, typically in drop-ship/cross-dock",
                        "nullable": true
                    },
                    "purchaseOrderLineNumber": {
                        "type": "integer",
                        "description": "The PO line number of the PO of the sending party",
                        "format": "int32",
                        "nullable": true
                    },
                    "customerPurchaseOrder": {
                        "type": "string",
                        "description": "The PO of the receiving party",
                        "nullable": true
                    },
                    "deliveryOrder": {
                        "type": "string",
                        "description": "Details of the delivery order",
                        "nullable": true,
                        "deprecated": true
                    },
                    "consigneeShipmentReference": {
                        "type": "string",
                        "description": "Shipment reference from Consignee (if any)",
                        "nullable": true,
                        "deprecated": true
                    },
                    "weight": {
                        "title": "Weight",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Weight"
                            }
                        ],
                        "description": "Weight of the total GoodsItem for this ItemNumber in unit of measure set in WeightUnit",
                        "nullable": true
                    },
                    "lotNumber": {
                        "type": "string",
                        "description": "Lot/Batch number",
                        "nullable": true
                    },
                    "expirationDate": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "The date the goods will expire. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    },
                    "dangerousGoods": {
                        "title": "DangerousGoodsItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DangerousGoodsItem"
                        },
                        "description": "Container that holds dangerous goods component information for the given goodsItem"
                    },
                    "references": {
                        "title": "GoodsItemReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/GoodsItemReferences"
                            }
                        ],
                        "description": "Any references identifying this GoodsItem",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Identifies goods inside a handlingUnit"
            },
            "GoodsItemReferences": {
                "title": "GoodsItemReferences",
                "type": "object",
                "properties": {
                    "gtin": {
                        "type": "string",
                        "description": "Global Trade Item Number (GTIN) can be used by a company to uniquely identify all of its trade items. GS1 defines trade items as products or services that are priced, ordered or invoiced at any point in the supply chain.",
                        "nullable": true
                    },
                    "buyerAssigned": {
                        "type": "string",
                        "description": "GoodsItem reference in accordance to the buyer",
                        "nullable": true
                    },
                    "deliveryOrder": {
                        "type": "string",
                        "description": "Delivery order number",
                        "nullable": true
                    },
                    "consigneeAssigned": {
                        "type": "string",
                        "description": "GoodsItem reference in accordance to the consignee",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Any references identifying this GoodsItem"
            },
            "HandlingUnit": {
                "title": "HandlingUnit",
                "required": [
                    "goodsItems",
                    "height",
                    "id",
                    "isDocument",
                    "length",
                    "packageType",
                    "reference",
                    "sequence",
                    "weight",
                    "width"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "ID of handling unit in the system. Only used on GET",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference of handling unit"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Unique sequence number per HandlingUnit, start with 1 and increment with 1 for each HandlingUnit",
                        "format": "int32"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of the HandlingUnit in unit of measure set in WeightUnit",
                        "format": "double"
                    },
                    "length": {
                        "type": "number",
                        "description": "Length of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "width": {
                        "type": "number",
                        "description": "Width of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "height": {
                        "type": "number",
                        "description": "Height of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "packageType": {
                        "title": "PackageTypeInfo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageTypeInfo"
                            }
                        ],
                        "description": "Package info identifying the packaging used. Viya.Shipping.Contracts.v3.Models.Shipments.HandlingUnits.PackageTypeInfo"
                    },
                    "status": {
                        "title": "HandlingUnitStatusNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitStatus"
                            }
                        ],
                        "nullable": true
                    },
                    "isDocument": {
                        "type": "boolean",
                        "description": "Indicates if the HandlingUnit is a document"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text that indicates what goods are packed in the HandlingUnit",
                        "nullable": true
                    },
                    "isStackable": {
                        "type": "boolean",
                        "description": "Indicates if the HandlingUnit can be stacked onto or on other stackable HandlingUnits",
                        "nullable": true
                    },
                    "references": {
                        "title": "HandlingUnitReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitReferences"
                            }
                        ],
                        "description": "Any references identifying this HandlingUnit",
                        "nullable": true
                    },
                    "serviceOptions": {
                        "title": "HandlingUnitServiceOptions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitServiceOptions"
                            }
                        ],
                        "description": "This indicates any additional service that should be applied for this handling unit",
                        "nullable": true
                    },
                    "goodsItems": {
                        "title": "GoodsItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GoodsItem"
                        },
                        "description": "Identifies goods inside a handlingUnit"
                    },
                    "requestedTrackingReference": {
                        "type": "string",
                        "description": "If the carrier supports using a customer provided tracking reference, this is the reference to use.",
                        "nullable": true
                    },
                    "labelReference": {
                        "title": "HandlingUnitLabelReference",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitLabelReference"
                            }
                        ],
                        "description": "Unique reference to the label of the HandlingUnit assigned by the system",
                        "nullable": true,
                        "readOnly": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique reference for the HandlingUnit assigned by the carrier",
                        "nullable": true
                    },
                    "children": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "IDs of handling units that are packed into this unit. Only used on GET",
                        "nullable": true,
                        "readOnly": true
                    },
                    "carrierShipmentReference": {
                        "type": "string",
                        "description": "Some carriers note the shipment reference on the handling unit level.",
                        "nullable": true
                    },
                    "trackingLink": {
                        "title": "HtmlForm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlForm"
                            }
                        ],
                        "description": "Details of an HTML form content",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Handling unit containing the actual goods"
            },
            "HandlingUnitContent": {
                "title": "HandlingUnitContent",
                "required": [
                    "detailsPath",
                    "height",
                    "id",
                    "length",
                    "packageType",
                    "reference",
                    "weight",
                    "width"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "ID of handling unit",
                        "format": "uuid"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference of handling unit"
                    },
                    "detailsPath": {
                        "type": "string",
                        "description": "Path to obtain more details about the handling unit"
                    },
                    "parentId": {
                        "title": "GuidNullable",
                        "type": "string",
                        "description": "Id of the parent handling unit if this is part of an overpack",
                        "format": "uuid",
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of the HandlingUnit in unit of measure set in WeightUnit",
                        "format": "double"
                    },
                    "length": {
                        "type": "number",
                        "description": "Length of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "width": {
                        "type": "number",
                        "description": "Width of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "height": {
                        "type": "number",
                        "description": "Height of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "packageType": {
                        "title": "PackageTypeInfo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageTypeInfo"
                            }
                        ],
                        "description": "Package info identifying the packaging used. Viya.Shipping.Contracts.v3.Models.Shipments.HandlingUnits.PackageTypeInfo"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text that indicates what goods are packed in the HandlingUnit",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details on handling units to be loaded"
            },
            "HandlingUnitExceptions": {
                "title": "HandlingUnitExceptions",
                "required": [
                    "exceptionEvents",
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "The handling unit's id",
                        "format": "uuid"
                    },
                    "exceptionEvents": {
                        "title": "TrackingEventWithMappedCodesList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingEventWithMappedCodes"
                        },
                        "description": "The exception tracking events associated with the handling unit"
                    }
                },
                "additionalProperties": false,
                "description": "Contains the exception tracking events for a single handling unit"
            },
            "HandlingUnitLabel": {
                "title": "HandlingUnitLabel",
                "required": [
                    "labels",
                    "sequence"
                ],
                "type": "object",
                "properties": {
                    "sequence": {
                        "type": "integer",
                        "description": "The sequence for the current handling unit, as determined during shipment creation.",
                        "format": "int32"
                    },
                    "reference": {
                        "type": "string",
                        "description": "The reference for the current handling unit.",
                        "nullable": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "The tracking reference for the current handling unit.",
                        "nullable": true
                    },
                    "labels": {
                        "title": "LabelList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Label"
                        },
                        "description": "List of labels for the current handling unit."
                    }
                },
                "additionalProperties": false,
                "description": "Handling unit response model with the Label(s)"
            },
            "HandlingUnitLabelReference": {
                "title": "HandlingUnitLabelReference",
                "required": [
                    "id"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "System ID of the label",
                        "format": "uuid"
                    },
                    "path": {
                        "title": "Uri",
                        "type": "string",
                        "description": "API path that points to more details about the handling unit",
                        "format": "uri",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Unique label reference"
            },
            "HandlingUnitOrdered": {
                "title": "HandlingUnitOrdered",
                "required": [
                    "sequence"
                ],
                "type": "object",
                "properties": {
                    "sequence": {
                        "type": "integer",
                        "description": "Unique sequence number per HandlingUnit, start with 1 and increment with 1 for each HandlingUnit",
                        "format": "int32"
                    },
                    "reference": {
                        "type": "string",
                        "description": "Unique reference of the handling unit assigned by the shipper",
                        "nullable": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Tracking reference of the handling unit assigned by the carrier",
                        "nullable": true
                    },
                    "trackingLink": {
                        "title": "HtmlForm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlForm"
                            }
                        ],
                        "description": "Details of an HTML form content",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details about the booked handling unit"
            },
            "HandlingUnitParents": {
                "title": "HandlingUnitParents",
                "required": [
                    "consignments",
                    "shipments"
                ],
                "type": "object",
                "properties": {
                    "consignments": {
                        "title": "GetConsignmentResponseList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetConsignmentResponse"
                        },
                        "description": "The consignments that this handling unit is a part of"
                    },
                    "shipments": {
                        "title": "GetShipmentResponseList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetShipmentResponse"
                        },
                        "description": "The shipments that this handling unit is a part of"
                    }
                },
                "additionalProperties": false,
                "description": "Handling unit parents (consignments and shipments)"
            },
            "HandlingUnitReferences": {
                "title": "HandlingUnitReferences",
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string",
                        "description": "Unique reference to the HandlingUnit, typically a packageId or SSCC code from a WMS",
                        "nullable": true
                    },
                    "temperatureLoggerReference": {
                        "type": "string",
                        "description": "Reference to a temperature logging device for temperature controlled goods",
                        "nullable": true
                    },
                    "rfidReference": {
                        "type": "string",
                        "description": "This is the RFID tag number",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Any references identifying this HandlingUnit"
            },
            "HandlingUnitServiceOptions": {
                "title": "HandlingUnitServiceOptions",
                "type": "object",
                "properties": {
                    "additionalHandling": {
                        "type": "boolean",
                        "description": "Indicates if the handling unit requires additional handling",
                        "nullable": true
                    },
                    "equipmentTemperature": {
                        "title": "EquipmentTemperatureTypeNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EquipmentTemperatureType"
                            }
                        ],
                        "nullable": true
                    },
                    "insuredValue": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency",
                        "nullable": true
                    },
                    "monitoringLevel": {
                        "title": "MonitoringLevelNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonitoringLevel"
                            }
                        ],
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "This indicates any additional service that should be applied for this handling unit"
            },
            "HandlingUnitStatus": {
                "title": "HandlingUnitStatus",
                "enum": [
                    "delivered"
                ],
                "type": "string",
                "description": "Status of a handling unit"
            },
            "HandlingUnitWithEvents": {
                "title": "HandlingUnitWithEvents",
                "required": [
                    "goodsItems",
                    "height",
                    "id",
                    "isDocument",
                    "length",
                    "packageType",
                    "reference",
                    "sequence",
                    "trackingEvents",
                    "weight",
                    "width"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "ID of handling unit in the system. Only used on GET",
                        "format": "uuid",
                        "readOnly": true
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference of handling unit"
                    },
                    "sequence": {
                        "type": "integer",
                        "description": "Unique sequence number per HandlingUnit, start with 1 and increment with 1 for each HandlingUnit",
                        "format": "int32"
                    },
                    "weight": {
                        "type": "number",
                        "description": "Weight of the HandlingUnit in unit of measure set in WeightUnit",
                        "format": "double"
                    },
                    "length": {
                        "type": "number",
                        "description": "Length of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "width": {
                        "type": "number",
                        "description": "Width of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "height": {
                        "type": "number",
                        "description": "Height of HandlingUnit in unit of measure set in DimensionUnit",
                        "format": "double"
                    },
                    "packageType": {
                        "title": "PackageTypeInfo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageTypeInfo"
                            }
                        ],
                        "description": "Package info identifying the packaging used. Viya.Shipping.Contracts.v3.Models.Shipments.HandlingUnits.PackageTypeInfo"
                    },
                    "status": {
                        "title": "HandlingUnitStatusNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitStatus"
                            }
                        ],
                        "nullable": true
                    },
                    "isDocument": {
                        "type": "boolean",
                        "description": "Indicates if the HandlingUnit is a document"
                    },
                    "description": {
                        "type": "string",
                        "description": "Free text that indicates what goods are packed in the HandlingUnit",
                        "nullable": true
                    },
                    "isStackable": {
                        "type": "boolean",
                        "description": "Indicates if the HandlingUnit can be stacked onto or on other stackable HandlingUnits",
                        "nullable": true
                    },
                    "references": {
                        "title": "HandlingUnitReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitReferences"
                            }
                        ],
                        "description": "Any references identifying this HandlingUnit",
                        "nullable": true
                    },
                    "serviceOptions": {
                        "title": "HandlingUnitServiceOptions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitServiceOptions"
                            }
                        ],
                        "description": "This indicates any additional service that should be applied for this handling unit",
                        "nullable": true
                    },
                    "goodsItems": {
                        "title": "GoodsItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GoodsItem"
                        },
                        "description": "Identifies goods inside a handlingUnit"
                    },
                    "requestedTrackingReference": {
                        "type": "string",
                        "description": "If the carrier supports using a customer provided tracking reference, this is the reference to use.",
                        "nullable": true
                    },
                    "labelReference": {
                        "title": "HandlingUnitLabelReference",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitLabelReference"
                            }
                        ],
                        "description": "Unique reference to the label of the HandlingUnit assigned by the system",
                        "nullable": true,
                        "readOnly": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique reference for the HandlingUnit assigned by the carrier",
                        "nullable": true
                    },
                    "children": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "IDs of handling units that are packed into this unit. Only used on GET",
                        "nullable": true,
                        "readOnly": true
                    },
                    "carrierShipmentReference": {
                        "type": "string",
                        "description": "Some carriers note the shipment reference on the handling unit level.",
                        "nullable": true
                    },
                    "trackingLink": {
                        "title": "HtmlForm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlForm"
                            }
                        ],
                        "description": "Details of an HTML form content",
                        "nullable": true
                    },
                    "trackingEvents": {
                        "title": "TrackingEventWithMappedCodesList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingEventWithMappedCodes"
                        },
                        "description": "List of tracking events associated with this handling unit"
                    }
                },
                "additionalProperties": false,
                "description": "Handling unit including its tracking events"
            },
            "HandlingUnitWithParents": {
                "title": "HandlingUnitWithParents",
                "required": [
                    "handlingUnit",
                    "parents"
                ],
                "type": "object",
                "properties": {
                    "handlingUnit": {
                        "title": "HandlingUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnit"
                            }
                        ],
                        "description": "The handling unit"
                    },
                    "parents": {
                        "title": "HandlingUnitParents",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HandlingUnitParents"
                            }
                        ],
                        "description": "The parents of the handling unit (consignments, shipments)"
                    }
                },
                "additionalProperties": false,
                "description": "Handling unit with parents (consignments, shipments)"
            },
            "HtmlForm": {
                "title": "HtmlForm",
                "required": [
                    "action"
                ],
                "type": "object",
                "properties": {
                    "action": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The form Action URL (must be a valid URL)",
                        "format": "uri"
                    },
                    "method": {
                        "title": "HtmlFormMethodNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlFormMethod"
                            }
                        ],
                        "description": "Form method (default: GET)",
                        "nullable": true
                    },
                    "inputs": {
                        "title": "HtmlFormInputList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HtmlFormInput"
                        },
                        "description": "List of form inputs",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details of an HTML form content"
            },
            "HtmlFormInput": {
                "title": "HtmlFormInput",
                "required": [
                    "name"
                ],
                "type": "object",
                "properties": {
                    "name": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Input name"
                    },
                    "value": {
                        "type": "string",
                        "description": "Input value",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Name-value pair representing an input field in an HTML form"
            },
            "HtmlFormMethod": {
                "title": "HtmlFormMethod",
                "enum": [
                    "get",
                    "post"
                ],
                "type": "string",
                "description": "The method of the form"
            },
            "Incoterm": {
                "title": "Incoterm",
                "enum": [
                    "exw",
                    "fca",
                    "cpt",
                    "cip",
                    "dat",
                    "dap",
                    "ddp",
                    "ddu",
                    "cif",
                    "fob",
                    "dpu",
                    "fas",
                    "cfr"
                ],
                "type": "string",
                "description": "The 3 digit Incoterm codes as per incoterms 2010 and 2020"
            },
            "IncotermScope": {
                "title": "IncotermScope",
                "enum": [
                    "doorToDoor",
                    "doorToPort",
                    "portToDoor",
                    "portToPort"
                ],
                "type": "string"
            },
            "Incoterms": {
                "title": "Incoterms",
                "required": [
                    "incoterm",
                    "scope",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "scope": {
                        "title": "IncotermScope",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IncotermScope"
                            }
                        ],
                        "description": "Describes the scope of the incoterm"
                    },
                    "incoterm": {
                        "title": "Incoterm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Incoterm"
                            }
                        ],
                        "description": "Any of the Incoterms as released in 2000,2010,2020"
                    },
                    "place": {
                        "type": "string",
                        "description": "The Named Place that applies to the incoterm",
                        "nullable": true
                    },
                    "version": {
                        "maxLength": 4,
                        "minLength": 0,
                        "pattern": "2000|2010|2020",
                        "type": "string",
                        "description": "The International Chamber of Commerce (ICC) releases updates periodically, indicate which version of the release is being applied"
                    }
                },
                "additionalProperties": false,
                "description": "Indicates the Responsibilities for Cost/Insurance/Risks for the shipment"
            },
            "IncotermsPreset": {
                "title": "IncotermsPreset",
                "required": [
                    "displayName",
                    "hidden",
                    "incoterm",
                    "reference",
                    "scope",
                    "systemDefault",
                    "version"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "displayName": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "systemDefault": {
                        "type": "boolean"
                    },
                    "hidden": {
                        "type": "boolean"
                    },
                    "scope": {
                        "title": "IncotermScope",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/IncotermScope"
                            }
                        ]
                    },
                    "incoterm": {
                        "title": "Incoterm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Incoterm"
                            }
                        ],
                        "description": "The 3 digit Incoterm codes as per incoterms 2010 and 2020"
                    },
                    "version": {
                        "maxLength": 4,
                        "minLength": 0,
                        "pattern": "2000|2010|2020",
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "IncotermsPresetListWrapper": {
                "title": "IncotermsPresetListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "IncotermsPresetList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/IncotermsPreset"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "InnerPackage": {
                "title": "InnerPackage",
                "type": "object",
                "properties": {
                    "description": {
                        "type": "string",
                        "description": "Inner package description",
                        "nullable": true
                    },
                    "quantity": {
                        "title": "Quantity",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Quantity"
                            }
                        ],
                        "description": "A quantity measured in the specified unit.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Inner package information."
            },
            "Label": {
                "title": "Label",
                "required": [
                    "base64Content",
                    "format",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "format": {
                        "title": "LabelFormat",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LabelFormat"
                            }
                        ],
                        "description": "Binary format of a label."
                    },
                    "base64Content": {
                        "type": "string",
                        "description": "Base64 encoded label content."
                    },
                    "type": {
                        "title": "LabelType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LabelType"
                            }
                        ],
                        "description": "The type of the label"
                    }
                },
                "additionalProperties": false,
                "description": "The label model"
            },
            "LabelFormat": {
                "title": "LabelFormat",
                "enum": [
                    "pdf",
                    "zpl"
                ],
                "type": "string",
                "description": "Binary format of a label."
            },
            "LabelResponse": {
                "title": "LabelResponse",
                "required": [
                    "handlingUnits"
                ],
                "type": "object",
                "properties": {
                    "handlingUnits": {
                        "title": "HandlingUnitLabelList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnitLabel"
                        },
                        "description": "The handling unit for the shipment"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for label of a shipment"
            },
            "LabelType": {
                "title": "LabelType",
                "enum": [
                    "carrierLabel"
                ],
                "type": "string",
                "description": "The type of the label"
            },
            "LiftGate": {
                "title": "LiftGate",
                "required": [
                    "collection",
                    "delivery"
                ],
                "type": "object",
                "properties": {
                    "collection": {
                        "type": "boolean",
                        "description": "Lift gate to be used upon collection"
                    },
                    "delivery": {
                        "type": "boolean",
                        "description": "Lift gate to be used upon delivery"
                    }
                },
                "additionalProperties": false,
                "description": "Definition of a lift gate, and under which circumstances it must be used"
            },
            "LoadAddressCollection": {
                "title": "LoadAddressCollection",
                "required": [
                    "receiver",
                    "sender"
                ],
                "type": "object",
                "properties": {
                    "sender": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "The party who initiates the shipment, responsible for the booking"
                    },
                    "collection": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Address where the goods should be collected",
                        "nullable": true
                    },
                    "receiver": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "The party that should receive the goods being shipped"
                    },
                    "carrier": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Address of the carrier",
                        "nullable": true
                    },
                    "transportSeller": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Address of a party that provides logistics services to another party.",
                        "nullable": true
                    },
                    "transportBuyer": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Address of a party that purchases logistics services from another party",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Address collection for manifesting"
            },
            "LoadInstructions": {
                "title": "LoadInstructions",
                "type": "object",
                "properties": {
                    "carrierInstructions": {
                        "title": "CarrierInstructions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CarrierInstructions"
                            }
                        ],
                        "description": "Special instructions for the carrier,",
                        "nullable": true
                    },
                    "specialRemarks": {
                        "type": "string",
                        "description": "Any special remarks",
                        "nullable": true
                    },
                    "documentsProvided": {
                        "type": "string",
                        "description": "Details on the documents provided",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Instructions relevant for the manifest"
            },
            "LoadReferenceCollection": {
                "title": "LoadReferenceCollection",
                "type": "object",
                "properties": {
                    "licensePlate": {
                        "type": "string",
                        "description": "License plate of the vehicle",
                        "nullable": true
                    },
                    "seal": {
                        "type": "string",
                        "description": "Reference of the seal used to close the loading unit",
                        "nullable": true
                    },
                    "cmr": {
                        "type": "string",
                        "description": "CMR number",
                        "nullable": true
                    },
                    "container": {
                        "type": "string",
                        "description": "Container number in case of an FCL movement",
                        "nullable": true
                    },
                    "freightForwarderAssigned": {
                        "type": "string",
                        "description": "Reference assigned to the consignment by the freight forwarder.",
                        "nullable": true
                    },
                    "consignorAssigned": {
                        "type": "string",
                        "description": "Reference assigned to the consignment by the consignor.",
                        "nullable": true
                    },
                    "transportInstruction": {
                        "type": "string",
                        "description": "A reference number identifying a transport instruction.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Collection of References that can be included in the manifest"
            },
            "LocalDateRange": {
                "title": "LocalDateRange",
                "required": [
                    "start"
                ],
                "type": "object",
                "properties": {
                    "start": {
                        "title": "DateTime",
                        "type": "string",
                        "description": "The start of the date range. NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "end": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "The end of the date range. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "A date range given in local datetime (without timezone information)"
            },
            "LockerDelivery": {
                "title": "LockerDelivery",
                "required": [
                    "lockerReference"
                ],
                "type": "object",
                "properties": {
                    "locationCode": {
                        "type": "string",
                        "description": "Code that identifies the physical location of the locker",
                        "nullable": true
                    },
                    "lockerReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference that uniquely identifies a locker at a given location"
                    },
                    "entryCode": {
                        "type": "string",
                        "description": "Entry code to access the Locker",
                        "nullable": true
                    },
                    "providerName": {
                        "type": "string",
                        "description": "Name of the provider who services the Locker",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Delivery at storage boxes"
            },
            "LogisticEntities": {
                "title": "LogisticEntities",
                "type": "object",
                "properties": {
                    "consignments": {
                        "title": "GetConsignmentResponseList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetConsignmentResponse"
                        },
                        "description": "The consignment(s) the tracking event is associated with",
                        "nullable": true
                    },
                    "shipments": {
                        "title": "GetShipmentResponseList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/GetShipmentResponse"
                        },
                        "description": "The shipment(s) the tracking event is associated with",
                        "nullable": true
                    },
                    "handlingUnits": {
                        "title": "HandlingUnitWithParentsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnitWithParents"
                        },
                        "description": "The handling unit(s) the tracking event is associated with",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "The Logistic Entities the tracking event is associated with \n<b>Note:</b> Only in case of reuse of tracking references by a single carrier\nmay it occur that multiple entities are associated with a single tracking event."
            },
            "LogisticsUnitType": {
                "title": "LogisticsUnitType",
                "enum": [
                    "shipment",
                    "consignment",
                    "handlingUnit"
                ],
                "type": "string"
            },
            "ManifestingDocumentType": {
                "title": "ManifestingDocumentType",
                "enum": [
                    "cmr",
                    "op900",
                    "manifest",
                    "loadList",
                    "other"
                ],
                "type": "string",
                "description": "Type of manifest document"
            },
            "MappingCollection": {
                "title": "MappingCollection",
                "type": "object",
                "properties": {
                    "standardizedCode": {
                        "title": "TrackingEventStandardizedCodeMapping",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventStandardizedCodeMapping"
                            }
                        ],
                        "description": "Standardized code mapping",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Collection of mapping details for an event"
            },
            "MappingReferences": {
                "title": "MappingReferences",
                "type": "object",
                "properties": {
                    "standardizedCode": {
                        "type": "string",
                        "description": "The standardized code mapping document reference to use",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Any references to mappings that should be used for this tracking event"
            },
            "ModeOfTransport": {
                "title": "ModeOfTransport",
                "enum": [
                    "none",
                    "air",
                    "express",
                    "road",
                    "ocean"
                ],
                "type": "string"
            },
            "MonetaryAmount": {
                "title": "MonetaryAmount",
                "required": [
                    "currencyCode",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "The value of the monetary amount in the given currency",
                        "format": "double"
                    },
                    "currencyCode": {
                        "title": "CurrencyCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CurrencyCode"
                            }
                        ],
                        "description": "The currency code"
                    }
                },
                "additionalProperties": false,
                "description": "Defines a monetary amount in a given currency"
            },
            "MonitoringLevel": {
                "title": "MonitoringLevel",
                "enum": [
                    "completeJourney",
                    "air",
                    "road"
                ],
                "type": "string",
                "description": "Special service where the carrier applies additional monitoring to the handling unit"
            },
            "Mutation": {
                "title": "Mutation",
                "required": [
                    "timestamp"
                ],
                "type": "object",
                "properties": {
                    "timestamp": {
                        "title": "DateTime",
                        "type": "string",
                        "description": "The timestamp at which the mutation occured. NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "oldStatus": {
                        "title": "ShipmentStatusNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentStatus"
                            }
                        ],
                        "description": "The status of the shipment before the mutation",
                        "nullable": true
                    },
                    "newStatus": {
                        "title": "ShipmentStatusNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentStatus"
                            }
                        ],
                        "description": "The status of the shipment after the mutation",
                        "nullable": true
                    },
                    "message": {
                        "type": "string",
                        "description": "Any message accompanying the change",
                        "nullable": true
                    },
                    "author": {
                        "title": "AuthorDetails",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AuthorDetails"
                            }
                        ],
                        "description": "Details on the author of the mutation",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details a previous change in status of a shipment"
            },
            "NetworkHandlingUnitLocation": {
                "title": "NetworkHandlingUnitLocation",
                "required": [
                    "handlingUnits",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to the location"
                    },
                    "handlingUnits": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "The handling units present on this location"
                    }
                },
                "additionalProperties": false,
                "description": "Contains the current location of a set of handling units"
            },
            "NetworkHandlingUnitLocations": {
                "title": "NetworkHandlingUnitLocations",
                "required": [
                    "consignments",
                    "networkAddresses"
                ],
                "type": "object",
                "properties": {
                    "networkAddresses": {
                        "title": "NetworkHandlingUnitLocationList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkHandlingUnitLocation"
                        },
                        "description": "List of network addresses and handling units present at each address"
                    },
                    "consignments": {
                        "title": "NetworkHandlingUnitLocationList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkHandlingUnitLocation"
                        },
                        "description": "List of consignments and handling units present in each consignment"
                    }
                },
                "additionalProperties": false,
                "description": "Contains the current locations of a set of handling units"
            },
            "NetworkHandlingUnitRoutes": {
                "title": "NetworkHandlingUnitRoutes",
                "required": [
                    "executed",
                    "planned",
                    "total"
                ],
                "type": "object",
                "properties": {
                    "total": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of address references, constituting the common combined (executed and planned) route for all handling units in the group"
                    },
                    "executed": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of address references, constituting the longest executed route for any handling unit in the group"
                    },
                    "planned": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "List of address references, constituting the shortest remaining (planned) route for any handling unit in the group"
                    }
                },
                "additionalProperties": false,
                "description": "Total, executed and planned routes within a network"
            },
            "NetworkLane": {
                "title": "NetworkLane",
                "required": [
                    "finalAddressReferences",
                    "fromAddressReference",
                    "toAddressReference"
                ],
                "type": "object",
                "properties": {
                    "finalAddressReferences": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "References to `Final` addresses, for which the `To` address is the next destination when currently at the `From` address. \n<b> note: </b> Include `DEFAULT` to make this the default lane for any final address not specifically listed in another lane."
                    },
                    "fromAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to the `From` address"
                    },
                    "toAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to the `To` address"
                    }
                },
                "additionalProperties": false,
                "description": "Network lane definition"
            },
            "NetworkLaneWithReference": {
                "title": "NetworkLaneWithReference",
                "required": [
                    "finalAddressReferences",
                    "fromAddressReference",
                    "reference",
                    "toAddressReference"
                ],
                "type": "object",
                "properties": {
                    "finalAddressReferences": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "References to `Final` addresses, for which the `To` address is the next destination when currently at the `From` address. \n<b> note: </b> Include `DEFAULT` to make this the default lane for any final address not specifically listed in another lane."
                    },
                    "fromAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to the `From` address"
                    },
                    "toAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to the `To` address"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Lane unique identifier (generated)"
                    }
                },
                "additionalProperties": false,
                "description": "Network lane definition, including generated reference"
            },
            "NetworkTrackingExceptionCollection": {
                "title": "NetworkTrackingExceptionCollection",
                "required": [
                    "consignments",
                    "handlingUnits",
                    "shipment"
                ],
                "type": "object",
                "properties": {
                    "shipment": {
                        "title": "ShipmentConsignmentExceptions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentConsignmentExceptions"
                            }
                        ],
                        "description": "Exceptions associated with the shipment"
                    },
                    "consignments": {
                        "title": "ShipmentConsignmentExceptionsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentConsignmentExceptions"
                        },
                        "description": "Exceptions associated with consignments"
                    },
                    "handlingUnits": {
                        "title": "HandlingUnitExceptionsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnitExceptions"
                        },
                        "description": "Exceptions associated with handling units"
                    }
                },
                "additionalProperties": false,
                "description": "Collection of exception tracking events by logistics entity"
            },
            "NetworkTrackingHandlingUnitGroup": {
                "title": "NetworkTrackingHandlingUnitGroup",
                "required": [
                    "actuals",
                    "handlingUnitLocations",
                    "handlingUnits",
                    "routes"
                ],
                "type": "object",
                "properties": {
                    "handlingUnits": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "List of handling unit IDs"
                    },
                    "routes": {
                        "title": "NetworkHandlingUnitRoutes",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkHandlingUnitRoutes"
                            }
                        ],
                        "description": "Total, executed and planned routes of the handling units within the network"
                    },
                    "handlingUnitLocations": {
                        "title": "NetworkHandlingUnitLocations",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkHandlingUnitLocations"
                            }
                        ],
                        "description": "Current locations of all handling units in the group"
                    },
                    "actuals": {
                        "title": "NetworkTrackingHandlingUnitGroupActuals",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkTrackingHandlingUnitGroupActuals"
                            }
                        ],
                        "description": "Date-time Actuals for the handling unit group"
                    }
                },
                "additionalProperties": false,
                "description": "Group of handling units and their current locations \n\nAll handling units in a given group follow the same route so far"
            },
            "NetworkTrackingHandlingUnitGroupActuals": {
                "title": "NetworkTrackingHandlingUnitGroupActuals",
                "type": "object",
                "properties": {
                    "firstPickup": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "First pickup date-time \n\nIf set, at least one handling unit has been picked up. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    },
                    "lastDelivery": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "Last delivery date-time \n\nIf set, all handling units have been delivered. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Date-time actuals for a group of handling units"
            },
            "NetworkTrackingLane": {
                "title": "NetworkTrackingLane",
                "required": [
                    "consignments",
                    "fromAddressReference",
                    "toAddressReference"
                ],
                "type": "object",
                "properties": {
                    "fromAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to the From address"
                    },
                    "toAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to the To address"
                    },
                    "consignments": {
                        "title": "ConsignmentTrackingForShipmentList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentTrackingForShipment"
                        },
                        "description": "List of consignments and their tracking details"
                    }
                },
                "additionalProperties": false,
                "description": "Lane between two network addresses with its associated consignments and their tracking events"
            },
            "NetworkTrackingShipmentSummary": {
                "title": "NetworkTrackingShipmentSummary",
                "required": [
                    "handlingUnits",
                    "id",
                    "initialNetworkAddressReference",
                    "reference",
                    "timeWindows",
                    "trackingEvents"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "Unique internal identifier",
                        "format": "uuid"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Shipper-assigned unique Reference"
                    },
                    "initialNetworkAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to collection address"
                    },
                    "finalNetworkAddressReference": {
                        "type": "string",
                        "description": "(optional) Reference to receiver address",
                        "nullable": true
                    },
                    "timeWindows": {
                        "title": "NetworkTrackingTimeWindows",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkTrackingTimeWindows"
                            }
                        ],
                        "description": "Planned and actual pickup and delivery date-times of the shipment"
                    },
                    "handlingUnits": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Complete list of handling units in the shipment"
                    },
                    "trackingEvents": {
                        "title": "TrackingEventWithMappedCodesList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingEventWithMappedCodes"
                        },
                        "description": "List of all tracking events for the shipment"
                    }
                },
                "additionalProperties": false,
                "description": "Summary of the shipment when concerning tracking"
            },
            "NetworkTrackingTimeWindows": {
                "title": "NetworkTrackingTimeWindows",
                "required": [
                    "delivery",
                    "pickup"
                ],
                "type": "object",
                "properties": {
                    "pickup": {
                        "title": "PlannedActualPickup",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PlannedActualPickup"
                            }
                        ],
                        "description": "Pickup planned and actual date-times"
                    },
                    "delivery": {
                        "title": "PlannedActualDelivery",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PlannedActualDelivery"
                            }
                        ],
                        "description": "Delivery planned and actual date-times"
                    }
                },
                "additionalProperties": false,
                "description": "Time window for network tracking purposes"
            },
            "NoContentResult": {
                "title": "NoContentResult",
                "required": [
                    "statusCode"
                ],
                "type": "object",
                "properties": {
                    "statusCode": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false
            },
            "NumericalAggregationType": {
                "title": "NumericalAggregationType",
                "enum": [
                    "single",
                    "all",
                    "any",
                    "none",
                    "sum",
                    "min",
                    "max"
                ],
                "type": "string",
                "description": "(optional) Type of aggregation when the `FieldPath` yields multiple results. Default: `single`.\n\n- `single`: returns `true` if a single result is valid; will throw if no or multiple results are found\n- `all`: returns `true` if all results are valid, `true` if no results are found\n- `any`: returns `true` at least one result is valid, `false` if no results are found\n- `none`: returns `true` if none of the results are valid, `true` if no results are found\n- `sum`: returns `true` if the sum of all results is valid; will yield `0` if no results are found\n- `min`: returns `true` if the minimum of all results is valid; will throw if no results are found\n- `max`: returns `true` if the maximum of all results is valid; will throw if no results are found"
            },
            "OrCondition": {
                "title": "OrCondition",
                "required": [
                    "$type",
                    "or"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseCondition"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "or"
                        ],
                        "type": "string"
                    },
                    "or": {
                        "title": "BaseConditionList",
                        "type": "array",
                        "items": {
                            "title": "BaseCondition",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/AndCondition"
                                },
                                {
                                    "$ref": "#/components/schemas/CompareCondition"
                                },
                                {
                                    "$ref": "#/components/schemas/OrCondition"
                                },
                                {
                                    "$ref": "#/components/schemas/ReferenceCondition"
                                },
                                {
                                    "$ref": "#/components/schemas/TemplateCondition"
                                }
                            ],
                            "description": "A condition tree"
                        },
                        "description": "A list of conditions where at least one must be true"
                    }
                },
                "additionalProperties": false,
                "description": "A list of conditions where at least one must be true"
            },
            "OrderConsignmentResponse": {
                "title": "OrderConsignmentResponse",
                "required": [
                    "documents",
                    "id",
                    "reference",
                    "resultMessages"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "Id of the actual consignment.",
                        "format": "uuid"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference of the actual consignment."
                    },
                    "carrierAssignedReference": {
                        "type": "string",
                        "description": "Reference assigned by carrier",
                        "nullable": true
                    },
                    "documents": {
                        "title": "DespatchAdviceDocumentList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/DespatchAdviceDocument"
                        },
                        "description": "Any documents pertaining to the requested manifest are included here"
                    },
                    "resultMessages": {
                        "title": "StringHashSet",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Any result messages from the manifesting request"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for the consignment"
            },
            "OrderPaymentType": {
                "title": "OrderPaymentType",
                "enum": [
                    "creditCard",
                    "cashOnDelivery",
                    "accountsReceivable",
                    "accountsReceivableIntercompany"
                ],
                "type": "string",
                "description": "Type indicating how the order is paid by the Customer"
            },
            "OrderPickupRequestResponse": {
                "title": "OrderPickupRequestResponse",
                "required": [
                    "carrierAssignedPickupReference",
                    "resultMessages"
                ],
                "type": "object",
                "properties": {
                    "carrierAssignedPickupReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Carrier assigned pickup reference"
                    },
                    "carrierLocationReference": {
                        "type": "string",
                        "description": "optional string that Fedex needs when you want to cancel this request again..",
                        "nullable": true
                    },
                    "resultMessages": {
                        "title": "StringHashSet",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Any result messages from the pickup request"
                    }
                },
                "additionalProperties": false,
                "description": "Response for ordering a pickup request (i.e., actually requesting the pickup)"
            },
            "OrderRequestModel": {
                "title": "OrderRequestModel",
                "required": [
                    "status"
                ],
                "type": "object",
                "properties": {
                    "status": {
                        "title": "ShipmentStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentStatus"
                            }
                        ],
                        "description": "The new status of the shipment"
                    },
                    "message": {
                        "type": "string",
                        "description": "Any message accompanying the status change",
                        "nullable": true
                    },
                    "author": {
                        "title": "AuthorDetails",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AuthorDetails"
                            }
                        ],
                        "description": "The author that made the status change",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Response from the carrier"
            },
            "OrderShipmentResponse": {
                "title": "OrderShipmentResponse",
                "required": [
                    "carrierReference",
                    "handlingUnits",
                    "resultMessages",
                    "trackingReference"
                ],
                "type": "object",
                "properties": {
                    "carrierReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique reference to the carrier profile"
                    },
                    "partiallyLabelled": {
                        "type": "boolean",
                        "description": "Some carriers can partially label the shipment, allowing handling units to be added later. If this is the case, this flag will be set to true.",
                        "nullable": true
                    },
                    "serviceLevelReference": {
                        "type": "string",
                        "description": "Service level code, used for booking.",
                        "nullable": true
                    },
                    "trackingReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Tracking reference assigned by the carrier"
                    },
                    "trackingLink": {
                        "title": "HtmlForm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlForm"
                            }
                        ],
                        "description": "Details of an HTML form content",
                        "nullable": true
                    },
                    "handlingUnits": {
                        "title": "HandlingUnitOrderedList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnitOrdered"
                        },
                        "description": "List of Handling units that contain the goods"
                    },
                    "accounts": {
                        "title": "Accounts",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Accounts"
                            }
                        ],
                        "description": "Model to hold the account references used by the carriers to identify responsible parties",
                        "nullable": true
                    },
                    "resultMessages": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Descriptive messages about the result of the booking."
                    }
                },
                "additionalProperties": false,
                "description": "Response model for booking a shipment"
            },
            "OutOfNetworkConsignments": {
                "title": "OutOfNetworkConsignments",
                "required": [
                    "firstMile",
                    "lastMile",
                    "other"
                ],
                "type": "object",
                "properties": {
                    "firstMile": {
                        "title": "ConsignmentTrackingForShipmentList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentTrackingForShipment"
                        },
                        "description": "First mile consignments i.e.:\n- Do not have an `InitialNetworkAddressReference`\n- Do have a `FinalNetworkAddressReference`"
                    },
                    "lastMile": {
                        "title": "ConsignmentTrackingForShipmentList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentTrackingForShipment"
                        },
                        "description": "Last mile consignments, i.e.:\n- Do have an `InitialNetworkAddressReference`\n- Do not have a `FinalNetworkAddressReference`"
                    },
                    "other": {
                        "title": "ConsignmentTrackingForShipmentList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConsignmentTrackingForShipment"
                        },
                        "description": "Other consignments, i.e.:\n- Either `InitialNetworkAddressReference` or `FinalNetworkAddressReference` is missing\n- It is not a first mile or last mile consignment"
                    }
                },
                "additionalProperties": false,
                "description": "Consignments which are not fully inside a network (i.e., which have either a missing InitialNetworkAddressReference or a missing FinalNetworkAddressReference)"
            },
            "PackageType": {
                "title": "PackageType",
                "enum": [
                    "box",
                    "cage-roll",
                    "crate",
                    "envelope",
                    "pallet-100x120-euro",
                    "pallet-80x120-euro",
                    "pallet-80x60-euro",
                    "pallet-60x40-euro",
                    "pallet-40x30-euro",
                    "pallet-100x120-oneway",
                    "pallet-80x120-oneway",
                    "pallet-80x60-oneway",
                    "pallet-box",
                    "unpacked",
                    "carrier-envelope",
                    "carrier-10kg-box",
                    "carrier-25kg-box",
                    "carrier-large-box",
                    "carrier-medium-box",
                    "carrier-pak",
                    "carrier-small-box",
                    "carrier-tube",
                    "bag",
                    "bag-flexi",
                    "bag-gunny",
                    "bag-jute",
                    "bag-large",
                    "bag-multi-wall",
                    "bag-paper",
                    "bag-paper-multi-wall",
                    "bag-paper-multi-wall-water-resistant",
                    "bag-plastic",
                    "bag-plastics-film",
                    "bag-poly",
                    "bag-textile",
                    "bag-textile-sift-proof",
                    "bag-textile-water-resistant",
                    "bag-textile-without-coat-liner",
                    "bag-woven-plastic",
                    "bag-woven-plastic-sift-proof",
                    "bag-woven-plastic-water-resistant",
                    "bag-woven-plastic-without-coat-liner",
                    "bale-compressed",
                    "bale-non-compressed",
                    "barrel",
                    "barrel-wooden",
                    "barrel-wooden-bung-type",
                    "barrel-wooden-removable-head",
                    "basket",
                    "basket-cardboard",
                    "basket-plastic",
                    "basket-wooden",
                    "bin",
                    "bottle-gas",
                    "box-aluminium",
                    "box-chep",
                    "box-fibreboard",
                    "box-for-liquids",
                    "box-natural-wood",
                    "box-natural-wood-ordinary",
                    "box-natural-wood-sift-proof",
                    "box-plastic",
                    "box-plastic-expanded",
                    "box-plastic-solid",
                    "box-plywood",
                    "box-reconstructed-wood",
                    "box-steel",
                    "box-wooden",
                    "bucket",
                    "bulk-gas",
                    "bulk-liquefied-gas",
                    "bulk-liquid",
                    "bulk-scrap-metal",
                    "bulk-solid",
                    "bulk-solid-grains",
                    "bulk-solid-powders",
                    "bundle",
                    "cage",
                    "cage-chep",
                    "cage-wheels-900x770x1513",
                    "can",
                    "can-rectangular",
                    "carboy-non-protected",
                    "carboy-protected",
                    "case",
                    "case-isothermic",
                    "case-skeleton",
                    "case-steel",
                    "case-wooden",
                    "chest",
                    "chest-sea",
                    "churn",
                    "coffin",
                    "coil",
                    "container-metal",
                    "crate-beer",
                    "crate-bottlerack",
                    "crate-bulk-cardboard",
                    "crate-bulk-plastic",
                    "crate-bulk-wooden",
                    "crate-framed",
                    "crate-fruit",
                    "crate-metal",
                    "crate-milk",
                    "crate-multi-layer-cardboard",
                    "crate-multi-layer-plastic",
                    "crate-multi-layer-wooden",
                    "crate-shallow",
                    "crate-wooden",
                    "cylinder",
                    "drum",
                    "drum-aluminium",
                    "drum-aluminium-non-removable-head",
                    "drum-aluminium-removable-head",
                    "drum-fibreboard",
                    "drum-iron",
                    "drum-plastic",
                    "drum-plastic-non-removable-head",
                    "drum-plastic-removable-head",
                    "drum-plywood",
                    "drum-steel",
                    "drum-steel-removable-head",
                    "drum-wooden",
                    "drum-steel-non-removable-head",
                    "envelope-steel",
                    "firkin",
                    "foodtainer",
                    "frame",
                    "hamper-wickerwork",
                    "hanger",
                    "hogshead",
                    "ibc-aluminium",
                    "ibc-aluminium-liquid",
                    "ibc-aluminium-pressurized-above-10kpa",
                    "ibc-bag-flexible",
                    "ibc-bag-jumbo",
                    "ibc-bag-pallet-sized",
                    "ibc-composite",
                    "ibc-composite-flexible-plastic-liquids",
                    "ibc-composite-flexible-plastic-pressurised",
                    "ibc-composite-flexible-plastic-solids",
                    "ibc-composite-rigid-plastic-liquids",
                    "ibc-composite-rigid-plastic-pressurised",
                    "ibc-composite-rigid-plastic-solids",
                    "ibc-fibreboard",
                    "ibc-flexible",
                    "ibc-metal",
                    "ibc-metal-no-steal",
                    "ibc-metal-liquid",
                    "ibc-metal-pressurized-10kpa",
                    "ibc-natural-wood",
                    "ibc-natural-wood-inner-liner",
                    "ibc-paper-multi-wall",
                    "ibc-paper-multi-wall-water-resistant",
                    "ibc-plastic-film",
                    "ibc-plywood",
                    "ibc-plywood-inner-liner",
                    "ibc-reconstituted-wood",
                    "ibc-reconstituted-wood-inner-liner",
                    "ibc-rigid-plastic",
                    "ibc-rigid-plastic-freestanding-liquids",
                    "ibc-rigid-plastic-freestanding-pressurised",
                    "ibc-rigid-plastic-freestanding-solids",
                    "ibc-rigid-plastic-structural-equipment-liquids",
                    "ibc-rigid-plastic-structural-equipment-pressurised",
                    "ibc-rigid-plastic-structural-equipment-solids",
                    "ibc-steel",
                    "ibc-steel-liquid",
                    "ibc-steel-pressurized-above-10kpa",
                    "ibc-textile-coated",
                    "ibc-textile-coated-and-liner",
                    "ibc-textile-liner",
                    "ibc-textile-out-coat-liner",
                    "ibc-woven-plastic-coated",
                    "ibc-woven-plastic-coated-and-liner",
                    "ibc-woven-plastic-with-liner",
                    "ibc-woven-plastic-without-coat-liner",
                    "jar",
                    "jerrycan-cylindrical",
                    "jerrycan-plastic",
                    "jerrycan-plastic-non-removable-head",
                    "jerrycan-plastic-removable-head",
                    "jerrycan-rectangular",
                    "jerrycan-steel",
                    "jerrycan-steel-non-removable-head",
                    "jerrycan-steel-removable-head",
                    "jug",
                    "keg",
                    "liftvan",
                    "net",
                    "net-red",
                    "net-tube-plastic",
                    "net-tube-textile",
                    "package-cardboard-bottle",
                    "pack-plastic-expandable",
                    "pack-plastic-solid",
                    "pail",
                    "pallet",
                    "pallet-oneway",
                    "pallet-100x120-chep",
                    "pallet-110x110-iso-t11",
                    "pallet-116.5x116.5-as",
                    "pallet-40x60-chep",
                    "pallet-60x100",
                    "pallet-60x80-chep",
                    "pallet-60x80-lpr",
                    "pallet-80x100",
                    "pallet-80x120-chep",
                    "pallet-80x120-lpr",
                    "pallet-80x60",
                    "pallet-case",
                    "pallet-case-cardboard",
                    "pallet-case-metal",
                    "pallet-case-plastic",
                    "pallet-case-wooden",
                    "pallet-exceptional",
                    "pallet-modular-80x100",
                    "pallet-modular-80x120",
                    "pallet-octabin",
                    "pallet-plastic-60x80-srs",
                    "pallet-plastic-80x120-srs",
                    "pallet-platform",
                    "pallet-returnable",
                    "pallet-synthentic-100x120",
                    "pallet-synthentic-80x120",
                    "pallet-triwall",
                    "pallet-wheeled-81x60x16",
                    "pallet-wheeled-81x67x135",
                    "pallet-wheeled-81x72x135",
                    "pallet-wholesaler",
                    "pallet-wooden",
                    "pallet-wooden-40x80",
                    "paper-wrapped",
                    "rack",
                    "rack-clothing-hanger",
                    "receptacle-fibre",
                    "receptacle-glass",
                    "receptacle-metal",
                    "receptacle-paper",
                    "receptacle-plastic-wrapped",
                    "receptacle-plastic",
                    "receptacle-wooden",
                    "reel",
                    "roll",
                    "sack",
                    "skid",
                    "spool",
                    "suitcase",
                    "tank",
                    "tank-cylindrical",
                    "tank-plastic-flexi",
                    "tank-rectangular",
                    "tierce",
                    "tray",
                    "trolly",
                    "trunk",
                    "tub",
                    "tube",
                    "tube-collapsible",
                    "tub-with-lid",
                    "vat"
                ],
                "type": "string",
                "description": "Package types; see https://viya.me/documentation/carrier-integration/package-types/ for more information"
            },
            "PackageTypeDetails": {
                "title": "PackageTypeDetails",
                "required": [
                    "code",
                    "displayName"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "title": "PackageType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageType"
                            }
                        ],
                        "description": "Package types; see https://viya.me/documentation/carrier-integration/package-types/ for more information"
                    },
                    "displayName": {
                        "type": "string"
                    }
                },
                "additionalProperties": false
            },
            "PackageTypeInfo": {
                "title": "PackageTypeInfo",
                "required": [
                    "code"
                ],
                "type": "object",
                "properties": {
                    "code": {
                        "title": "PackageType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageType"
                            }
                        ],
                        "description": "Package types; see https://viya.me/documentation/carrier-integration/package-types/ for more information"
                    },
                    "displayName": {
                        "type": "string",
                        "description": "Human readable name of the packaging",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details"
            },
            "PackageTypePreset": {
                "title": "PackageTypePreset",
                "required": [
                    "displayName",
                    "hidden",
                    "reference",
                    "systemDefault"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "displayName": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "systemDefault": {
                        "type": "boolean"
                    },
                    "hidden": {
                        "type": "boolean"
                    },
                    "iconSvg": {
                        "type": "string",
                        "nullable": true
                    },
                    "packageType": {
                        "title": "PackageTypeDetails",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageTypeDetails"
                            }
                        ],
                        "nullable": true
                    },
                    "weight": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "length": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "width": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "height": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "PackageTypePresetListWrapper": {
                "title": "PackageTypePresetListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "PackageTypePresetList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PackageTypePreset"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "PeriodLength": {
                "title": "PeriodLength",
                "enum": [
                    "day",
                    "month",
                    "year"
                ],
                "type": "string",
                "description": "Defines a period length"
            },
            "PickupAddressCollection": {
                "title": "PickupAddressCollection",
                "required": [
                    "collection",
                    "sender"
                ],
                "type": "object",
                "properties": {
                    "sender": {
                        "title": "AddressWithAccount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressWithAccount"
                            }
                        ],
                        "description": "The party who initiates the shipment, responsible for the booking"
                    },
                    "collection": {
                        "title": "Address",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Address"
                            }
                        ],
                        "description": "Address where the goods should be collected"
                    }
                },
                "additionalProperties": false,
                "description": "Represents the addresses for the pickup request"
            },
            "PickupPolicy": {
                "title": "PickupPolicy",
                "enum": [
                    "prl",
                    "fixed",
                    "one",
                    "paC1",
                    "paC3",
                    "exchange",
                    "servicepoint",
                    "erl"
                ],
                "type": "string",
                "description": "Code that indicates how the collection/pickup of the return at the customer should be handled"
            },
            "PickupRequest": {
                "title": "PickupRequest",
                "required": [
                    "addresses",
                    "carrier",
                    "locationReference",
                    "pickup",
                    "reference",
                    "shipments"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the pickup assigned by the Shipper"
                    },
                    "locationReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Location reference for the carrier"
                    },
                    "carrier": {
                        "title": "Carrier",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Carrier"
                            }
                        ],
                        "description": "Carrier to be used for the pickup"
                    },
                    "pickup": {
                        "title": "AbsoluteDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AbsoluteDateRange"
                            }
                        ],
                        "description": "A date range given in absolute datetime (including timezone information)"
                    },
                    "addresses": {
                        "title": "PickupAddressCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PickupAddressCollection"
                            }
                        ],
                        "description": "Sending and Collection address for pickup"
                    },
                    "collectionInstructions": {
                        "type": "string",
                        "description": "Any special instructions for the carrier",
                        "nullable": true
                    },
                    "shipments": {
                        "title": "GuidHashSet",
                        "uniqueItems": true,
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Optional list of shipments to be picked up"
                    }
                },
                "additionalProperties": false
            },
            "PickupRequestStatus": {
                "title": "PickupRequestStatus",
                "enum": [
                    "created",
                    "ordered",
                    "canceled"
                ],
                "type": "string",
                "description": "Status of a pickup request"
            },
            "PlannedActualDelivery": {
                "title": "PlannedActualDelivery",
                "type": "object",
                "properties": {
                    "actual": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "Actual realized date-time. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    },
                    "planned": {
                        "title": "LocalDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalDateRange"
                            }
                        ],
                        "description": "A date range given in local datetime (without timezone information)",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Planned and actual date-times for tracking purposes"
            },
            "PlannedActualPickup": {
                "title": "PlannedActualPickup",
                "type": "object",
                "properties": {
                    "actual": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "Actual realized date-time. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    },
                    "planned": {
                        "title": "AbsoluteDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AbsoluteDateRange"
                            }
                        ],
                        "description": "A date range given in absolute datetime (including timezone information)",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Planned and actual date-times for tracking purposes"
            },
            "PostCodeRange": {
                "title": "PostCodeRange",
                "required": [
                    "from",
                    "to"
                ],
                "type": "object",
                "properties": {
                    "from": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Post code from"
                    },
                    "to": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Post code to"
                    }
                },
                "additionalProperties": false,
                "description": "Post code range definition"
            },
            "PreAdviceDelivery": {
                "title": "PreAdviceDelivery",
                "type": "object",
                "properties": {
                    "useEmail": {
                        "type": "boolean",
                        "description": "An Email should be sent to the receiver",
                        "nullable": true
                    },
                    "useSms": {
                        "type": "boolean",
                        "description": "An SMS prior to delivery",
                        "nullable": true
                    },
                    "usePhone": {
                        "type": "boolean",
                        "description": "A call should be made prior to delivery, eg a call made by the planning department a (few) day(s) in advance",
                        "nullable": true
                    },
                    "useDriverPhone": {
                        "type": "boolean",
                        "description": "The driver should call short moments prior to delivery",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Communication options to pre-advice a receiver of a pending delivery"
            },
            "PreAdviceDetail": {
                "title": "PreAdviceDetail",
                "type": "object",
                "properties": {
                    "note": {
                        "type": "string",
                        "description": "Notes added by shipper",
                        "nullable": true
                    },
                    "hasSyncedChanges": {
                        "type": "boolean",
                        "description": "If consignment changes been synced with the carrier",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Consignment Pre advice details"
            },
            "Price": {
                "title": "Price",
                "required": [
                    "priceDetails",
                    "totalsOriginalCurrency"
                ],
                "type": "object",
                "properties": {
                    "totalsOriginalCurrency": {
                        "title": "MonetaryAmountList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/MonetaryAmount"
                        },
                        "description": "List of totals per original currency as provided by the carrier in PriceDetails"
                    },
                    "totalRequestedCurrency": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency",
                        "nullable": true
                    },
                    "priceDetails": {
                        "title": "PriceDetailsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PriceDetails"
                        },
                        "description": "Requested information about the price"
                    }
                },
                "additionalProperties": false,
                "description": "Price chosen for shipment"
            },
            "PriceDetails": {
                "title": "PriceDetails",
                "required": [
                    "amountOriginalCurrency",
                    "type"
                ],
                "type": "object",
                "properties": {
                    "type": {
                        "title": "PriceInformation",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriceInformation"
                            }
                        ],
                        "description": "Information about the price"
                    },
                    "amountOriginalCurrency": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency"
                    },
                    "amountRequestedCurrency": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details pertaining to the chosen price"
            },
            "PriceInformation": {
                "title": "PriceInformation",
                "required": [
                    "carrierCode"
                ],
                "type": "object",
                "properties": {
                    "carrierCode": {
                        "type": "string",
                        "description": "Carrier assigned price type identifying the meaning/reason for the amount to be charged"
                    },
                    "description": {
                        "type": "string",
                        "description": "Descriptive name belonging to the carrierCode",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Information about the price"
            },
            "PriceTimeWindow": {
                "title": "PriceTimeWindow",
                "type": "object",
                "properties": {
                    "planned": {
                        "title": "LocalDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalDateRange"
                            }
                        ],
                        "description": "A date range given in local datetime (without timezone information)",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Local date range for delivery"
            },
            "PriceTimeWindowCollection": {
                "title": "PriceTimeWindowCollection",
                "required": [
                    "pickup"
                ],
                "type": "object",
                "properties": {
                    "pickup": {
                        "title": "PriceTimeWindowRequired",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriceTimeWindowRequired"
                            }
                        ],
                        "description": "Carrier provided pickup window for the service"
                    },
                    "delivery": {
                        "title": "PriceTimeWindow",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriceTimeWindow"
                            }
                        ],
                        "description": "Carrier provided delivery window for the service",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Collection time window for price"
            },
            "PriceTimeWindowRequired": {
                "title": "PriceTimeWindowRequired",
                "required": [
                    "planned"
                ],
                "type": "object",
                "properties": {
                    "planned": {
                        "title": "AbsoluteDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AbsoluteDateRange"
                            }
                        ],
                        "description": "A date range given in absolute datetime (including timezone information)"
                    }
                },
                "additionalProperties": false,
                "description": "Absolute date range time window for pricing pickup"
            },
            "PricingWeight": {
                "title": "PricingWeight",
                "required": [
                    "unit",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "Value of the weight",
                        "format": "double"
                    },
                    "unit": {
                        "title": "WeightUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeightUnit"
                            }
                        ],
                        "description": "Unece.org list: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    }
                },
                "additionalProperties": false,
                "description": "Details on a weight"
            },
            "PrintJob": {
                "title": "PrintJob",
                "required": [
                    "printerId",
                    "shipmentId"
                ],
                "type": "object",
                "properties": {
                    "printerId": {
                        "type": "string",
                        "description": "ID of printer to which to send the job"
                    },
                    "shipmentId": {
                        "title": "Guid",
                        "type": "string",
                        "description": "Shipment ID that the document or label belongs to",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Payload with the ID of document or label to print"
            },
            "PrintJobWithItem": {
                "title": "PrintJobWithItem",
                "required": [
                    "itemId",
                    "printerId",
                    "shipmentId"
                ],
                "type": "object",
                "properties": {
                    "printerId": {
                        "type": "string",
                        "description": "ID of printer to which to send the job"
                    },
                    "shipmentId": {
                        "title": "Guid",
                        "type": "string",
                        "description": "Shipment ID that the document or label belongs to",
                        "format": "uuid"
                    },
                    "itemId": {
                        "title": "Guid",
                        "type": "string",
                        "description": "ID of document or label to print",
                        "format": "uuid"
                    }
                },
                "additionalProperties": false,
                "description": "Payload with the ID of document or label to print"
            },
            "Process": {
                "title": "Process",
                "enum": [
                    "booking",
                    "bookingChange",
                    "pickup",
                    "pickupParcelShop",
                    "transit",
                    "customs",
                    "deliveryAppointment",
                    "delivery",
                    "deliveryParcelShop",
                    "deliveryLocker",
                    "return",
                    "returnParcelShop",
                    "cashOnDelivery",
                    "exception",
                    "claim",
                    "other"
                ],
                "type": "string",
                "description": "The process a Viya.Core.Enumerations.Tracking.v1.TrackingEventStandardizedCode belongs to."
            },
            "PuescSent": {
                "title": "PuescSent",
                "required": [
                    "number"
                ],
                "type": "object",
                "properties": {
                    "number": {
                        "minLength": 1,
                        "type": "string",
                        "description": "14 digits received from PUESC platform as SENT number"
                    },
                    "carrierUpdateKey": {
                        "type": "string",
                        "description": "The carrier update key",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Placeholder for the SENT transaction references from the PUESC platform for shipments into/out of Poland containing sensitive goods"
            },
            "Quantity": {
                "title": "Quantity",
                "required": [
                    "unitOfMeasure",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "type": "number",
                        "description": "The quantity",
                        "format": "double"
                    },
                    "unitOfMeasure": {
                        "title": "QuantityUnitOfMeasure",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/QuantityUnitOfMeasure"
                            }
                        ],
                        "description": "The unit of measure"
                    }
                },
                "additionalProperties": false,
                "description": "A quantity measured in the specified unit."
            },
            "QuantityUnitOfMeasure": {
                "title": "QuantityUnitOfMeasure",
                "enum": [
                    "ea",
                    "kgm",
                    "lbr",
                    "ltr",
                    "mtr",
                    "cmt",
                    "bx",
                    "_4G",
                    "c62",
                    "cmk",
                    "fot",
                    "ftk",
                    "grm",
                    "inh",
                    "mc",
                    "mgm",
                    "mmt",
                    "mtk",
                    "yrd",
                    "bo",
                    "dlt",
                    "gll",
                    "pk",
                    "cs",
                    "set"
                ],
                "type": "string",
                "description": "Unece.org list: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
            },
            "Rate": {
                "title": "Rate",
                "required": [
                    "carrier"
                ],
                "type": "object",
                "properties": {
                    "carrier": {
                        "title": "Carrier",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Carrier"
                            }
                        ],
                        "description": "Carrier information"
                    },
                    "serviceLevel": {
                        "title": "ServiceLevel",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceLevel"
                            }
                        ],
                        "description": "References indicating the service level of the pricing information",
                        "nullable": true
                    },
                    "messages": {
                        "title": "CarrierMessageList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CarrierMessage"
                        },
                        "description": "Optional collection of messages passed from the carrier related to the rate",
                        "nullable": true
                    },
                    "price": {
                        "title": "Price",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Price"
                            }
                        ],
                        "description": "Details of the price as requested from the carrier",
                        "nullable": true
                    },
                    "timeWindows": {
                        "title": "PriceTimeWindowCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PriceTimeWindowCollection"
                            }
                        ],
                        "description": "Time windows for the priced service level",
                        "nullable": true
                    },
                    "weights": {
                        "title": "WeightCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeightCollection"
                            }
                        ],
                        "description": "Information about weights applicable to this service level",
                        "nullable": true
                    },
                    "loadMeter": {
                        "type": "number",
                        "description": "The calculated loadmeters as per the carrier's calculation",
                        "format": "double",
                        "nullable": true
                    },
                    "modeOfTransport": {
                        "title": "ModeOfTransportNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeOfTransport"
                            }
                        ],
                        "description": "Indicates the primary mode of transport for the pricing option",
                        "nullable": true
                    },
                    "errors": {
                        "title": "ErrorList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Error"
                        },
                        "description": "List of errors, if any, that occurred while obtaining pricing information",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Selected rate for a shipment"
            },
            "RateListWrapper": {
                "title": "RateListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "RateList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Rate"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "ReferenceCondition": {
                "title": "ReferenceCondition",
                "required": [
                    "$type",
                    "conditionReference"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseCondition"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "reference"
                        ],
                        "type": "string"
                    },
                    "conditionReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "A reference to a pre-defined condition on the contract"
                    }
                },
                "additionalProperties": false,
                "description": "A reference to a pre-defined condition on the contract"
            },
            "ReferenceGenerator": {
                "title": "ReferenceGenerator",
                "required": [
                    "reference",
                    "threshold"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "pattern": "^[\\w\\-]{1,50}$",
                        "type": "string",
                        "description": "Reference"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label (compact description)",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description",
                        "nullable": true
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "Threshold amount when to trigger depletion alert",
                        "format": "int64"
                    },
                    "resetPeriodLength": {
                        "title": "PeriodLengthNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PeriodLength"
                            }
                        ],
                        "description": "Defines the length of the period after which all ranges are reset. \n\nIf not set, no reset will occur.",
                        "nullable": true
                    },
                    "timeZoneOffset": {
                        "pattern": "\\-?(0[0-9]|1[0-5]):[0-5][0-9]",
                        "type": "string",
                        "description": "Optional Timezone Offset in format '(-)hh:mm' \n\nIf given, [DATE] indicators in the references will give the formatted date in this timezone. \n\nIf not set, the date will be in UTC. \n\nValue must be between -15:59 and 15:59.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Update reference generator definition"
            },
            "ReferenceGeneratorRange": {
                "title": "ReferenceGeneratorRange",
                "required": [
                    "end",
                    "start"
                ],
                "type": "object",
                "properties": {
                    "start": {
                        "type": "integer",
                        "description": "First value of the range.",
                        "format": "int64"
                    },
                    "end": {
                        "type": "integer",
                        "description": "Last value of the range",
                        "format": "int64"
                    },
                    "format": {
                        "type": "string",
                        "description": "Optional format of the range. \n\nAdd '{0}' as a placeholder for the number. \n\nAdd '[DATE]' as a placeholder for the date. The date will retrieve Current UTC datetime and format it using the DateFormat. \n\nIf custom offset from UTC is desired, set `TimeZoneOffset` in the parent `ReferenceGenerator` object. \n\nExample values: \n\n  - {0} = without any prefix, suffix or padding: 1, 2, 3 \n\n  - {0:D5} = padded with zeroes up to five digits: 000001, 000002, 000003 \n\n  - AB{0} = Prefixed with custom text AB: AB1, AB2, AB3 \n\n  - {0}XY = Suffixed with custom text XY: 1XY, 2XY, 3XY, \n\n  - GE{0:D3}VY = Prefixed and suffixed with custom text and padded the number with 3 digits: GE001VY, GE002VY, GE003VY",
                        "nullable": true
                    },
                    "dateFormat": {
                        "type": "string",
                        "description": "Optional format for the date part of the range. \n\nIf `Format` contains '[DATE]', this field must be set.\n\nExample values: \n\n  - yyyy-MM-ddTHH:mm:ss => 2022-01-13T18:55:32 \n\n  - dd/MM/yyyy => 13/01/2022 \n\n  - HH:mm:ss => 18:55:32",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Reference generator range definition"
            },
            "ReferenceGeneratorRangeResponse": {
                "title": "ReferenceGeneratorRangeResponse",
                "required": [
                    "end",
                    "next",
                    "rangeId",
                    "remaining",
                    "start",
                    "status"
                ],
                "type": "object",
                "properties": {
                    "start": {
                        "type": "integer",
                        "description": "First value of the range.",
                        "format": "int64"
                    },
                    "end": {
                        "type": "integer",
                        "description": "Last value of the range",
                        "format": "int64"
                    },
                    "format": {
                        "type": "string",
                        "description": "Optional format of the range. \n\nAdd '{0}' as a placeholder for the number. \n\nAdd '[DATE]' as a placeholder for the date. The date will retrieve Current UTC datetime and format it using the DateFormat. \n\nIf custom offset from UTC is desired, set `TimeZoneOffset` in the parent `ReferenceGenerator` object. \n\nExample values: \n\n  - {0} = without any prefix, suffix or padding: 1, 2, 3 \n\n  - {0:D5} = padded with zeroes up to five digits: 000001, 000002, 000003 \n\n  - AB{0} = Prefixed with custom text AB: AB1, AB2, AB3 \n\n  - {0}XY = Suffixed with custom text XY: 1XY, 2XY, 3XY, \n\n  - GE{0:D3}VY = Prefixed and suffixed with custom text and padded the number with 3 digits: GE001VY, GE002VY, GE003VY",
                        "nullable": true
                    },
                    "dateFormat": {
                        "type": "string",
                        "description": "Optional format for the date part of the range. \n\nIf `Format` contains '[DATE]', this field must be set.\n\nExample values: \n\n  - yyyy-MM-ddTHH:mm:ss => 2022-01-13T18:55:32 \n\n  - dd/MM/yyyy => 13/01/2022 \n\n  - HH:mm:ss => 18:55:32",
                        "nullable": true
                    },
                    "rangeId": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Id"
                    },
                    "next": {
                        "type": "integer",
                        "description": "Next element of the range",
                        "format": "int64"
                    },
                    "status": {
                        "title": "ReferenceGeneratorRangeStatus",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ReferenceGeneratorRangeStatus"
                            }
                        ],
                        "description": "Status of the range"
                    },
                    "remaining": {
                        "type": "integer",
                        "description": "Calculated field indicating how many items are remaining in the range",
                        "format": "int64"
                    },
                    "nextInFormat": {
                        "type": "string",
                        "description": "Calculated field indicating for an active of future range, what the next value will be in the given format",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Reference generator range definition"
            },
            "ReferenceGeneratorRangeStatus": {
                "title": "ReferenceGeneratorRangeStatus",
                "enum": [
                    "future",
                    "active",
                    "depleted"
                ],
                "type": "string",
                "description": "Status for the reference generator ranges"
            },
            "ReferenceGeneratorSummary": {
                "title": "ReferenceGeneratorSummary",
                "required": [
                    "activeRanges",
                    "depletedRanges",
                    "futureRanges",
                    "reference",
                    "remaining",
                    "threshold"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "pattern": "^[\\w\\-]{1,50}$",
                        "type": "string",
                        "description": "Reference"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label (compact description)",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description",
                        "nullable": true
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "Threshold amount when to trigger depletion alert",
                        "format": "int64"
                    },
                    "resetPeriodLength": {
                        "title": "PeriodLengthNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PeriodLength"
                            }
                        ],
                        "description": "Defines the length of the period after which all ranges are reset. \n\nIf not set, no reset will occur.",
                        "nullable": true
                    },
                    "timeZoneOffset": {
                        "pattern": "\\-?(0[0-9]|1[0-5]):[0-5][0-9]",
                        "type": "string",
                        "description": "Optional Timezone Offset in format '(-)hh:mm' \n\nIf given, [DATE] indicators in the references will give the formatted date in this timezone. \n\nIf not set, the date will be in UTC. \n\nValue must be between -15:59 and 15:59.",
                        "nullable": true
                    },
                    "remaining": {
                        "type": "integer",
                        "description": "Calculated field indicating how many items are remaining in the reference generator, across all ranges",
                        "format": "int64"
                    },
                    "nextInFormat": {
                        "type": "string",
                        "description": "Calculated field indicating what the next value will be in the given format in the active range, if any active range exists",
                        "nullable": true
                    },
                    "activeRanges": {
                        "type": "integer",
                        "description": "Calculated field indicating how many ranges are active",
                        "format": "int64"
                    },
                    "depletedRanges": {
                        "type": "integer",
                        "description": "Calculated field indicating how many ranges are depleted",
                        "format": "int64"
                    },
                    "futureRanges": {
                        "type": "integer",
                        "description": "Calculated field indicating how many ranges are future",
                        "format": "int64"
                    }
                },
                "additionalProperties": false,
                "description": "Reference generator definition with additional summarized information"
            },
            "ReferenceGeneratorSummaryListWrapper": {
                "title": "ReferenceGeneratorSummaryListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "ReferenceGeneratorSummaryList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReferenceGeneratorSummary"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "ReferenceGeneratorWithRanges": {
                "title": "ReferenceGeneratorWithRanges",
                "required": [
                    "ranges",
                    "reference",
                    "threshold"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "pattern": "^[\\w\\-]{1,50}$",
                        "type": "string",
                        "description": "Reference"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label (compact description)",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description",
                        "nullable": true
                    },
                    "threshold": {
                        "type": "integer",
                        "description": "Threshold amount when to trigger depletion alert",
                        "format": "int64"
                    },
                    "resetPeriodLength": {
                        "title": "PeriodLengthNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PeriodLength"
                            }
                        ],
                        "description": "Defines the length of the period after which all ranges are reset. \n\nIf not set, no reset will occur.",
                        "nullable": true
                    },
                    "timeZoneOffset": {
                        "pattern": "\\-?(0[0-9]|1[0-5]):[0-5][0-9]",
                        "type": "string",
                        "description": "Optional Timezone Offset in format '(-)hh:mm' \n\nIf given, [DATE] indicators in the references will give the formatted date in this timezone. \n\nIf not set, the date will be in UTC. \n\nValue must be between -15:59 and 15:59.",
                        "nullable": true
                    },
                    "ranges": {
                        "title": "ReferenceGeneratorRangeList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReferenceGeneratorRange"
                        },
                        "description": "Ranges for this reference generator"
                    }
                },
                "additionalProperties": false,
                "description": "Input reference generator definition"
            },
            "Regulation": {
                "title": "Regulation",
                "enum": [
                    "adr",
                    "imo",
                    "iata",
                    "_49CFR"
                ],
                "type": "string",
                "description": "Compliance for transportation of dangerous goods for a specific transport mode"
            },
            "RetrieveShipmentTrackingLinksResponse": {
                "title": "RetrieveShipmentTrackingLinksResponse",
                "required": [
                    "carrierReference",
                    "handlingUnits",
                    "trackingReference"
                ],
                "type": "object",
                "properties": {
                    "carrierReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique reference to the carrier profile"
                    },
                    "trackingReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Tracking reference assigned by the carrier"
                    },
                    "trackingLink": {
                        "title": "HtmlForm",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/HtmlForm"
                            }
                        ],
                        "description": "Details of an HTML form content",
                        "nullable": true
                    },
                    "handlingUnits": {
                        "title": "HandlingUnitOrderedList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnitOrdered"
                        },
                        "description": "List of Handling units that contain the goods"
                    }
                },
                "additionalProperties": false,
                "description": "Response model for retrieving tracking links for a shipment and associated handling units"
            },
            "RetriggerTrackingEventUpdatedResponseItem": {
                "title": "RetriggerTrackingEventUpdatedResponseItem",
                "required": [
                    "success",
                    "trackingEventId"
                ],
                "type": "object",
                "properties": {
                    "trackingEventId": {
                        "title": "Guid",
                        "type": "string",
                        "description": "",
                        "format": "uuid"
                    },
                    "success": {
                        "type": "boolean",
                        "description": ""
                    },
                    "message": {
                        "type": "string",
                        "description": "",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Result of retriggering TrackingEventCreated"
            },
            "ReturnablePackageItem": {
                "title": "ReturnablePackageItem",
                "required": [
                    "packageType",
                    "quantity"
                ],
                "type": "object",
                "properties": {
                    "quantity": {
                        "type": "integer",
                        "description": "Number of packages to be returned",
                        "format": "int32"
                    },
                    "packageType": {
                        "title": "PackageTypeInfo",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PackageTypeInfo"
                            }
                        ],
                        "description": "Type of packaging material to be returned. Viya.Shipping.Contracts.v3.Models.Shipments.HandlingUnits.PackageTypeInfo"
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the packaging material to be returned",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Container for listing packaging material that should be returned to the shipper"
            },
            "Returns": {
                "title": "Returns",
                "required": [
                    "isReturn",
                    "pickupPolicy"
                ],
                "type": "object",
                "properties": {
                    "isReturn": {
                        "type": "boolean",
                        "description": "Specifies if this is a return"
                    },
                    "pickupPolicy": {
                        "title": "PickupPolicy",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PickupPolicy"
                            }
                        ],
                        "description": "Code that indicates how the collection/pickup of the return at the customer should be handled"
                    },
                    "boxType": {
                        "pattern": "1|2|3|4|5",
                        "type": "string",
                        "description": "Specify the box type, must be between 1 and 5. UPS only for exchange service",
                        "nullable": true
                    },
                    "customsClearance": {
                        "type": "boolean",
                        "description": "Specifies whether the carrier should perform specific customs clearance for the return",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Container for Return shipment properties"
            },
            "SearchIdsByReferenceResponse": {
                "title": "SearchIdsByReferenceResponse",
                "required": [
                    "ids"
                ],
                "type": "object",
                "properties": {
                    "ids": {
                        "title": "GuidList",
                        "type": "array",
                        "items": {
                            "title": "Guid",
                            "type": "string",
                            "format": "uuid"
                        },
                        "description": "Actual List of shipment ids"
                    }
                },
                "additionalProperties": false,
                "description": "Serializable object containing List of shipment ids"
            },
            "ServiceLevel": {
                "title": "ServiceLevel",
                "required": [
                    "carrierCode",
                    "description",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The serviceLevelReference to use in the ordering endpoint"
                    },
                    "carrierCode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Carrier assigned price type identifying the meaning/reason for the amount to be charged"
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Descriptive name belonging to the carrierCode"
                    }
                },
                "additionalProperties": false,
                "description": "References indicating the service level of the pricing information"
            },
            "ServiceOptionsModel": {
                "title": "ServiceOptionsModel",
                "type": "object",
                "properties": {
                    "allowDeliveryToNeighbour": {
                        "type": "boolean",
                        "description": "Carrier is allowed to deliver the shipment to the neighbour",
                        "nullable": true
                    },
                    "appointmentForDelivery": {
                        "type": "boolean",
                        "description": "Carrier has to contact the Receiver to make an appointment for delivering the shipment",
                        "nullable": true
                    },
                    "cargoArrangement": {
                        "title": "CargoArrangementNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CargoArrangement"
                            }
                        ],
                        "description": "Used in Air booking form",
                        "nullable": true
                    },
                    "cargoClix": {
                        "type": "boolean",
                        "description": "Indicate if carriers should use the CargoClix platform to make an appointment",
                        "nullable": true
                    },
                    "cashOnDelivery": {
                        "title": "CashOnDelivery",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CashOnDelivery"
                            }
                        ],
                        "description": "Receiver to pay the transportation company for the goods upon delivery",
                        "nullable": true
                    },
                    "constructionSite": {
                        "type": "boolean",
                        "description": "Ship to address ia a construction site",
                        "nullable": true
                    },
                    "containsLithiumBatteries": {
                        "type": "boolean",
                        "description": "Set to true if the shipment contains Lithium Batteries",
                        "nullable": true
                    },
                    "customsClearance": {
                        "type": "boolean",
                        "description": "If shipments are shipped within the EU from a bonded warehouse, this field can be provided to indicate the shipment is dutiable. Note that not all carrier interfaces are able to handle this information.",
                        "nullable": true
                    },
                    "deliveryInside": {
                        "type": "boolean",
                        "description": "Shipment has to be delivered inside a building to a specific room",
                        "nullable": true
                    },
                    "documentService": {
                        "title": "DocumentService",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DocumentService"
                            }
                        ],
                        "description": "Used Ocean and Air booking form.",
                        "nullable": true
                    },
                    "dryIceAudit": {
                        "type": "boolean",
                        "description": "Carrier is expected to verify if Dry Ice is in correct shape during the transportation process",
                        "nullable": true
                    },
                    "equipmentTemperature": {
                        "title": "EquipmentTemperatureTypeNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/EquipmentTemperatureType"
                            }
                        ],
                        "description": "Describes the temperature under which the shipment should be transported in case of temperature sensitive goods.",
                        "nullable": true
                    },
                    "fragile": {
                        "type": "boolean",
                        "description": "Indicates if the shipment contains Fragile goods",
                        "nullable": true
                    },
                    "holdForPickup": {
                        "type": "boolean",
                        "description": "Set to True in combination with Drop off Address, this is used for carrier services like \"hold at depot\"",
                        "nullable": true
                    },
                    "liftGate": {
                        "title": "LiftGate",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LiftGate"
                            }
                        ],
                        "description": "Indicator if a liftGate is required for pickup or delivery",
                        "nullable": true
                    },
                    "lockerDelivery": {
                        "title": "LockerDelivery",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LockerDelivery"
                            }
                        ],
                        "description": "Container to indicate details in case delivery should be made into locker",
                        "nullable": true
                    },
                    "neutralDelivery": {
                        "type": "boolean",
                        "description": "true = neutral delivery, carrier to remove invoice from package before delivery to customer\n false = different company may pays duties and taxes but no need for the carrier to remove the inter-company invoice",
                        "nullable": true
                    },
                    "photoAtDelivery": {
                        "type": "boolean",
                        "description": "Carrier is requested to make a photo of the package upon delivery",
                        "nullable": true
                    },
                    "preAdviceDelivery": {
                        "title": "PreAdviceDelivery",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PreAdviceDelivery"
                            }
                        ],
                        "description": "Communication properties that can be used to pre-advice a receiver of a pending delivery",
                        "nullable": true
                    },
                    "residentialDelivery": {
                        "type": "boolean",
                        "description": "Indicator that flags the shipment is shipped to a residential address",
                        "nullable": true
                    },
                    "returns": {
                        "title": "Returns",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Returns"
                            }
                        ],
                        "description": "Container for return shipment properties",
                        "nullable": true
                    },
                    "scannedPodRequested": {
                        "type": "boolean",
                        "description": "Carrier is requested to provide a scanned image of a signed POD",
                        "nullable": true
                    },
                    "signatureForDelivery": {
                        "title": "SignatureForDeliveryNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/SignatureForDelivery"
                            }
                        ],
                        "description": "Signature delivery options",
                        "nullable": true
                    },
                    "smallVehicle": {
                        "type": "boolean",
                        "description": "Carrier should use a small vehicle for delivery",
                        "nullable": true
                    },
                    "splitDutiesFromVat": {
                        "type": "boolean",
                        "description": "Carrier to split the Duties and the VAT across different accounts (UPS/DPD)",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Information about the service options for a shipment"
            },
            "ShareableLinkType": {
                "title": "ShareableLinkType",
                "enum": [
                    "orderRequest",
                    "tracking"
                ],
                "type": "string",
                "description": "Type of shareable link to generate"
            },
            "Shipment": {
                "title": "Shipment",
                "required": [
                    "addresses",
                    "containsDangerousGoods",
                    "dimensionUnit",
                    "handlingUnits",
                    "inbound",
                    "locationReference",
                    "reference",
                    "timeWindows",
                    "weightUnit"
                ],
                "type": "object",
                "properties": {
                    "accounts": {
                        "title": "Accounts",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Accounts"
                            }
                        ],
                        "description": "Accounts for the order",
                        "nullable": true
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Shipper"
                    },
                    "locationReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Unique identifier of the Location the shipment is sent by"
                    },
                    "addresses": {
                        "title": "AddressCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AddressCollection"
                            }
                        ],
                        "description": "All addresses related to this shipment"
                    },
                    "dimensionUnit": {
                        "title": "DimensionUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DimensionUnit"
                            }
                        ],
                        "description": "Unit for length as per Unece organization: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "weightUnit": {
                        "title": "WeightUnit",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/WeightUnit"
                            }
                        ],
                        "description": "Unece.org list: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
                    },
                    "description": {
                        "type": "string",
                        "description": "General description of goods",
                        "nullable": true
                    },
                    "declaredValue": {
                        "title": "MonetaryAmount",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MonetaryAmount"
                            }
                        ],
                        "description": "Defines a monetary amount in a given currency",
                        "nullable": true
                    },
                    "timeWindows": {
                        "title": "TimeWindows",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeWindows"
                            }
                        ],
                        "description": "Date/Time windows for pickup and delivery of the shipment"
                    },
                    "incoterms": {
                        "title": "Incoterms",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Incoterms"
                            }
                        ],
                        "description": "Indicates the Responsibilities for Cost/Insurance/Risks for the shipment",
                        "nullable": true
                    },
                    "carrierReference": {
                        "type": "string",
                        "description": "Reference of the carrier executing the movement of the shipment",
                        "nullable": true
                    },
                    "carrierLabel": {
                        "type": "string",
                        "description": "Label of the carrier executing the movement of the shipment",
                        "nullable": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Unique identifier of the shipment assigned by the Carrier",
                        "nullable": true
                    },
                    "requestedTrackingReference": {
                        "type": "string",
                        "description": "If the carrier supports using a customer provided tracking reference, this is the reference to use.",
                        "nullable": true
                    },
                    "inbound": {
                        "type": "boolean",
                        "description": "Indicator if shipment is an inbound shipment, where Inbound is defined as:\nA shipment being shipped into a facility belonging to the shipping platform customer, where the shipment is not a return\nWhere a return is defined as: a shipment that is returned to the shipping platform customer from an end-customer which can be directly related to an outbound shipment to that end-customer."
                    },
                    "serviceLevelReference": {
                        "type": "string",
                        "description": "Reference to service level of shipment",
                        "nullable": true
                    },
                    "serviceOptions": {
                        "title": "ServiceOptionsModel",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ServiceOptionsModel"
                            }
                        ],
                        "description": "Any service option that additionally applies to the shipment",
                        "nullable": true
                    },
                    "references": {
                        "title": "ShipmentReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentReferenceCollection"
                            }
                        ],
                        "description": "Collection of References that can be included in the shipment",
                        "nullable": true
                    },
                    "instructions": {
                        "title": "ShipmentInstructions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentInstructions"
                            }
                        ],
                        "description": "Any instructions on shipment level with an escape to add key/values at the end",
                        "nullable": true
                    },
                    "commercialInvoice": {
                        "title": "CommercialInvoice",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CommercialInvoice"
                            }
                        ],
                        "description": "Invoice document used for Export Declaration",
                        "nullable": true
                    },
                    "returnablePackaging": {
                        "title": "ReturnablePackageItemList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ReturnablePackageItem"
                        },
                        "description": "List of returnable packaging materials that should be returned to the shipper",
                        "nullable": true
                    },
                    "handlingUnits": {
                        "title": "HandlingUnitList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnit"
                        },
                        "description": "List of Handling units that contain the goods"
                    },
                    "rate": {
                        "title": "Rate",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Rate"
                            }
                        ],
                        "description": "Information about the selected rate for this shipment",
                        "nullable": true
                    },
                    "containsDangerousGoods": {
                        "type": "boolean",
                        "description": "Calculated field indicating if the shipment contains any dangerous goods",
                        "readOnly": true
                    },
                    "originIdentifier": {
                        "type": "string",
                        "description": "URI or Reference indicating the host system from where the shipment request originated",
                        "nullable": true
                    },
                    "network": {
                        "title": "ShipmentNetworkProperties",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ShipmentNetworkProperties"
                            }
                        ],
                        "description": "Properties of the shipment regarding network planning. \n\nIf given, both `Initial` and `Final` must be present. Otherwise, it would not be possible to plan the shipment through the network.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "The model that defines the shipment to be created"
            },
            "ShipmentConsignmentExceptions": {
                "title": "ShipmentConsignmentExceptions",
                "required": [
                    "exceptionEvents",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The entity's reference"
                    },
                    "exceptionEvents": {
                        "title": "TrackingEventWithMappedCodesList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingEventWithMappedCodes"
                        },
                        "description": "The exception tracking events associated with the entity"
                    }
                },
                "additionalProperties": false,
                "description": "Contains the exception tracking events for a single shipment or consignment"
            },
            "ShipmentCreateSettings": {
                "title": "ShipmentCreateSettings",
                "required": [
                    "displayName",
                    "features",
                    "hidden",
                    "reference",
                    "systemDefault"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "displayName": {
                        "minLength": 1,
                        "type": "string"
                    },
                    "systemDefault": {
                        "type": "boolean"
                    },
                    "hidden": {
                        "type": "boolean"
                    },
                    "features": {
                        "title": "StringFeatureDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/Feature"
                        }
                    },
                    "incotermsPresetReference": {
                        "type": "string",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "ShipmentCreateSettingsListWrapper": {
                "title": "ShipmentCreateSettingsListWrapper",
                "required": [
                    "items",
                    "itemsCount",
                    "pageNumber",
                    "pageSize",
                    "totalCount",
                    "totalPages",
                    "url"
                ],
                "type": "object",
                "properties": {
                    "totalCount": {
                        "type": "integer",
                        "description": "Total count of items",
                        "format": "int64"
                    },
                    "itemsCount": {
                        "type": "integer",
                        "description": "Count of items in current response",
                        "format": "int32",
                        "readOnly": true
                    },
                    "totalPages": {
                        "type": "integer",
                        "description": "Total count of pages available",
                        "format": "int32",
                        "readOnly": true
                    },
                    "pageNumber": {
                        "type": "integer",
                        "description": "Current page number",
                        "format": "int32"
                    },
                    "pageSize": {
                        "type": "integer",
                        "description": "Requested number of items per page",
                        "format": "int32"
                    },
                    "nextUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to next page",
                        "format": "uri",
                        "nullable": true
                    },
                    "previousUrl": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to previous page",
                        "format": "uri",
                        "nullable": true
                    },
                    "url": {
                        "title": "Uri",
                        "type": "string",
                        "description": "Url to current page",
                        "format": "uri"
                    },
                    "items": {
                        "title": "ShipmentCreateSettingsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ShipmentCreateSettings"
                        },
                        "description": "List of items on current page"
                    }
                },
                "additionalProperties": false,
                "description": "Provides a wrapper for list responses"
            },
            "ShipmentInstructions": {
                "title": "ShipmentInstructions",
                "required": [
                    "notifyEmails"
                ],
                "type": "object",
                "properties": {
                    "airportFrom": {
                        "type": "string",
                        "description": "IATA Airport code for origin Airport",
                        "nullable": true
                    },
                    "airportTo": {
                        "type": "string",
                        "description": "IATA Airport code for destination Airport",
                        "nullable": true
                    },
                    "branch": {
                        "type": "string",
                        "description": "Branch/Plant ordering the PO.",
                        "nullable": true
                    },
                    "carrierInstructions": {
                        "title": "CarrierInstructions",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CarrierInstructions"
                            }
                        ],
                        "description": "Special instructions for the carrier,",
                        "nullable": true
                    },
                    "carrierOriginDepot": {
                        "type": "string",
                        "description": "Origin depot of the carrier when injecting shipments into the carrier's network",
                        "nullable": true
                    },
                    "carrierRouteCode": {
                        "type": "string",
                        "description": "A carrier defined identifier that indicates which route they will use to execute the transport of the shipment",
                        "nullable": true
                    },
                    "containsPackingList": {
                        "type": "boolean",
                        "description": "Indicates whether or not the Packing List is enclosed with the shipment",
                        "nullable": true
                    },
                    "dock": {
                        "title": "Dock",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Dock"
                            }
                        ],
                        "description": "Information about the dock used for a shipment",
                        "nullable": true
                    },
                    "justification": {
                        "type": "string",
                        "description": "Free Text justifying why the specific service was chosen. Typically used when more expensive service is chosen by the user.",
                        "nullable": true
                    },
                    "latestCancelDate": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "Latest Date the shipment can be canceled. This is for reference only, no system logic is used on this.. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    },
                    "licensePlate": {
                        "type": "string",
                        "description": "LicensePlate of the trailer collecting the shipment",
                        "nullable": true
                    },
                    "loadMeter": {
                        "type": "number",
                        "description": "If provided the load meter that overwrites any possible calculated load meter based on the handling units",
                        "format": "double",
                        "nullable": true
                    },
                    "modeOfTransport": {
                        "title": "ModeOfTransportNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ModeOfTransport"
                            }
                        ],
                        "description": "Indicates the primary mode of transport for the shipment",
                        "nullable": true
                    },
                    "multipleBol": {
                        "type": "boolean",
                        "description": "Indicates if multiple BillOfLading are included in the shipment",
                        "nullable": true
                    },
                    "notifyEmails": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "Extra email addresses that should be included in shipment notifications"
                    },
                    "orderingCompany": {
                        "type": "string",
                        "description": "Company ordering the PO",
                        "nullable": true
                    },
                    "orderType": {
                        "type": "string",
                        "description": "Order type of the order in the shipment",
                        "nullable": true
                    },
                    "paymentType": {
                        "title": "OrderPaymentTypeNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OrderPaymentType"
                            }
                        ],
                        "description": "Type indicating how the order is paid by the Customer",
                        "nullable": true
                    },
                    "piecesOnPallets": {
                        "type": "integer",
                        "description": "Total number of pieces in all pallets in the shipment",
                        "format": "int32",
                        "nullable": true
                    },
                    "placeDocumentCollection": {
                        "type": "string",
                        "description": "Used in air and ocean booking form",
                        "nullable": true
                    },
                    "portFrom": {
                        "type": "string",
                        "description": "Departure Sea port name",
                        "nullable": true
                    },
                    "portTo": {
                        "type": "string",
                        "description": "Destination Sea port name",
                        "nullable": true
                    },
                    "purchaseOrderCancelDate": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "Cancel date of the PO. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "purchaseOrderStartDate": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "Start date of the Purchase Order, this is the earliest date it can be delivered to the customer. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "reasonForReturn": {
                        "type": "string",
                        "description": "Free text  indicating why shipment was returned",
                        "nullable": true
                    },
                    "replenishment": {
                        "type": "boolean",
                        "description": "Indicates if shipment is a replenishment of stock for a Distribution Center",
                        "nullable": true
                    },
                    "rmaDate": {
                        "title": "DateTimeOffsetNullable",
                        "type": "string",
                        "description": "Date the Return Material Authorization was given. NOTE: Time zone specification is mandatory",
                        "format": "date-time",
                        "nullable": true
                    },
                    "vesselName": {
                        "type": "string",
                        "description": "Vessel name for sea transport",
                        "nullable": true
                    },
                    "woodDeclaration": {
                        "type": "boolean",
                        "description": "True if a wood declaration is provided/included in the shipment",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Any instructions related to the shipment"
            },
            "ShipmentNetworkProperties": {
                "title": "ShipmentNetworkProperties",
                "required": [
                    "initialNetworkAddressReference"
                ],
                "type": "object",
                "properties": {
                    "initialNetworkAddressReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to the initial network address"
                    },
                    "finalNetworkAddressReference": {
                        "type": "string",
                        "description": "(optional) Reference to the final network address",
                        "nullable": true
                    },
                    "firstMileRequired": {
                        "type": "boolean",
                        "description": "(optional) indicates that the shipment does not start at a network address (default: false)",
                        "nullable": true
                    },
                    "lastMileRequired": {
                        "type": "boolean",
                        "description": "(optional) indicates that the shipment does not end at a network address (default: false)",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Network properties of the shipment"
            },
            "ShipmentNetworkTracking": {
                "title": "ShipmentNetworkTracking",
                "required": [
                    "addresses",
                    "consignments",
                    "exceptions",
                    "handlingUnitGroups",
                    "handlingUnitLocations",
                    "handlingUnits",
                    "lanes",
                    "mainRoute",
                    "outOfNetworkConsignments",
                    "shipment"
                ],
                "type": "object",
                "properties": {
                    "shipment": {
                        "title": "NetworkTrackingShipmentSummary",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkTrackingShipmentSummary"
                            }
                        ],
                        "description": "Shipment information"
                    },
                    "mainRoute": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The main route of the shipment (i.e. the longest total route of all handling unit groups)"
                    },
                    "lanes": {
                        "title": "NetworkTrackingLaneList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkTrackingLane"
                        },
                        "description": "List consignments and their tracking details, grouped by lane. \n\nAll consignments in the system that contain HandlingUnits of this shipment will be present in this list"
                    },
                    "handlingUnitGroups": {
                        "title": "NetworkTrackingHandlingUnitGroupList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkTrackingHandlingUnitGroup"
                        },
                        "description": "Handling units and their current locations grouped by all handling units that have followed the same route so far"
                    },
                    "outOfNetworkConsignments": {
                        "title": "OutOfNetworkConsignments",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/OutOfNetworkConsignments"
                            }
                        ],
                        "description": "List of consignments that are not part of the network, but are still related to the shipment"
                    },
                    "handlingUnitLocations": {
                        "title": "NetworkHandlingUnitLocations",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkHandlingUnitLocations"
                            }
                        ],
                        "description": "Current locations of all handling units in the shipment"
                    },
                    "addresses": {
                        "title": "StringAddressBookItemResponseDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/AddressBookItemResponse"
                        },
                        "description": "List of addresses mentioned in the tracking information (by reference)"
                    },
                    "consignments": {
                        "title": "StringGetConsignmentListItemDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/GetConsignmentListItem"
                        },
                        "description": "List of consignments mentioned in the tracking information (by reference)"
                    },
                    "handlingUnits": {
                        "title": "HandlingUnitWithEventsList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/HandlingUnitWithEvents"
                        },
                        "description": "List of handling units in the shipment"
                    },
                    "exceptions": {
                        "title": "NetworkTrackingExceptionCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/NetworkTrackingExceptionCollection"
                            }
                        ],
                        "description": "Exception events grouped by logistics entity"
                    }
                },
                "additionalProperties": false,
                "description": "Network tracking information regarding a single shipment"
            },
            "ShipmentReferenceCollection": {
                "title": "ShipmentReferenceCollection",
                "type": "object",
                "properties": {
                    "billOfLadingNumber": {
                        "type": "string",
                        "description": "Can also be put in TrackingReference depends on mapping for your solution. Discuss with your implementation resource for use of this field",
                        "nullable": true
                    },
                    "bookingConfirmationNumber": {
                        "type": "string",
                        "description": "A confirmation number obtained from the carrier",
                        "nullable": true
                    },
                    "complaintNumber": {
                        "type": "string",
                        "description": "Reference number of a complaint that initiated this shipment",
                        "nullable": true
                    },
                    "containerNumber": {
                        "type": "string",
                        "description": "Container number in which this shipment is included",
                        "nullable": true
                    },
                    "costCenter": {
                        "type": "string",
                        "description": "Reference to where the costs of this shipment are expected to be charged to. This is a reference field only, no cost assignments are made based on this field by default.",
                        "nullable": true
                    },
                    "customsClearanceNumber": {
                        "type": "string",
                        "description": "The reference provided by from customs (eg MRN number)",
                        "nullable": true
                    },
                    "customerPurchaseOrder": {
                        "type": "string",
                        "description": "Purchase order number from the Receiving Party",
                        "nullable": true
                    },
                    "flightNumber": {
                        "type": "string",
                        "description": "Flight number for Airfreight shipment",
                        "nullable": true
                    },
                    "generalLedgerCode": {
                        "type": "string",
                        "description": "GL code to be visible in reporting",
                        "nullable": true
                    },
                    "loadNumber": {
                        "type": "string",
                        "description": "Shipments can be grouped into loads, this number identifies which group this shipment belongs to",
                        "nullable": true
                    },
                    "puescSent": {
                        "title": "PuescSent",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PuescSent"
                            }
                        ],
                        "description": "Placeholder for the SENT transaction references from the PUESC platform for shipments into/out of Poland containing sensitive goods",
                        "nullable": true
                    },
                    "purchaseOrder": {
                        "type": "string",
                        "description": "Purchase order number from the Sending Party",
                        "nullable": true
                    },
                    "rmaNumber": {
                        "type": "string",
                        "description": "Return Material Authorization reference",
                        "nullable": true
                    },
                    "sapDelivery": {
                        "type": "string",
                        "description": "Delivery number when using SAP",
                        "nullable": true
                    },
                    "sapSalesOrder": {
                        "type": "string",
                        "description": "SAP Sales order reference",
                        "nullable": true
                    },
                    "shipmentNumber": {
                        "type": "string",
                        "description": "Receiver Shipment number",
                        "nullable": true
                    },
                    "voyage": {
                        "type": "string",
                        "description": "Reference to the Voyage in Sea shipment",
                        "nullable": true
                    },
                    "logisticServiceProviderAssigned": {
                        "type": "string",
                        "description": "Reference assigned to the shipment by the logistic Service Provider.",
                        "nullable": true
                    },
                    "transportInstruction": {
                        "type": "string",
                        "description": "A reference number identifying a transport instruction.",
                        "nullable": true
                    },
                    "gsin": {
                        "type": "string",
                        "description": "Global Shipment Identification Number (GSIN), the GS1 key used for the identification of shipments.",
                        "nullable": true
                    },
                    "carrierAssigned": {
                        "type": "string",
                        "description": "Additional identification key assigned by the carrier used to identify a shipment.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Collection of References that can be included in the shipment"
            },
            "ShipmentRelationType": {
                "title": "ShipmentRelationType",
                "enum": [
                    "sender",
                    "receiver",
                    "thirdParty",
                    "dutiesAndTaxes"
                ],
                "type": "string",
                "description": "Relation type of account"
            },
            "ShipmentStatus": {
                "title": "ShipmentStatus",
                "enum": [
                    "created",
                    "labelling",
                    "ordered",
                    "confirmed",
                    "canceled",
                    "declined",
                    "completed",
                    "delivered"
                ],
                "type": "string",
                "description": "Status of a shipment"
            },
            "ShipmentSummary": {
                "title": "ShipmentSummary",
                "required": [
                    "detailsPath",
                    "id",
                    "pickupRequested",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "id": {
                        "title": "Guid",
                        "type": "string",
                        "description": "The identifier of the shipment",
                        "format": "uuid"
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The shipper-defined reference to the shipment"
                    },
                    "detailsPath": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The API path to obtain all details of the shipment",
                        "format": "uri"
                    },
                    "pickupRequested": {
                        "type": "boolean",
                        "description": "Signifies if the shipment has been requested to be picked up"
                    }
                },
                "additionalProperties": false,
                "description": "A summary of a shipment"
            },
            "SignatureForDelivery": {
                "title": "SignatureForDelivery",
                "enum": [
                    "none",
                    "consigneeOnly",
                    "indirect",
                    "adult",
                    "noSignatureRequired"
                ],
                "type": "string",
                "description": "Signature delivery options"
            },
            "State": {
                "title": "State",
                "enum": [
                    "requested",
                    "accepted",
                    "refused",
                    "rejected",
                    "started",
                    "failed",
                    "cancelled",
                    "completed",
                    "arrived",
                    "collected",
                    "planned",
                    "delayed",
                    "transport",
                    "etaUpdate",
                    "hubActivity",
                    "atDestinationHub",
                    "handoverToOtherCarrier",
                    "available",
                    "inProgress",
                    "released",
                    "rescheduled",
                    "returnToSender",
                    "completedPartly",
                    "arrivalFailed",
                    "availableForCollection",
                    "returnedToSender",
                    "fundsCollected",
                    "fundsTransferred",
                    "missing",
                    "damaged",
                    "reembursed",
                    "other"
                ],
                "type": "string",
                "description": "The state a Viya.Core.Enumerations.Tracking.v1.TrackingEventStandardizedCode belongs to."
            },
            "StateDetail": {
                "title": "StateDetail",
                "enum": [
                    "noActivity",
                    "incorrectInformation",
                    "addressChange",
                    "serviceLeveLChange",
                    "incotermChange",
                    "weightOrDimensionChange",
                    "cannotChangeAnymore",
                    "commercial",
                    "customerPickup",
                    "customerPickupDamaged",
                    "customerPickupIncomplete",
                    "residentialPickup",
                    "scheduled",
                    "rescheduledOnRequestOfRecipient",
                    "rescheduledOnRequestOfShipper",
                    "rescheduledOnRequestOfCarrier",
                    "rescheduled",
                    "incomplete",
                    "damaged",
                    "locationClosed",
                    "locationCannotBeReached",
                    "goodsNotReady",
                    "goodsLost",
                    "incompleteInformation",
                    "inHub",
                    "inTransit",
                    "missedPickupWindow",
                    "bookedAfterPickupWindow",
                    "traffic",
                    "waitingForConsignment",
                    "waitingToBeCompleted",
                    "byShipper",
                    "byCarrier",
                    "byRecipient",
                    "noPartyIndicated",
                    "arrived",
                    "departed",
                    "departedDamaged",
                    "departedPartiallyMissing",
                    "incorrectOrMissingInformation",
                    "pendingDutiesTaxesPaymentRecipient",
                    "pendingDutiesTaxesPaymentShipper",
                    "carrierDelayed",
                    "additionalInformationRequiredRecipient",
                    "destroyedByRegulation",
                    "missingContactDetails",
                    "noResponseFromRecipient",
                    "onRequestOfCarrier",
                    "onRequestOfRecipient",
                    "arrivalNoticeProvided",
                    "outForDelivery",
                    "shortDistance",
                    "unloaded",
                    "missing",
                    "atNeighbour",
                    "atReceiver",
                    "atCommercialLocation",
                    "atPlaceUnattended",
                    "withPermissionToLeaveGoods",
                    "manuallyRegistered",
                    "consgineeIndicatesSurplus",
                    "consigneeIndicatesMissing",
                    "delayed",
                    "locationUnavailable",
                    "contactCarrier",
                    "absentRecipient",
                    "recipientClosed",
                    "noValidRecipient",
                    "accessCodeMissing",
                    "additionalEquipmentRequired",
                    "refusedByRecipientRequestedOtherDeliveryDate",
                    "refusedByRecipient",
                    "refusedByRecipientIncorrectContactDetails",
                    "refusedByRecipientDamaged",
                    "refusedByRecipientNotOrdered",
                    "refusedByRecipientMissingDocuments",
                    "refusedByRecipientInventory",
                    "refusedByRecipientLateDelivery",
                    "refusedByRecipientShipmentIncomplete",
                    "refusedByRecipientIncompleteDueToMissing",
                    "refusedByRecipientCancelled",
                    "waitingTimeExceeded",
                    "recipientMoved",
                    "parcelShopClosed",
                    "cannotBeReached",
                    "reminder",
                    "notCollected",
                    "noSpaceAvailable",
                    "noEmptyLockerAvailable",
                    "doesNotFitInLocker",
                    "byCustomer",
                    "atUnloadingIntermediateHub",
                    "underInvestigationCarrier",
                    "underInvestigationShipper",
                    "underInvestigationRecipient",
                    "lost",
                    "underInvestigation",
                    "requiresInputShipper",
                    "requiresInputReceiver",
                    "returnToSender",
                    "destroyed",
                    "destroyedOnRequestOfShipper",
                    "delivered",
                    "bankHoliday",
                    "administrativeRectivication",
                    "deliveryAppointmentRequired",
                    "equipmentFailure",
                    "forceMajeure",
                    "incorrectLabelling",
                    "incorrectAddress",
                    "incorrectShipmentInformation",
                    "industrialDispute",
                    "lackOfTransportCapacity",
                    "lackOfUnloadingSpace",
                    "missingDocuments",
                    "missingDocumentsFromShipper",
                    "missingDocumentsFromCarrier",
                    "notLoadedAsBondedGoods",
                    "notLoadedAsDangerousGoods",
                    "oversizeOverweight",
                    "wrongRouting",
                    "temperatureExceeded",
                    "waitingForEdi",
                    "missedConnection",
                    "generalTimeConstraint",
                    "unknown",
                    "accident",
                    "contactCarrierMissingInformation",
                    "contactCarrierByShipper",
                    "contactCarrierByRecipient",
                    "missingUnderInvestigation",
                    "weatherConditions",
                    "securityChecks",
                    "destroyedHeavilyDamaged",
                    "uncollectedFromPickupPoint",
                    "refusedAtDelivery",
                    "unknownAddress",
                    "partially",
                    "other",
                    "incident",
                    "cancelledByShipper",
                    "customsInspectionResult",
                    "additionalInformationRequiredFromShipper",
                    "additionalInformationRequiredFromRecipient"
                ],
                "type": "string",
                "description": "The extra details on the state a Viya.Core.Enumerations.Tracking.v1.TrackingEventStandardizedCode belongs to."
            },
            "StringComparison": {
                "title": "StringComparison",
                "required": [
                    "$type",
                    "aggregate",
                    "operator",
                    "value"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseComparison"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "string"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The string value to compare against"
                    },
                    "operator": {
                        "title": "StringComparisonOperator",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StringComparisonOperator"
                            }
                        ],
                        "description": "The operator to use for string comparison\n- `eq`: equal to\n- `ne`: not equal to\n- `gt`: greater than (using alphanumeric sorting)\n- `gte`: greater than or equal to\n- `lt`: less than\n- `lte`: less than or equal to\n- `in`: field content is substring of given value\n- `nin`: field content is not a substring of given value\n- `co`: given value is substring of field content\n- `nco`: given value is not a substring of field content"
                    },
                    "aggregate": {
                        "title": "AggregationType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AggregationType"
                            }
                        ],
                        "description": "(optional) Type of aggregation when the `FieldPath` yields multiple results. Default: `single`.\n\n- `single`: returns `true` if a single result is valid; will throw if no or multiple results are found\n- `all`: returns `true` if all results are valid, `true` if no results are found\n- `any`: returns `true` at least one result is valid, `false` if no results are found\n- `none`: returns `true` if none of the results are valid, `true` if no results are found"
                    }
                },
                "additionalProperties": false,
                "description": "Compare against a string value"
            },
            "StringComparisonOperator": {
                "title": "StringComparisonOperator",
                "enum": [
                    "eq",
                    "ne",
                    "gt",
                    "gte",
                    "lt",
                    "lte",
                    "in",
                    "nin",
                    "co",
                    "nco"
                ],
                "type": "string"
            },
            "StringListComparison": {
                "title": "StringListComparison",
                "required": [
                    "$type",
                    "aggregate",
                    "operator",
                    "value"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseComparison"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "stringList"
                        ],
                        "type": "string"
                    },
                    "value": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "The string list value to compare against"
                    },
                    "operator": {
                        "title": "StringListComparisonOperator",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/StringListComparisonOperator"
                            }
                        ],
                        "description": "The operator to use for comparison\n- `in`: is in the list\n- `nin`: is not in the list\n- `inAny`: is part of any string in the list\n- `ninAny`: is not part of any string in the list\n- `coAny`: any string in the list is part of the field value\n- `ncoAny`: no string in the list is part of the field value"
                    },
                    "aggregate": {
                        "title": "AggregationType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AggregationType"
                            }
                        ],
                        "description": "(optional) Type of aggregation when the `FieldPath` yields multiple results. Default: `single`.\n\n- `single`: returns `true` if a single result is valid; will throw if no or multiple results are found\n- `all`: returns `true` if all results are valid, `true` if no results are found\n- `any`: returns `true` at least one result is valid, `false` if no results are found\n- `none`: returns `true` if none of the results are valid, `true` if no results are found"
                    }
                },
                "additionalProperties": false,
                "description": "String list condition"
            },
            "StringListComparisonOperator": {
                "title": "StringListComparisonOperator",
                "enum": [
                    "in",
                    "nin",
                    "inAny",
                    "ninAny",
                    "coAny",
                    "ncoAny"
                ],
                "type": "string"
            },
            "TemplateCondition": {
                "title": "TemplateCondition",
                "required": [
                    "$type",
                    "templateReference",
                    "variableValues"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/BaseCondition"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "template"
                        ],
                        "type": "string"
                    },
                    "templateReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The reference to the template that this condition is based on"
                    },
                    "variableValues": {
                        "title": "StringObjectDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "title": "Object"
                        },
                        "description": "The variable values to use in the template"
                    }
                },
                "additionalProperties": false,
                "description": "A condition based on a template"
            },
            "TimeWindowDelivery": {
                "title": "TimeWindowDelivery",
                "type": "object",
                "properties": {
                    "planned": {
                        "title": "LocalDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalDateRange"
                            }
                        ],
                        "description": "A date range given in local datetime (without timezone information)",
                        "nullable": true
                    },
                    "requested": {
                        "title": "LocalDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/LocalDateRange"
                            }
                        ],
                        "description": "A date range given in local datetime (without timezone information)",
                        "nullable": true
                    },
                    "fixed": {
                        "type": "boolean",
                        "description": "Is the delivery time a fixed time",
                        "nullable": true
                    },
                    "onlySaturday": {
                        "type": "boolean",
                        "description": "Indicates that the shipment should only be delivered on a Saturday",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Time range for delivery of the shipment"
            },
            "TimeWindowPickup": {
                "title": "TimeWindowPickup",
                "type": "object",
                "properties": {
                    "planned": {
                        "title": "AbsoluteDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AbsoluteDateRange"
                            }
                        ],
                        "description": "A date range given in absolute datetime (including timezone information)",
                        "nullable": true
                    },
                    "requested": {
                        "title": "AbsoluteDateRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/AbsoluteDateRange"
                            }
                        ],
                        "description": "A date range given in absolute datetime (including timezone information)",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Time window related to the pickup/collection moment"
            },
            "TimeWindows": {
                "title": "TimeWindows",
                "type": "object",
                "properties": {
                    "pickup": {
                        "title": "TimeWindowPickup",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeWindowPickup"
                            }
                        ],
                        "description": "Date range regarding the pickup/collection moment",
                        "nullable": true
                    },
                    "delivery": {
                        "title": "TimeWindowDelivery",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TimeWindowDelivery"
                            }
                        ],
                        "description": "Date range regarding the delivery moment",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Time windows for pickup and delivery of the shipment"
            },
            "TrackingEvent": {
                "title": "TrackingEvent",
                "required": [
                    "eventDateTime",
                    "eventType",
                    "references"
                ],
                "type": "object",
                "properties": {
                    "eventDateTime": {
                        "title": "DateTimeOffset",
                        "type": "string",
                        "description": "Time at which this tracking event occured. NOTE: Time zone specification is mandatory",
                        "format": "date-time"
                    },
                    "estimatedDateTimeOfArrival": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "Estimated Date that the item is expected to be delivered. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "references": {
                        "title": "TrackingEventReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventReferenceCollection"
                            }
                        ],
                        "description": "Any reference information pertaining to the tracking request"
                    },
                    "eventType": {
                        "title": "CodeRequiredDescription",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CodeRequiredDescription"
                            }
                        ],
                        "description": "The type of tracking event provided by the carrier"
                    },
                    "reason": {
                        "title": "CodeDescription",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CodeDescription"
                            }
                        ],
                        "description": "The reason that the tracking event occured",
                        "nullable": true
                    },
                    "scannedBy": {
                        "type": "string",
                        "description": "Name of the entity that scanned the shipment when this tracking event occured",
                        "nullable": true
                    },
                    "scanText": {
                        "type": "string",
                        "description": "Any descriptive text accompanying the tracking event",
                        "nullable": true
                    },
                    "scanLocation": {
                        "title": "TrackingEventScanLocation",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventScanLocation"
                            }
                        ],
                        "description": "Address where the scan occured",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details of a tracking event"
            },
            "TrackingEventHashCollection": {
                "title": "TrackingEventHashCollection",
                "required": [
                    "logisticEntityHash",
                    "trackingEventHash"
                ],
                "type": "object",
                "properties": {
                    "logisticEntityHash": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The hash referring to the Logistic Entity (shipment/consignment or handling unit) that this tracking event is related to. \n\nIt should incorporate the following pieces of information: \n\n- The carrier profile reference\n- The Logistic Entity reference or TrackingReference\n- The Logistic Entity type"
                    },
                    "trackingEventHash": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The hash referring to the tracking event itself. \n\nIt should incorporate the following pieces of information: \n\n- The carrier profile reference\n- The tracking event object"
                    }
                },
                "additionalProperties": false,
                "description": "The event and logistic entity hashes associated with a tracking event"
            },
            "TrackingEventInvalidResponse": {
                "title": "TrackingEventInvalidResponse",
                "required": [
                    "count",
                    "errorsAndIndices"
                ],
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "description": "Number of invalid events",
                        "format": "int32"
                    },
                    "errorsAndIndices": {
                        "title": "StringInt32ListDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "title": "Int32List",
                            "type": "array",
                            "items": {
                                "type": "integer",
                                "format": "int32"
                            }
                        },
                        "description": "Indices of events in the original request that were invalid, grouped by error message"
                    }
                },
                "additionalProperties": false,
                "description": "A summary of invalid tracking event inputs"
            },
            "TrackingEventMappingOption": {
                "title": "TrackingEventMappingOption",
                "required": [
                    "description",
                    "eventTypeCode",
                    "reasonCode"
                ],
                "type": "object",
                "properties": {
                    "eventTypeCode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The event type code"
                    },
                    "reasonCode": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The event reason code"
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Description of the mapping option"
                    }
                },
                "additionalProperties": false,
                "description": "A single tracking event mapping option"
            },
            "TrackingEventOrigin": {
                "title": "TrackingEventOrigin",
                "type": "object",
                "properties": {
                    "downloadId": {
                        "type": "string",
                        "description": "A unique identifier of the event or its originating batch, to allow for generation of a download link",
                        "nullable": true
                    },
                    "integrationPath": {
                        "type": "string",
                        "description": "Optional Stitch integration path",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details on where the tracking event originated from"
            },
            "TrackingEventReferenceCollection": {
                "title": "TrackingEventReferenceCollection",
                "type": "object",
                "properties": {
                    "carrierProfile": {
                        "type": "string",
                        "description": "The carrier profile that this event is coming from",
                        "nullable": true
                    },
                    "shipment": {
                        "title": "TrackingEventUnitReference",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventUnitReference"
                            }
                        ],
                        "description": "Any reference information pertaining to a shipment or consignment.\nReferences from both logistical entities belong in this object.\nDespite it's name \"shipment\"",
                        "nullable": true
                    },
                    "handlingUnit": {
                        "title": "TrackingEventUnitReference",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventUnitReference"
                            }
                        ],
                        "description": "Any reference information pertaining to the handling unit",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "References of the units that are being tracked"
            },
            "TrackingEventRequest": {
                "title": "TrackingEventRequest",
                "required": [
                    "events"
                ],
                "type": "object",
                "properties": {
                    "origin": {
                        "title": "TrackingEventOrigin",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventOrigin"
                            }
                        ],
                        "description": "Information regarding the origin of this event",
                        "nullable": true
                    },
                    "mappingReferences": {
                        "title": "MappingReferences",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/MappingReferences"
                            }
                        ],
                        "description": "Any references to mappings that should be used for this tracking event",
                        "nullable": true
                    },
                    "events": {
                        "title": "TrackingEventList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/TrackingEvent"
                        },
                        "description": "The actual tracking events"
                    }
                },
                "additionalProperties": false,
                "description": "Extended tracking event"
            },
            "TrackingEventScanLocation": {
                "title": "TrackingEventScanLocation",
                "required": [
                    "countryCode"
                ],
                "type": "object",
                "properties": {
                    "companyName": {
                        "type": "string",
                        "description": "Name of the company, for B2C this can be left empty",
                        "nullable": true
                    },
                    "addressLine1": {
                        "type": "string",
                        "description": "Street name / PO Box",
                        "nullable": true
                    },
                    "addressLine2": {
                        "type": "string",
                        "description": "Apartment, suite, unit, building floor etc.",
                        "nullable": true
                    },
                    "addressLine3": {
                        "type": "string",
                        "description": "Additional address line for extra details",
                        "nullable": true
                    },
                    "streetNumber": {
                        "type": "string",
                        "description": "Street/house number to identify a specific building or apartment in a street",
                        "nullable": true
                    },
                    "city": {
                        "type": "string",
                        "description": "City of address",
                        "nullable": true
                    },
                    "stateCode": {
                        "type": "string",
                        "description": "State code used primarily for US, Canada, Italy",
                        "nullable": true
                    },
                    "postCode": {
                        "type": "string",
                        "description": "Postcode/zipcode",
                        "nullable": true
                    },
                    "countryCode": {
                        "title": "CountryCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryCode"
                            }
                        ],
                        "description": "2-digit ISO-3166 Country code"
                    },
                    "airportCode": {
                        "type": "string",
                        "description": "Unique reference to an airport where the scan occured",
                        "nullable": true
                    },
                    "seaportCode": {
                        "type": "string",
                        "description": "Unique reference to a seaport where the scan occured",
                        "nullable": true
                    },
                    "depotCode": {
                        "type": "string",
                        "description": "Unique reference to a depot where the scan occured",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details of a location where a tracking scan occured"
            },
            "TrackingEventStandardizedCode": {
                "title": "TrackingEventStandardizedCode",
                "enum": [
                    "BookingRequested",
                    "BookingAccepted",
                    "BookingRefused",
                    "BookingFailed",
                    "BookingCancelledNoActivity",
                    "BookingCancelledIncorrectInformation",
                    "BookingCancelledOther",
                    "BookingChangeRequestedAddressChange",
                    "BookingChangeRequestedServiceLeveLChange",
                    "BookingChangeRequestedIncotermChange",
                    "BookingChangeRequestedWeightOrDimensionChange",
                    "BookingChangeRequestedOther",
                    "BookingChangeAccepted",
                    "BookingChangeRefusedCannotChangeAnymore",
                    "BookingChangeRefusedOther",
                    "BookingChangeFailed",
                    "BookingChangeCompleted",
                    "BookingChangeCancelled",
                    "PickupParcelShopRequested",
                    "PickupParcelShopCancelled",
                    "PickupParcelShopArrived",
                    "PickupParcelShopCollected",
                    "PickupRequested",
                    "PickupRequestedCommercial",
                    "PickupRequestedCustomerPickup",
                    "PickupRequestedCustomerPickupDamaged",
                    "PickupRequestedCustomerPickupIncomplete",
                    "PickupRequestedResidentialPickup",
                    "PickupPlannedScheduled",
                    "PickupPlannedRescheduledOnRequestOfRecipient",
                    "PickupPlannedRescheduledOnRequestOfShipper",
                    "PickupPlannedRescheduledOnRequestOfCarrier",
                    "PickupPlannedRescheduled",
                    "PickupPlannedOther",
                    "PickupArrived",
                    "PickupCompleted",
                    "PickupCompletedIncomplete",
                    "PickupCompletedDamaged",
                    "PickupCompletedCustomerPickup",
                    "PickupFailedLocationClosed",
                    "PickupFailedLocationCannotBeReached",
                    "PickupFailedGoodsNotReady",
                    "PickupFailedGoodsLost",
                    "PickupFailedIncompleteInformation",
                    "PickupFailedMissedPickupWindow",
                    "PickupFailedOther",
                    "PickupDelayed",
                    "PickupDelayedBookedAfterPickupWindow",
                    "PickupDelayedTraffic",
                    "PickupDelayedWaitingForConsignment",
                    "PickupDelayedWaitingToBeCompleted",
                    "PickupCancelledByShipper",
                    "PickupCancelledByCarrier",
                    "PickupCancelledByRecipient",
                    "PickupCancelledNoPartyIndicated",
                    "TransitTransport",
                    "TransitEtaUpdate",
                    "TransitHubActivity",
                    "TransitHubActivityArrived",
                    "TransitHubActivityDeparted",
                    "TransitHubActivityDepartedDamaged",
                    "TransitHubActivityDepartedPartiallyMissing",
                    "TransitAtDestinationHub",
                    "TransitHandoverToOtherCarrier",
                    "CustomsAvailable",
                    "CustomsInProgress",
                    "CustomsDelayedIncorrectOrMissingInformation",
                    "CustomsDelayedIncomplete",
                    "CustomsDelayedPendingDutiesTaxesPaymentRecipient",
                    "CustomsDelayedPendingDutiesTaxesPaymentShipper",
                    "CustomsDelayedCarrierDelayed",
                    "CustomsDelayedAdditionalInformationRequiredRecipient",
                    "CustomsDelayedOther",
                    "CustomsFailed",
                    "CustomsFailedDestroyedByRegulation",
                    "CustomsReleased",
                    "DeliveryAppointmentRequested",
                    "DeliveryAppointmentPlanned",
                    "DeliveryAppointmentFailed",
                    "DeliveryAppointmentFailedMissingContactDetails",
                    "DeliveryAppointmentFailedNoResponseFromRecipient",
                    "DeliveryAppointmentRescheduled",
                    "DeliveryAppointmentRescheduledOnRequestOfCarrier",
                    "DeliveryAppointmentRescheduledOnRequestOfRecipient",
                    "DeliveryAppointmentCancelled",
                    "DeliveryAppointmentCancelledOnRequestOfCarrier",
                    "DeliveryAppointmentCancelledOnRequestOfRecipient",
                    "DeliveryPlannedRescheduledOnRequestOfRecipient",
                    "DeliveryPlannedRescheduledOnRequestOfShipper",
                    "DeliveryPlannedRescheduledOnRequestOfCarrier",
                    "DeliveryPlannedRescheduled",
                    "DeliveryPlannedArrivalNoticeProvided",
                    "DeliveryPlannedOther",
                    "DeliveryEtaUpdate",
                    "DeliveryInProgressOutForDelivery",
                    "DeliveryInProgressShortDistance",
                    "DeliveryInProgressArrived",
                    "DeliveryInProgressUnloaded",
                    "DeliveryInProgress",
                    "DeliveryCompletedPartly",
                    "DeliveryCompletedPartlyMissing",
                    "DeliveryCompletedPartlyDamaged",
                    "DeliveryCompletedPartlyCustomerPickup",
                    "DeliveryCompleted",
                    "DeliveryCompletedAtNeighbour",
                    "DeliveryCompletedAtReceiver",
                    "DeliveryCompletedAtCommercialLocation",
                    "DeliveryCompletedAtPlaceUnattended",
                    "DeliveryCompletedWithPermissionToLeaveGoods",
                    "DeliveryCompletedManuallyRegistered",
                    "DeliveryCompletedOther",
                    "DeliveryCompletedConsgineeIndicatesSurplus",
                    "DeliveryCompletedConsigneeIndicatesMissing",
                    "DeliveryCompletedDelayed",
                    "DeliveryFailedLocationUnavailable",
                    "DeliveryFailedContactCarrier",
                    "DeliveryFailedAbsentRecipient",
                    "DeliveryFailedRecipientClosed",
                    "DeliveryFailedNoValidRecipient",
                    "DeliveryFailedAccessCodeMissing",
                    "DeliveryFailedOther",
                    "DeliveryFailedAdditionalEquipmentRequired",
                    "DeliveryFailedRefusedByRecipientRequestedOtherDeliveryDate",
                    "DeliveryFailedRefusedByRecipient",
                    "DeliveryFailedRefusedByRecipientIncorrectContactDetails",
                    "DeliveryFailedDamaged",
                    "DeliveryFailedRefusedByRecipientDamaged",
                    "DeliveryFailedRefusedByRecipientNotOrdered",
                    "DeliveryFailedRefusedByRecipientMissingDocuments",
                    "DeliveryFailedRefusedByRecipientInventory",
                    "DeliveryFailedRefusedByRecipientLateDelivery",
                    "DeliveryFailedRefusedByRecipientShipmentIncomplete",
                    "DeliveryFailedRefusedByRecipientIncompleteDueToMissing",
                    "DeliveryFailedRefusedByRecipientCancelled",
                    "DeliveryFailedWaitingTimeExceeded",
                    "DeliveryFailedRecipientMoved",
                    "DeliveryParcelShopPlanned",
                    "DeliveryParcelShopArrived",
                    "DeliveryParcelShopArrivalFailedParcelShopClosed",
                    "DeliveryParcelShopArrivalFailedCannotBeReached",
                    "DeliveryParcelShopArrivalFailedOther",
                    "DeliveryParcelShopAvailableForCollection",
                    "DeliveryParcelShopAvailableForCollectionReminder",
                    "DeliveryParcelShopCollected",
                    "DeliveryParcelShopReturnedToSenderNotCollected",
                    "DeliveryParcelShopReturnedToSenderNoSpaceAvailable",
                    "DeliveryLockerPlanned",
                    "DeliveryLockerArrivalFailedNoEmptyLockerAvailable",
                    "DeliveryLockerArrivalFailedDoesNotFitInLocker",
                    "DeliveryLockerArrivalFailedOther",
                    "DeliveryLockerAvailableForCollection",
                    "DeliveryLockerAvailableForCollectionReminder",
                    "DeliveryLockerCollected",
                    "DeliveryLockerReturnedToSender",
                    "ReturnRequested",
                    "ReturnCollected",
                    "ReturnCancelled",
                    "ReturnCancelledByCustomer",
                    "ReturnCancelledByShipper",
                    "ReturnOther",
                    "ReturnParcelShopRequested",
                    "ReturnParcelShopAvailableForCollection",
                    "ReturnParcelShopCollected",
                    "ReturnParcelShopCancelled",
                    "CashOnDeliveryRequested",
                    "CashOnDeliveryFundsCollected",
                    "CashOnDeliveryFailed",
                    "CashOnDeliveryFundsTransferred",
                    "ExceptionMissing",
                    "ExceptionMissingAtUnloadingIntermediateHub",
                    "ExceptionMissingUnderInvestigationCarrier",
                    "ExceptionMissingUnderInvestigationShipper",
                    "ExceptionMissingUnderInvestigationRecipient",
                    "ExceptionMissingLost",
                    "ExceptionDamagedinTransit",
                    "ExceptionDamagedinHub",
                    "ExceptionDamagedUnderInvestigation",
                    "ExceptionDamagedUnderInvestigationCarrier",
                    "ExceptionDamagedRequiresInputShipper",
                    "ExceptionDamagedRequiresInputReceiver",
                    "ExceptionDamagedReturnToSender",
                    "ExceptionDamagedDestroyed",
                    "ExceptionDamagedDestroyedOnRequestOfShipper",
                    "ExceptionDamagedDestroyedByRegulation",
                    "ExceptionDamagedDelivered",
                    "ExceptionDelayedBankHoliday",
                    "ExceptionDelayedAdministrativeRectivication",
                    "ExceptionDelayedAdditionalEquipmentRequired",
                    "ExceptionDelayedDeliveryAppointmentRequired",
                    "ExceptionDelayedEquipmentFailure",
                    "ExceptionDelayedForceMajeure",
                    "ExceptionDelayedIncorrectLabelling",
                    "ExceptionDelayedIncorrectAddress",
                    "ExceptionDelayedIncorrectShipmentInformation",
                    "ExceptionDelayedIndustrialDispute",
                    "ExceptionDelayedLackOfTransportCapacity",
                    "ExceptionDelayedLackOfUnloadingSpace",
                    "ExceptionDelayedMissingDocuments",
                    "ExceptionDelayedMissingDocumentsFromShipper",
                    "ExceptionDelayedMissingDocumentsFromCarrier",
                    "ExceptionDelayedNotLoadedAsBondedGoods",
                    "ExceptionDelayedNotLoadedAsDangerousGoods",
                    "ExceptionDelayedOversizeOverweight",
                    "ExceptionDelayedWrongRouting",
                    "ExceptionDelayedTemperatureExceeded",
                    "ExceptionDelayedWaitingForEdi",
                    "ExceptionDelayedMissedConnection",
                    "ExceptionDelayedGeneralTimeConstraint",
                    "ExceptionDelayedUnknown",
                    "ExceptionDelayedOther",
                    "ExceptionDelayedAccident",
                    "ExceptionDelayedContactCarrierMissingInformation",
                    "ExceptionDelayedContactCarrierByShipper",
                    "ExceptionDelayedContactCarrierByRecipient",
                    "ExceptionDelayedMissing",
                    "ExceptionDelayedMissingUnderInvestigation",
                    "ExceptionDelayedWeatherConditions",
                    "ExceptionDelayedSecurityChecks",
                    "ExceptionDelayedDestroyedHeavilyDamaged",
                    "ExceptionDelayedDestroyedOnRequestOfShipper",
                    "ExceptionReturnToSenderUncollectedFromPickupPoint",
                    "ExceptionReturnToSenderRefusedAtDelivery",
                    "ExceptionReturnToSenderUnknownAddress",
                    "ExceptionReturnToSenderPartially",
                    "ExceptionReturnToSenderOther",
                    "ExceptionReturnToSenderDamaged",
                    "ExceptionReturnToSenderIncident",
                    "ExceptionReturnToSenderCancelledByShipper",
                    "ExceptionReturnToSenderCustomsInspectionResult",
                    "ExceptionOther",
                    "ClaimRequested",
                    "ClaimPlanned",
                    "ClaimStarted",
                    "ClaimDelayed",
                    "ClaimDelayedAdditionalInformationRequiredFromShipper",
                    "ClaimDelayedAdditionalInformationRequiredFromRecipient",
                    "ClaimRejected",
                    "ClaimAccepted",
                    "ClaimCancelledByShipper",
                    "ClaimCancelledByCarrier",
                    "ClaimCancelledByRecipient",
                    "ClaimReembursed",
                    "Other"
                ],
                "type": "string",
                "description": "Tracking event codes standardization for Viya\nEvery carrier has their own set of tracking event codes. Each integration in Viya maps these to a standard set of tracking event codes. We provide both the carrier-specific codes and the standard codes so you can choose to use our experience or customize to fit your specific use-case."
            },
            "TrackingEventStandardizedCodeDefinition": {
                "title": "TrackingEventStandardizedCodeDefinition",
                "required": [
                    "description",
                    "value"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "title": "TrackingEventStandardizedCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventStandardizedCode"
                            }
                        ],
                        "description": "Tracking event codes standardization for Viya\nEvery carrier has their own set of tracking event codes. Each integration in Viya maps these to a standard set of tracking event codes. We provide both the carrier-specific codes and the standard codes so you can choose to use our experience or customize to fit your specific use-case."
                    },
                    "description": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Description of the mapping, typically provided by the carrier\n"
                    },
                    "metadata": {
                        "title": "StringStringDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Free key/value pairs that can be used on - for example - the https://viya.me website. \n\nThese fields do not influence the mapping process itself.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "The value returned by the mapper"
            },
            "TrackingEventStandardizedCodeMapperDefinition": {
                "title": "TrackingEventStandardizedCodeMapperDefinition",
                "required": [
                    "keyTemplate",
                    "mapping",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "keyTemplate": {
                        "minLength": 1,
                        "pattern": "^{{eventType.code}}-{{reason.code}}$",
                        "type": "string",
                        "description": "This template is used to build the key before the actual lookup is done in the mapping property. \n\nThis allows you to rely on a flexible amount of fields in your event. \n\n**NOTE**: We have not implemented templating yet, so you must always put here: `{{eventType.code}}-{{reason.code}}`"
                    },
                    "allowWildcards": {
                        "type": "boolean",
                        "description": "Allow the use of wildcards (indicated by '*') in your mapping keys, \n\nthis can be used for default fallback scenarios for situations where the reason.code is not very strictly defined. \n\nYou don't need to specify this value, the default is false.",
                        "nullable": true
                    },
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "This must be the name of the parent folder (by convention). \n\nThe C# code that performs the actual mapping (`Shipping`) downloads these from here."
                    },
                    "metadata": {
                        "title": "StringStringDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "type": "string"
                        },
                        "description": "Free key/value pairs that can be used on - for example - the https://viya.me website. \n\nThese fields do not influence the mapping process itself.",
                        "nullable": true
                    },
                    "mapping": {
                        "title": "StringTrackingEventStandardizedCodeDefinitionDictionary",
                        "type": "object",
                        "additionalProperties": {
                            "$ref": "#/components/schemas/TrackingEventStandardizedCodeDefinition"
                        },
                        "description": "A map that defines the keys (must be unique!) and their resulting StandardizedCode value. \n\nThe key is typically generated by running the event through the above defined keyTemplate property."
                    }
                },
                "additionalProperties": false,
                "description": "Full definition of a key-to-value mapping"
            },
            "TrackingEventStandardizedCodeMapperDefinitionSummary": {
                "title": "TrackingEventStandardizedCodeMapperDefinitionSummary",
                "type": "object",
                "properties": {
                    "eTag": {
                        "type": "string",
                        "description": "ETag hash of the mapper used",
                        "nullable": true
                    },
                    "commitHashShort": {
                        "type": "string",
                        "description": "Short hash of the commit of the mapper file used",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Details on the version of the mapper used"
            },
            "TrackingEventStandardizedCodeMapping": {
                "title": "TrackingEventStandardizedCodeMapping",
                "required": [
                    "request"
                ],
                "type": "object",
                "properties": {
                    "request": {
                        "title": "TrackingEventStandardizedCodeMappingRequest",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventStandardizedCodeMappingRequest"
                            }
                        ],
                        "description": "Details on which mapper was requested"
                    },
                    "result": {
                        "title": "TrackingEventStandardizedCodeMappingResult",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventStandardizedCodeMappingResult"
                            }
                        ],
                        "description": "The value returned by the mapper",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Mapping definition"
            },
            "TrackingEventStandardizedCodeMappingRequest": {
                "title": "TrackingEventStandardizedCodeMappingRequest",
                "required": [
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string",
                        "description": "Reference to the requested mapper"
                    }
                },
                "additionalProperties": false,
                "description": "Details on which mapper was requested"
            },
            "TrackingEventStandardizedCodeMappingResult": {
                "title": "TrackingEventStandardizedCodeMappingResult",
                "required": [
                    "mappedOn",
                    "mapper"
                ],
                "type": "object",
                "properties": {
                    "value": {
                        "title": "TrackingEventStandardizedCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventStandardizedCode"
                            }
                        ],
                        "description": "Tracking event codes standardization for Viya\nEvery carrier has their own set of tracking event codes. Each integration in Viya maps these to a standard set of tracking event codes. We provide both the carrier-specific codes and the standard codes so you can choose to use our experience or customize to fit your specific use-case.",
                        "nullable": true
                    },
                    "mapper": {
                        "title": "TrackingEventStandardizedCodeMapperDefinitionSummary",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventStandardizedCodeMapperDefinitionSummary"
                            }
                        ],
                        "description": "Details on the version of the mapper used"
                    },
                    "mappedOn": {
                        "title": "DateTime",
                        "type": "string",
                        "description": "Date the mapping was performed. NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    }
                },
                "additionalProperties": false,
                "description": "The value returned by the mapper"
            },
            "TrackingEventUnitReference": {
                "title": "TrackingEventUnitReference",
                "type": "object",
                "properties": {
                    "reference": {
                        "type": "string",
                        "description": "Unique reference provided by the shipper",
                        "nullable": true
                    },
                    "trackingReference": {
                        "type": "string",
                        "description": "Tracking reference provided by the carrier",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "References of the unit that is being tracked"
            },
            "TrackingEventWithMappedCodes": {
                "title": "TrackingEventWithMappedCodes",
                "required": [
                    "eventDateTime",
                    "eventType",
                    "references"
                ],
                "type": "object",
                "properties": {
                    "eventDateTime": {
                        "title": "DateTimeOffset",
                        "type": "string",
                        "description": "Time at which this tracking event occured. NOTE: Time zone specification is mandatory",
                        "format": "date-time"
                    },
                    "estimatedDateTimeOfArrival": {
                        "title": "DateTimeNullable",
                        "type": "string",
                        "description": "Estimated Date that the item is expected to be delivered. NOTE: Time zone specification is not allowed",
                        "format": "date-time",
                        "nullable": true
                    },
                    "references": {
                        "title": "TrackingEventReferenceCollection",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventReferenceCollection"
                            }
                        ],
                        "description": "Any reference information pertaining to the tracking request"
                    },
                    "eventType": {
                        "title": "CodeRequiredDescription",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CodeRequiredDescription"
                            }
                        ],
                        "description": "The type of tracking event provided by the carrier"
                    },
                    "reason": {
                        "title": "CodeDescription",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CodeDescription"
                            }
                        ],
                        "description": "The reason that the tracking event occured",
                        "nullable": true
                    },
                    "scannedBy": {
                        "type": "string",
                        "description": "Name of the entity that scanned the shipment when this tracking event occured",
                        "nullable": true
                    },
                    "scanText": {
                        "type": "string",
                        "description": "Any descriptive text accompanying the tracking event",
                        "nullable": true
                    },
                    "scanLocation": {
                        "title": "TrackingEventScanLocation",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventScanLocation"
                            }
                        ],
                        "description": "Address where the scan occured",
                        "nullable": true
                    },
                    "standardizedCode": {
                        "title": "TrackingEventStandardizedCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/TrackingEventStandardizedCode"
                            }
                        ],
                        "description": "Tracking event codes standardization for Viya\nEvery carrier has their own set of tracking event codes. Each integration in Viya maps these to a standard set of tracking event codes. We provide both the carrier-specific codes and the standard codes so you can choose to use our experience or customize to fit your specific use-case.",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Extension to the tracking event with mapped codes"
            },
            "TriggeredAction": {
                "title": "TriggeredAction",
                "required": [
                    "action",
                    "triggeredOn"
                ],
                "type": "object",
                "properties": {
                    "triggeredOn": {
                        "title": "DateTime",
                        "type": "string",
                        "description": "Time the action was triggered. NOTE: Time zone specification is not allowed",
                        "format": "date-time"
                    },
                    "action": {
                        "type": "string",
                        "description": "A text description of the action that was triggered"
                    }
                },
                "additionalProperties": false,
                "description": "An action that was triggered by a tracking event"
            },
            "TypedDocument": {
                "title": "TypedDocument",
                "required": [
                    "documentType",
                    "fileContent",
                    "fileExtension",
                    "fileName"
                ],
                "type": "object",
                "properties": {
                    "fileExtension": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The extension of the file, e.g. \"pdf\"",
                        "example": "\"pdf\""
                    },
                    "fileName": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The name of the file, e.g. \"my-file.pdf\"",
                        "example": "\"my-file.pdf\""
                    },
                    "fileContent": {
                        "minLength": 1,
                        "type": "string",
                        "description": "The byte content of the file encoded in base64"
                    },
                    "documentType": {
                        "title": "DocumentType",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/DocumentType"
                            }
                        ],
                        "description": "Type of document"
                    }
                },
                "additionalProperties": false,
                "description": "Document with a type field"
            },
            "UnmappedStandardizedCodeOverviewItem": {
                "title": "UnmappedStandardizedCodeOverviewItem",
                "required": [
                    "carrierProfileReference",
                    "eventCount",
                    "eventTypeCode",
                    "integrationPath",
                    "mapperReference"
                ],
                "type": "object",
                "properties": {
                    "carrierProfileReference": {
                        "type": "string"
                    },
                    "integrationPath": {
                        "type": "string"
                    },
                    "mapperReference": {
                        "type": "string"
                    },
                    "eventTypeCode": {
                        "type": "string"
                    },
                    "reasonCode": {
                        "type": "string",
                        "nullable": true
                    },
                    "eventCount": {
                        "type": "integer",
                        "format": "int32"
                    }
                },
                "additionalProperties": false,
                "description": "Model that holds an Unmapped StandardizedCode overview item"
            },
            "UpdateAddressDeterminationItem": {
                "title": "UpdateAddressDeterminationItem",
                "required": [
                    "zones"
                ],
                "type": "object",
                "properties": {
                    "condition": {
                        "title": "BaseCondition",
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/AndCondition"
                            },
                            {
                                "$ref": "#/components/schemas/CompareCondition"
                            },
                            {
                                "$ref": "#/components/schemas/OrCondition"
                            },
                            {
                                "$ref": "#/components/schemas/ReferenceCondition"
                            },
                            {
                                "$ref": "#/components/schemas/TemplateCondition"
                            }
                        ],
                        "description": "Conditions",
                        "nullable": true
                    },
                    "zones": {
                        "title": "ZoneList",
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Zone"
                        },
                        "description": "Zones for which the address may be determined"
                    }
                },
                "additionalProperties": false,
                "description": "Rules and regions associated with a single address reference (excluding the actual address reference)"
            },
            "UpdateNetworkLane": {
                "title": "UpdateNetworkLane",
                "required": [
                    "finalAddressReferences"
                ],
                "type": "object",
                "properties": {
                    "finalAddressReferences": {
                        "title": "StringList",
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "description": "References to `Final` addresses, for which the `To` address is the next destination when currently at the `From` address. \n<b> note: </b> Include `DEFAULT` to make this the default lane for any final address not specifically listed in another lane."
                    }
                },
                "additionalProperties": false,
                "description": "Updateable network lane fields"
            },
            "Volume": {
                "title": "Volume",
                "type": "object",
                "properties": {
                    "gross": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "nett": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "Weight": {
                "title": "Weight",
                "type": "object",
                "properties": {
                    "gross": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    },
                    "nett": {
                        "type": "number",
                        "format": "double",
                        "nullable": true
                    }
                },
                "additionalProperties": false
            },
            "WeightCollection": {
                "title": "WeightCollection",
                "required": [
                    "billableWeight",
                    "physicalWeight"
                ],
                "type": "object",
                "properties": {
                    "billableWeight": {
                        "title": "PricingWeight",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PricingWeight"
                            }
                        ],
                        "description": "The highest of physical-, volume- and loadmeter-weight. This is the weight on which the charges are based."
                    },
                    "physicalWeight": {
                        "title": "PricingWeight",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PricingWeight"
                            }
                        ],
                        "description": "The actual gross weight of the handling units within the shipment."
                    },
                    "volumeWeight": {
                        "title": "PricingWeight",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PricingWeight"
                            }
                        ],
                        "description": "A calculated weight based on handling unit dimensions and a volume factor that can depend on carrier/service/lane etc..",
                        "nullable": true
                    },
                    "loadMeterWeight": {
                        "title": "PricingWeight",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PricingWeight"
                            }
                        ],
                        "description": "A calculated weight based on the loadmeters determined by the carrier and a loadmeter factor that can depend on carrier/service/lane etc..",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Describes any weights associated with the rate"
            },
            "WeightUnit": {
                "title": "WeightUnit",
                "enum": [
                    "kgm",
                    "lbr"
                ],
                "type": "string",
                "description": "Unece.org list: https://unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf"
            },
            "Zone": {
                "title": "Zone",
                "required": [
                    "excluded",
                    "included",
                    "reference"
                ],
                "type": "object",
                "properties": {
                    "reference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference of the entity"
                    },
                    "label": {
                        "type": "string",
                        "description": "Label of the entity",
                        "nullable": true
                    },
                    "description": {
                        "type": "string",
                        "description": "Description of the entity",
                        "nullable": true
                    },
                    "group": {
                        "type": "string",
                        "description": "Group of the entity (optional)",
                        "nullable": true
                    },
                    "included": {
                        "title": "ZoneElementList",
                        "type": "array",
                        "items": {
                            "title": "ZoneElement",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ZoneRangeElement"
                                },
                                {
                                    "$ref": "#/components/schemas/ZoneReferenceElement"
                                }
                            ],
                            "description": "Zone range definition. Must be either a country code with optional postcode range, or another zone reference"
                        },
                        "description": "List of ranges that define the zone"
                    },
                    "excluded": {
                        "title": "ZoneElementList",
                        "type": "array",
                        "items": {
                            "title": "ZoneElement",
                            "oneOf": [
                                {
                                    "$ref": "#/components/schemas/ZoneRangeElement"
                                },
                                {
                                    "$ref": "#/components/schemas/ZoneReferenceElement"
                                }
                            ],
                            "description": "Zone range definition. Must be either a country code with optional postcode range, or another zone reference"
                        },
                        "description": "List of ranges that are explicitly excluded from the zone"
                    },
                    "type": {
                        "title": "ZoneTypeNullable",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ZoneType"
                            }
                        ],
                        "description": "Type of the zone",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Zone definition"
            },
            "ZoneElement": {
                "title": "ZoneElement",
                "type": "object",
                "additionalProperties": false,
                "description": "Zone range definition. Must be either a country code with optional postcode range, or another zone reference"
            },
            "ZoneRangeElement": {
                "title": "ZoneRangeElement",
                "required": [
                    "$type",
                    "countryCode"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ZoneElement"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "range"
                        ],
                        "type": "string"
                    },
                    "countryCode": {
                        "title": "CountryCode",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CountryCode"
                            }
                        ],
                        "description": "Country code"
                    },
                    "postCodeRange": {
                        "title": "PostCodeRange",
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/PostCodeRange"
                            }
                        ],
                        "description": "Post code range (if empty, the whole country is included)",
                        "nullable": true
                    }
                },
                "additionalProperties": false,
                "description": "Zone range definition"
            },
            "ZoneReferenceElement": {
                "title": "ZoneReferenceElement",
                "required": [
                    "$type",
                    "zoneReference"
                ],
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ZoneElement"
                    }
                ],
                "properties": {
                    "$type": {
                        "enum": [
                            "reference"
                        ],
                        "type": "string"
                    },
                    "zoneReference": {
                        "minLength": 1,
                        "type": "string",
                        "description": "Reference to another zone"
                    }
                },
                "additionalProperties": false,
                "description": "Reference to another zone"
            },
            "ZoneType": {
                "title": "ZoneType",
                "enum": [
                    "origin",
                    "destination"
                ],
                "type": "string",
                "description": "Zone type"
            }
        },
        "securitySchemes": {
            "oauth2": {
                "type": "oauth2",
                "flows": {
                    "clientCredentials": {
                        "scopes": {}
                    }
                }
            }
        }
    },
    "security": [
        {
            "oauth2": []
        }
    ]
}